{"meta":{"title":"üçß Peach","subtitle":"equne","description":"ËúúÊ°ÉÂ≠¶‰ª£Á†Å","author":"equne","url":"https://equnee.github.io","root":"/"},"pages":[],"posts":[{"title":"","slug":"font/Noto-Serif+SC","date":"2023-05-23T07:44:03.300Z","updated":"2023-05-23T07:44:17.746Z","comments":true,"path":"font/Noto-Serif+SC/","link":"","permalink":"https://equnee.github.io/font/Noto-Serif+SC/","excerpt":"","text":"/* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 200; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 300; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 400; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4chBXePl9DZ0Xe7gG9cyOj7oqOcaThrVMcaeccjhXXDsOyAEEmuIi6j7j64sLjgBtMI1z49XW4.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 500; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 600; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 700; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; } /* [4] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.4.woff2) format('woff2'); unicode-range: U+1f1e9-1f1f5, U+1f1f7-1f1ff, U+1f21a, U+1f232, U+1f234-1f237, U+1f250-1f251, U+1f300, U+1f302-1f308, U+1f30a-1f311, U+1f315, U+1f319-1f320, U+1f324, U+1f327, U+1f32a, U+1f32c-1f32d, U+1f330-1f357, U+1f359-1f37e; } /* [5] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.5.woff2) format('woff2'); unicode-range: U+fee3, U+fef3, U+ff03-ff04, U+ff07, U+ff0a, U+ff17-ff19, U+ff1c-ff1d, U+ff20-ff3a, U+ff3c, U+ff3e-ff5b, U+ff5d, U+ff61-ff65, U+ff67-ff6a, U+ff6c, U+ff6f-ff78, U+ff7a-ff7d, U+ff80-ff84, U+ff86, U+ff89-ff8e, U+ff92, U+ff97-ff9b, U+ff9d-ff9f, U+ffe0-ffe4, U+ffe6, U+ffe9, U+ffeb, U+ffed, U+fffc, U+1f004, U+1f170-1f171, U+1f192-1f195, U+1f198-1f19a, U+1f1e6-1f1e8; } /* [6] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.6.woff2) format('woff2'); unicode-range: U+f0a7, U+f0b2, U+f0b7, U+f0c9, U+f0d8, U+f0da, U+f0dc-f0dd, U+f0e0, U+f0e6, U+f0eb, U+f0fc, U+f101, U+f104-f105, U+f107, U+f10b, U+f11b, U+f14b, U+f18a, U+f193, U+f1d6-f1d7, U+f244, U+f27a, U+f296, U+f2ae, U+f471, U+f4b3, U+f610-f611, U+f880-f881, U+f8ec, U+f8f5, U+f8ff, U+f901, U+f90a, U+f92c-f92d, U+f934, U+f937, U+f941, U+f965, U+f967, U+f969, U+f96b, U+f96f, U+f974, U+f978-f979, U+f97e, U+f981, U+f98a, U+f98e, U+f997, U+f99c, U+f9b2, U+f9b5, U+f9ba, U+f9be, U+f9ca, U+f9d0-f9d1, U+f9dd, U+f9e0-f9e1, U+f9e4, U+f9f7, U+fa00-fa01, U+fa08, U+fa0a, U+fa11, U+fb01-fb02, U+fdfc, U+fe0e, U+fe30-fe31, U+fe33-fe44, U+fe49-fe52, U+fe54-fe57, U+fe59-fe66, U+fe68-fe6b, U+fe8e, U+fe92-fe93, U+feae, U+feb8, U+fecb-fecc, U+fee0; } /* [21] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.21.woff2) format('woff2'); unicode-range: U+9f3d-9f3e, U+9f41, U+9f4a-9f4b, U+9f51-9f52, U+9f61-9f63, U+9f66-9f67, U+9f80-9f81, U+9f83, U+9f85-9f8d, U+9f90-9f91, U+9f94-9f96, U+9f98, U+9f9b-9f9c, U+9f9e, U+9fa0, U+9fa2, U+9ff4, U+a001, U+a007, U+a025, U+a046-a047, U+a057, U+a072, U+a078-a079, U+a083, U+a085, U+a100, U+a118, U+a132, U+a134, U+a1f4, U+a242, U+a4a6, U+a4aa, U+a4b0-a4b1, U+a4b3, U+a9c1-a9c2, U+ac00-ac01, U+ac04, U+ac08, U+ac10-ac11, U+ac13-ac16, U+ac19, U+ac1c-ac1d, U+ac24, U+ac70-ac71, U+ac74, U+ac77-ac78, U+ac80-ac81, U+ac83, U+ac8c, U+ac90, U+ac9f-aca0, U+aca8-aca9, U+acac, U+acb0, U+acbd, U+acc1, U+acc4, U+ace0-ace1, U+ace4, U+ace8, U+acf3, U+acf5, U+acfc-acfd, U+ad00, U+ad0c, U+ad11, U+ad1c, U+ad34, U+ad50, U+ad64, U+ad6c, U+ad70, U+ad74, U+ad7f, U+ad81, U+ad8c, U+adc0, U+adc8, U+addc, U+ade0, U+adf8-adf9, U+adfc, U+ae00, U+ae08-ae09, U+ae0b, U+ae30, U+ae34, U+ae38, U+ae40, U+ae4a, U+ae4c, U+ae54, U+ae68, U+aebc, U+aed8, U+af2c-af2d, U+af34; } /* [22] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.22.woff2) format('woff2'); unicode-range: U+9dfa, U+9e0a, U+9e11, U+9e1a, U+9e1e, U+9e20, U+9e22, U+9e28-9e2c, U+9e2e-9e33, U+9e35-9e3b, U+9e3e, U+9e40-9e44, U+9e46-9e4e, U+9e51, U+9e53, U+9e55-9e58, U+9e5a-9e5c, U+9e5e-9e63, U+9e66-9e6e, U+9e71, U+9e73, U+9e75, U+9e78-9e79, U+9e7c-9e7e, U+9e82, U+9e86-9e88, U+9e8b-9e8c, U+9e90-9e91, U+9e93, U+9e95, U+9e97, U+9e9d, U+9ea4-9ea5, U+9ea9-9eaa, U+9eb4-9eb5, U+9eb8-9eba, U+9ebc-9ebf, U+9ec3, U+9ec9, U+9ecd, U+9ed0, U+9ed2-9ed3, U+9ed5-9ed6, U+9ed9, U+9edc-9edd, U+9edf-9ee0, U+9ee2, U+9ee5, U+9ee7-9eea, U+9eef, U+9ef1, U+9ef3-9ef4, U+9ef6, U+9ef9, U+9efb-9efc, U+9efe, U+9f0b, U+9f0d, U+9f10, U+9f14, U+9f17, U+9f19, U+9f22, U+9f29, U+9f2c, U+9f2f, U+9f31, U+9f37, U+9f39; } /* [23] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.23.woff2) format('woff2'); unicode-range: U+9c3b, U+9c40, U+9c47-9c49, U+9c53, U+9c57, U+9c64, U+9c72, U+9c77-9c78, U+9c7b, U+9c7f-9c80, U+9c82-9c83, U+9c85-9c8c, U+9c8e-9c92, U+9c94-9c9b, U+9c9e-9ca3, U+9ca5-9ca7, U+9ca9, U+9cab, U+9cad-9cae, U+9cb1-9cb7, U+9cb9-9cbd, U+9cbf-9cc0, U+9cc3, U+9cc5-9cc7, U+9cc9-9cd1, U+9cd3-9cda, U+9cdc-9cdd, U+9cdf, U+9ce1-9ce3, U+9ce5, U+9ce9, U+9cee-9cef, U+9cf3-9cf4, U+9cf6, U+9cfc-9cfd, U+9d02, U+9d08-9d09, U+9d12, U+9d1b, U+9d1e, U+9d26, U+9d28, U+9d37, U+9d3b, U+9d3f, U+9d51, U+9d59, U+9d5c-9d5d, U+9d5f-9d61, U+9d6c, U+9d70, U+9d72, U+9d7a, U+9d7e, U+9d84, U+9d89, U+9d8f, U+9d92, U+9daf, U+9db4, U+9db8, U+9dbc, U+9dc4, U+9dc7, U+9dc9, U+9dd7, U+9ddf, U+9df2, U+9df9; } /* [24] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.24.woff2) format('woff2'); unicode-range: U+9a5f, U+9a62, U+9a65, U+9a69, U+9a6b, U+9a6e, U+9a75, U+9a77-9a7a, U+9a7d, U+9a80, U+9a83, U+9a85, U+9a87-9a8a, U+9a8d-9a8e, U+9a90, U+9a92-9a93, U+9a95-9a96, U+9a98-9a99, U+9a9b-9aa2, U+9aa5, U+9aa7, U+9aaf-9ab1, U+9ab5-9ab6, U+9ab9-9aba, U+9abc, U+9ac0-9ac4, U+9ac8, U+9acb-9acc, U+9ace-9acf, U+9ad1-9ad2, U+9ad9, U+9adf, U+9ae1, U+9ae3, U+9aea-9aeb, U+9aed-9aef, U+9af4, U+9af9, U+9afb, U+9b03-9b04, U+9b06, U+9b08, U+9b0d, U+9b0f-9b10, U+9b13, U+9b18, U+9b1a, U+9b1f, U+9b22-9b23, U+9b25, U+9b27-9b28, U+9b2a, U+9b2f, U+9b31-9b32, U+9b3b, U+9b43, U+9b46-9b49, U+9b4d-9b4e, U+9b51, U+9b56, U+9b58, U+9b5a, U+9b5c, U+9b5f, U+9b61-9b62, U+9b6f, U+9b77, U+9b80, U+9b88, U+9b8b, U+9b8e, U+9b91, U+9b9f-9ba0, U+9ba8, U+9baa-9bab, U+9bad-9bae, U+9bb0-9bb1, U+9bb8, U+9bc9-9bca, U+9bd3, U+9bd6, U+9bdb, U+9be8, U+9bf0-9bf1, U+9c02, U+9c10, U+9c15, U+9c24, U+9c2d, U+9c32, U+9c39; } /* [25] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.25.woff2) format('woff2'); unicode-range: U+98c8, U+98cf-98d6, U+98da-98db, U+98dd, U+98e1-98e2, U+98e7-98ea, U+98ec, U+98ee-98ef, U+98f2, U+98f4, U+98fc-98fe, U+9903, U+9905, U+9908, U+990a, U+990c-990d, U+9913-9914, U+9918, U+991a-991b, U+991e, U+9921, U+9928, U+992c, U+992e, U+9935, U+9938-9939, U+993d-993e, U+9945, U+994b-994c, U+9951-9952, U+9954-9955, U+9957, U+995e, U+9963, U+9966-9969, U+996b-996c, U+996f, U+9974-9975, U+9977-9979, U+997d-997e, U+9980-9981, U+9983-9984, U+9987, U+998a-998b, U+998d-9991, U+9993-9995, U+9997-9998, U+99a5, U+99ab-99ae, U+99b1, U+99b3-99b4, U+99bc, U+99bf, U+99c1, U+99c3-99c6, U+99cc, U+99d0, U+99d2, U+99d5, U+99db, U+99dd, U+99e1, U+99ed, U+99f1, U+99ff, U+9a01, U+9a03-9a04, U+9a0e-9a0f, U+9a11-9a13, U+9a19, U+9a1b, U+9a28, U+9a2b, U+9a30, U+9a32, U+9a37, U+9a40, U+9a45, U+9a4a, U+9a4d-9a4e, U+9a52, U+9a55, U+9a57, U+9a5a-9a5b; } /* [26] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.26.woff2) format('woff2'); unicode-range: U+972a, U+972d, U+9730, U+973d, U+9742, U+9744, U+9748-9749, U+9750-9751, U+975a-975c, U+9763, U+9765-9766, U+976c-976d, U+9773, U+9776, U+977a, U+977c, U+9784-9785, U+978e-978f, U+9791-9792, U+9794-9795, U+9798, U+979a, U+979e, U+97a3, U+97a5-97a6, U+97a8, U+97ab-97ac, U+97ae-97af, U+97b2, U+97b4, U+97c6, U+97cb-97cc, U+97d3, U+97d8, U+97dc, U+97e1, U+97ea-97eb, U+97ee, U+97fb, U+97fe-97ff, U+9801-9803, U+9805-9806, U+9808, U+980c, U+9810-9814, U+9817-9818, U+981e, U+9820-9821, U+9824, U+9828, U+982b-982d, U+9830, U+9834, U+9838-9839, U+983c, U+9846, U+984d-984f, U+9851-9852, U+9854-9855, U+9857-9858, U+985a-985b, U+9862-9863, U+9865, U+9867, U+986b, U+986f-9871, U+9877-9878, U+987c, U+9880, U+9883, U+9885, U+9889, U+988b-988f, U+9893-9895, U+9899-989b, U+989e-989f, U+98a1-98a2, U+98a5-98a7, U+98a9, U+98af, U+98b1, U+98b6, U+98ba, U+98be, U+98c3-98c4, U+98c6-98c7; } /* [27] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.27.woff2) format('woff2'); unicode-range: U+95b9-95ca, U+95cc-95cd, U+95d4-95d6, U+95d8, U+95e1-95e2, U+95e9, U+95f0-95f1, U+95f3, U+95f6, U+95fc, U+95fe-95ff, U+9602-9604, U+9606-960d, U+960f, U+9611-9613, U+9615-9617, U+9619-961b, U+961d, U+9621, U+9628, U+962f, U+963c-963e, U+9641-9642, U+9649, U+9654, U+965b-965f, U+9661, U+9663, U+9665, U+9667-9668, U+966c, U+9670, U+9672-9674, U+9678, U+967a, U+967d, U+9682, U+9685, U+9688, U+968a, U+968d-968e, U+9695, U+9697-9698, U+969e, U+96a0, U+96a3-96a4, U+96a8, U+96aa, U+96b0-96b1, U+96b3-96b4, U+96b7-96b9, U+96bb-96bd, U+96c9, U+96cb, U+96ce, U+96d1-96d2, U+96d6, U+96d9, U+96db-96dc, U+96de, U+96e0, U+96e3, U+96e9, U+96eb, U+96f0-96f2, U+96f9, U+96ff, U+9701-9702, U+9705, U+9708, U+970a, U+970e-970f, U+9711, U+9719, U+9727; } /* [28] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.28.woff2) format('woff2'); unicode-range: U+94e7-94ec, U+94ee-94f1, U+94f3, U+94f5, U+94f7, U+94f9, U+94fb-94fd, U+94ff, U+9503-9504, U+9506-9507, U+9509-950a, U+950d-950f, U+9511-9518, U+951a-9520, U+9522, U+9528-952d, U+9530-953a, U+953c-953f, U+9543-9546, U+9548-9550, U+9552-9555, U+9557-955b, U+955d-9568, U+956a-956d, U+9570-9574, U+9583, U+9586, U+9589, U+958e-958f, U+9591-9592, U+9594, U+9598-9599, U+959e-95a0, U+95a2-95a6, U+95a8-95b2, U+95b4, U+95b8; } /* [29] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.29.woff2) format('woff2'); unicode-range: U+9410-941a, U+941c-942b, U+942d-942e, U+9432-9433, U+9435, U+9438, U+943a, U+943e, U+9444, U+944a, U+9451-9452, U+945a, U+9462-9463, U+9465, U+9470-9487, U+948a-9492, U+9494-9498, U+949a, U+949c-949d, U+94a1, U+94a3-94a4, U+94a8, U+94aa-94ad, U+94af, U+94b2, U+94b4-94ba, U+94bc-94c0, U+94c4, U+94c6-94db, U+94de-94e6; } /* [30] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.30.woff2) format('woff2'); unicode-range: U+92b7, U+92b9, U+92c1, U+92c5-92c6, U+92c8, U+92cc, U+92d0, U+92d2, U+92e4, U+92ea, U+92ec-92ed, U+92f0, U+92f3, U+92f8, U+92fc, U+9304, U+9306, U+9310, U+9312, U+9315, U+9318, U+931a, U+931e, U+9320-9322, U+9324, U+9326-9329, U+932b-932c, U+932f, U+9331-9332, U+9335-9336, U+933e, U+9340-9341, U+934a-9360, U+9362-9363, U+9365-936b, U+936e, U+9375, U+937e, U+9382, U+938a, U+938c, U+938f, U+9393-9394, U+9396-9397, U+939a, U+93a2, U+93a7, U+93ac-93cd, U+93d0-93d1, U+93d6-93d8, U+93de-93df, U+93e1-93e2, U+93e4, U+93f8, U+93fb, U+93fd, U+940e-940f; } /* [31] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.31.woff2) format('woff2'); unicode-range: U+914c, U+914e-9150, U+9154, U+9157, U+915a, U+915d-915e, U+9161-9164, U+9169, U+9170, U+9172, U+9174, U+9179-917a, U+917d-917e, U+9182-9183, U+9185, U+918c-918d, U+9190-9191, U+919a, U+919c, U+91a1-91a4, U+91a8, U+91aa-91af, U+91b4-91b5, U+91b8, U+91ba, U+91be, U+91c0-91c1, U+91c6, U+91c8, U+91cb, U+91d0, U+91d2, U+91d7-91d8, U+91dd, U+91e3, U+91e6-91e7, U+91ed, U+91f0, U+91f5, U+91f9, U+9200, U+9205, U+9207-920a, U+920d-920e, U+9210, U+9214-9215, U+921c, U+921e, U+9221, U+9223-9227, U+9229-922a, U+922d, U+9234-9235, U+9237, U+9239-923a, U+923c-9240, U+9244-9246, U+9249, U+924e-924f, U+9251, U+9253, U+9257, U+925b, U+925e, U+9262, U+9264-9266, U+9268, U+926c, U+926f, U+9271, U+927b, U+927e, U+9280, U+9283, U+9285-928a, U+928e, U+9291, U+9293, U+9296, U+9298, U+929c-929d, U+92a8, U+92ab-92ae, U+92b3, U+92b6; } /* [32] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.32.woff2) format('woff2'); unicode-range: U+8fe2-8fe5, U+8fe8-8fe9, U+8fee, U+8ff3-8ff4, U+8ff8, U+8ffa, U+9004, U+900b, U+9011, U+9015-9016, U+901e, U+9021, U+9026, U+902d, U+902f, U+9031, U+9035-9036, U+9039-903a, U+9041, U+9044-9046, U+904a, U+904f-9052, U+9054-9055, U+9058-9059, U+905b-905e, U+9060-9062, U+9068-9069, U+906f, U+9072, U+9074, U+9076-907a, U+907c-907d, U+9081, U+9083, U+9085, U+9087-908b, U+908f, U+9095, U+9097, U+9099-909b, U+909d, U+90a0-90a1, U+90a8-90a9, U+90ac, U+90b0, U+90b2-90b4, U+90b6, U+90b8, U+90ba, U+90bd-90be, U+90c3-90c5, U+90c7-90c8, U+90cf-90d0, U+90d3, U+90d5, U+90d7, U+90da-90dc, U+90de, U+90e2, U+90e4, U+90e6-90e7, U+90ea-90eb, U+90ef, U+90f4-90f5, U+90f7, U+90fe-9100, U+9104, U+9109, U+910c, U+9112, U+9114-9115, U+9118, U+911c, U+911e, U+9120, U+9122-9123, U+9127, U+912d, U+912f-9132, U+9139-913a, U+9143, U+9146, U+9149-914a; } /* [33] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.33.woff2) format('woff2'); unicode-range: U+8e2d-8e31, U+8e34-8e35, U+8e39-8e3a, U+8e3d, U+8e40-8e42, U+8e47, U+8e49-8e4b, U+8e50-8e53, U+8e59-8e5a, U+8e5f-8e60, U+8e64, U+8e69, U+8e6c, U+8e70, U+8e74, U+8e76, U+8e7a-8e7c, U+8e7f, U+8e84-8e85, U+8e87, U+8e89, U+8e8b, U+8e8d, U+8e8f-8e90, U+8e94, U+8e99, U+8e9c, U+8e9e, U+8eaa, U+8eac, U+8eb0, U+8eb6, U+8ec0, U+8ec6, U+8eca-8ece, U+8ed2, U+8eda, U+8edf, U+8ee2, U+8eeb, U+8ef8, U+8efb-8efe, U+8f03, U+8f09, U+8f0b, U+8f12-8f15, U+8f1b, U+8f1d, U+8f1f, U+8f29-8f2a, U+8f2f, U+8f36, U+8f38, U+8f3b, U+8f3e-8f3f, U+8f44-8f45, U+8f49, U+8f4d-8f4e, U+8f5f, U+8f6b, U+8f6d, U+8f71-8f73, U+8f75-8f76, U+8f78-8f7a, U+8f7c, U+8f7e, U+8f81-8f82, U+8f84, U+8f87, U+8f8a-8f8b, U+8f8d-8f8f, U+8f94-8f95, U+8f97-8f9a, U+8fa6, U+8fad-8faf, U+8fb2, U+8fb5-8fb7, U+8fba-8fbc, U+8fbf, U+8fc2, U+8fcb, U+8fcd, U+8fd3, U+8fd5, U+8fd7, U+8fda; } /* [34] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.34.woff2) format('woff2'); unicode-range: U+8caf-8cb0, U+8cb3-8cb4, U+8cb6-8cb9, U+8cbb-8cbd, U+8cbf-8cc4, U+8cc7-8cc8, U+8cca, U+8ccd, U+8cd1, U+8cd3, U+8cdb-8cdc, U+8cde, U+8ce0, U+8ce2-8ce4, U+8ce6-8ce8, U+8cea, U+8ced, U+8cf4, U+8cf8, U+8cfa, U+8cfc-8cfd, U+8d04-8d05, U+8d07-8d08, U+8d0a, U+8d0d, U+8d0f, U+8d13-8d14, U+8d16, U+8d1b, U+8d20, U+8d2e, U+8d30, U+8d32-8d33, U+8d36, U+8d3b, U+8d3d, U+8d40, U+8d42-8d43, U+8d45-8d46, U+8d48-8d4a, U+8d4d, U+8d51, U+8d53, U+8d55, U+8d59, U+8d5c-8d5d, U+8d5f, U+8d61, U+8d66-8d67, U+8d6a, U+8d6d, U+8d71, U+8d73, U+8d84, U+8d90-8d91, U+8d94-8d95, U+8d99, U+8da8, U+8daf, U+8db1, U+8db5, U+8db8, U+8dba, U+8dbc, U+8dbf, U+8dc2, U+8dc4, U+8dc6, U+8dcb, U+8dce-8dcf, U+8dd6-8dd7, U+8dda-8ddb, U+8dde, U+8de1, U+8de3-8de4, U+8de9, U+8deb-8dec, U+8df0-8df1, U+8df6-8dfd, U+8e05, U+8e07, U+8e09-8e0a, U+8e0c, U+8e0e, U+8e10, U+8e14, U+8e1d-8e1f, U+8e23, U+8e26, U+8e2b-8e2c; } /* [35] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.35.woff2) format('woff2'); unicode-range: U+8b5e, U+8b60, U+8b6c, U+8b6f-8b70, U+8b72, U+8b74, U+8b77, U+8b7d, U+8b80, U+8b83, U+8b8a, U+8b8c, U+8b90, U+8b93, U+8b99-8b9a, U+8ba0, U+8ba3, U+8ba5-8ba7, U+8baa-8bac, U+8bb3-8bb5, U+8bb7, U+8bb9, U+8bc2-8bc3, U+8bc5, U+8bcb-8bcc, U+8bce-8bd0, U+8bd2-8bd4, U+8bd6, U+8bd8-8bd9, U+8bdc, U+8bdf, U+8be3-8be4, U+8be7-8be9, U+8beb-8bec, U+8bee, U+8bf0, U+8bf2-8bf3, U+8bf6, U+8bf9, U+8bfc-8bfd, U+8bff-8c00, U+8c02, U+8c04, U+8c06-8c07, U+8c0c, U+8c0f, U+8c11-8c12, U+8c14-8c1b, U+8c1d-8c21, U+8c24-8c25, U+8c27, U+8c2a-8c2c, U+8c2e-8c30, U+8c32-8c36, U+8c3f, U+8c47-8c4c, U+8c4e-8c50, U+8c54-8c56, U+8c62, U+8c68, U+8c6c, U+8c73, U+8c78, U+8c7a, U+8c82, U+8c85, U+8c89-8c8a, U+8c8d-8c8e, U+8c90, U+8c93-8c94, U+8c98, U+8c9d-8c9e, U+8ca0-8ca2, U+8ca7-8cac; } /* [36] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.36.woff2) format('woff2'); unicode-range: U+8a02-8a03, U+8a07-8a0a, U+8a0e-8a0f, U+8a13, U+8a15-8a18, U+8a1a-8a1b, U+8a1d, U+8a1f, U+8a22-8a23, U+8a25, U+8a2b, U+8a2d, U+8a31, U+8a33-8a34, U+8a36-8a38, U+8a3a, U+8a3c, U+8a3e, U+8a40-8a41, U+8a46, U+8a48, U+8a50, U+8a52, U+8a54-8a55, U+8a58, U+8a5b, U+8a5d-8a63, U+8a66, U+8a69-8a6b, U+8a6d-8a6e, U+8a70, U+8a72-8a73, U+8a7a, U+8a85, U+8a87, U+8a8a, U+8a8c-8a8d, U+8a90-8a92, U+8a95, U+8a98, U+8aa0-8aa1, U+8aa3-8aa6, U+8aa8-8aa9, U+8aac-8aae, U+8ab0, U+8ab2, U+8ab8-8ab9, U+8abc, U+8abe-8abf, U+8ac7, U+8acf, U+8ad2, U+8ad6-8ad7, U+8adb-8adc, U+8adf, U+8ae1, U+8ae6-8ae8, U+8aeb, U+8aed-8aee, U+8af1, U+8af3-8af4, U+8af7-8af8, U+8afa, U+8afe, U+8b00-8b02, U+8b07, U+8b0a, U+8b0c, U+8b0e, U+8b10, U+8b17, U+8b19, U+8b1b, U+8b1d, U+8b20-8b21, U+8b26, U+8b28, U+8b2c, U+8b33, U+8b39, U+8b3e-8b3f, U+8b41, U+8b45, U+8b49, U+8b4c, U+8b4f, U+8b57-8b58, U+8b5a, U+8b5c; } /* [37] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.37.woff2) format('woff2'); unicode-range: U+8869-886a, U+886e-886f, U+8872, U+8879, U+887d-887f, U+8882, U+8884-8886, U+8888, U+888f, U+8892-8893, U+889b, U+88a2, U+88a4, U+88a6, U+88a8, U+88aa, U+88ae, U+88b1, U+88b4, U+88b7, U+88bc, U+88c0, U+88c6-88c9, U+88ce-88cf, U+88d1-88d3, U+88d8, U+88db-88dd, U+88df, U+88e1-88e3, U+88e5, U+88e8, U+88ec, U+88f0-88f1, U+88f3-88f4, U+88fc-88fe, U+8900, U+8902, U+8906-8907, U+8909-890c, U+8912-8915, U+8918-891b, U+8921, U+8925, U+892b, U+8930, U+8932, U+8934, U+8936, U+893b, U+893d, U+8941, U+894c, U+8955-8956, U+8959, U+895c, U+895e-8960, U+8966, U+896a, U+896c, U+896f-8970, U+8972, U+897b, U+897e, U+8980, U+8983, U+8985, U+8987-8988, U+898c, U+898f, U+8993, U+8997, U+899a, U+89a1, U+89a7, U+89a9-89aa, U+89b2-89b3, U+89b7, U+89c0, U+89c7, U+89ca-89cc, U+89ce-89d1, U+89d6, U+89da, U+89dc, U+89de, U+89e5, U+89e7, U+89eb, U+89ef, U+89f1, U+89f3-89f4, U+89f8, U+89ff, U+8a01; } /* [38] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.38.woff2) format('woff2'); unicode-range: U+86e4, U+86e6, U+86e9, U+86ed, U+86ef-86f4, U+86f8-86f9, U+86fb, U+86fe, U+8703, U+8706-870a, U+870d, U+8711-8713, U+871a, U+871e, U+8722-8723, U+8725, U+8729, U+872e, U+8731, U+8734, U+8737, U+873a-873b, U+873e-8740, U+8742, U+8747-8748, U+8753, U+8755, U+8757-8758, U+875d, U+875f, U+8762-8766, U+8768, U+876e, U+8770, U+8772, U+8775, U+8778, U+877b-877e, U+8782, U+8785, U+8788, U+878b, U+8793, U+8797, U+879a, U+879e-87a0, U+87a2-87a3, U+87a8, U+87ab-87ad, U+87af, U+87b3, U+87b5, U+87bd, U+87c0, U+87c4, U+87c6, U+87ca-87cb, U+87d1-87d2, U+87db-87dc, U+87de, U+87e0, U+87e5, U+87ea, U+87ec, U+87ee, U+87f2-87f3, U+87fb, U+87fd-87fe, U+8802-8803, U+8805, U+880a-880b, U+880d, U+8813-8816, U+8819, U+881b, U+881f, U+8821, U+8823, U+8831-8832, U+8835-8836, U+8839, U+883b-883c, U+8844, U+8846, U+884a, U+884e, U+8852-8853, U+8855, U+8859, U+885b, U+885d-885e, U+8862, U+8864; } /* [39] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.39.woff2) format('woff2'); unicode-range: U+8532, U+8534-8535, U+8538-853a, U+853c, U+8543, U+8545, U+8548, U+854e, U+8553, U+8556-8557, U+8559, U+855e, U+8561, U+8564-8565, U+8568-856a, U+856d, U+856f-8570, U+8572, U+8576, U+8579-857b, U+8580, U+8585-8586, U+8588, U+858a, U+858f, U+8591, U+8594, U+8599, U+859c, U+85a2, U+85a4, U+85a6, U+85a8-85a9, U+85ab-85ac, U+85ae, U+85b7-85b9, U+85be, U+85c1, U+85c7, U+85cd, U+85d0, U+85d3, U+85d5, U+85dc-85dd, U+85df-85e0, U+85e5-85e6, U+85e8-85ea, U+85f4, U+85f9, U+85fe-85ff, U+8602, U+8605-8607, U+860a-860b, U+8616, U+8618, U+861a, U+8627, U+8629, U+862d, U+8638, U+863c, U+863f, U+864d, U+864f, U+8652-8655, U+865b-865c, U+865f, U+8662, U+8667, U+866c, U+866e, U+8671, U+8675, U+867a-867c, U+867f, U+868b, U+868d, U+8693, U+869c-869d, U+86a1, U+86a3-86a4, U+86a7-86a9, U+86ac, U+86af-86b1, U+86b4-86b6, U+86ba, U+86c0, U+86c4, U+86c6, U+86c9-86ca, U+86cd-86d1, U+86d4, U+86d8, U+86de-86df; } /* [40] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.40.woff2) format('woff2'); unicode-range: U+83b4, U+83b6, U+83b8, U+83ba, U+83bc-83bd, U+83bf-83c0, U+83c2, U+83c5, U+83c8-83c9, U+83cb, U+83d1, U+83d3-83d6, U+83d8, U+83db, U+83dd, U+83df, U+83e1, U+83e5, U+83ea-83eb, U+83f0, U+83f4, U+83f8-83f9, U+83fb, U+83fd, U+83ff, U+8401, U+8406, U+840a-840b, U+840f, U+8411, U+8418, U+841c, U+8420, U+8422-8424, U+8426, U+8429, U+842c, U+8438-8439, U+843b-843c, U+843f, U+8446-8447, U+8449, U+844e, U+8451-8452, U+8456, U+8459-845a, U+845c, U+8462, U+8466, U+846d, U+846f-8470, U+8473, U+8476-8478, U+847a, U+847d, U+8484-8485, U+8487, U+8489, U+848c, U+848e, U+8490, U+8493-8494, U+8497, U+849b, U+849e-849f, U+84a1, U+84a5, U+84a8, U+84af, U+84b4, U+84b9-84bf, U+84c1-84c2, U+84c5-84c7, U+84ca-84cb, U+84cd, U+84d0-84d1, U+84d3, U+84d6, U+84df-84e0, U+84e2-84e3, U+84e5-84e7, U+84ee, U+84f3, U+84f6, U+84fa, U+84fc, U+84ff-8500, U+850c, U+8511, U+8514-8515, U+8517-8518, U+851f, U+8523, U+8525-8526, U+8529, U+852b, U+852d; } /* [41] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.41.woff2) format('woff2'); unicode-range: U+82a9-82ab, U+82ae, U+82b0, U+82b2, U+82b4-82b6, U+82bc, U+82be, U+82c0-82c2, U+82c4-82c8, U+82ca-82cc, U+82ce, U+82d0, U+82d2-82d3, U+82d5-82d6, U+82d8-82d9, U+82dc-82de, U+82e0-82e4, U+82e7, U+82e9-82eb, U+82ed-82ee, U+82f3-82f4, U+82f7-82f8, U+82fa-8301, U+8306-8308, U+830c-830d, U+830f, U+8311, U+8313-8315, U+8318, U+831a-831b, U+831d, U+8324, U+8327, U+832a, U+832c-832d, U+832f, U+8331-8334, U+833a-833c, U+8340, U+8343-8345, U+8347-8348, U+834a, U+834c, U+834f, U+8351, U+8356, U+8358-835c, U+835e, U+8360, U+8364-8366, U+8368-836a, U+836c-836e, U+8373, U+8378, U+837b-837d, U+837f-8380, U+8382, U+8388, U+838a-838b, U+8392, U+8394, U+8396, U+8398-8399, U+839b-839c, U+83a0, U+83a2-83a3, U+83a8-83aa, U+83ae-83b0, U+83b3; } /* [42] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.42.woff2) format('woff2'); unicode-range: U+814d-814e, U+8151, U+8153, U+8158-815a, U+815e, U+8160, U+8166-8169, U+816b, U+816d, U+8171, U+8173-8174, U+8178, U+817c-817d, U+8182, U+8188, U+8191, U+8198-819b, U+81a0, U+81a3, U+81a5-81a6, U+81a9, U+81b6, U+81ba-81bb, U+81bd, U+81bf, U+81c1, U+81c3, U+81c6, U+81c9-81ca, U+81cc-81cd, U+81d1, U+81d3-81d4, U+81d8, U+81db-81dc, U+81de-81df, U+81e5, U+81e7-81e9, U+81eb-81ec, U+81ee-81ef, U+81f5, U+81f8, U+81fa, U+81fc, U+81fe, U+8200-8202, U+8204, U+8208-820a, U+820e-8210, U+8216-8218, U+821b-821c, U+8221-8224, U+8226-8228, U+822b, U+822d, U+822f, U+8232-8234, U+8237-8238, U+823a-823b, U+823e, U+8244, U+8249, U+824b, U+824f, U+8259-825a, U+825f, U+8266, U+8268, U+826e, U+8271, U+8276-8279, U+827d, U+827f, U+8283-8284, U+8288-828a, U+828d-8291, U+8293-8294, U+8296-8298, U+829f-82a1, U+82a3-82a4, U+82a7-82a8; } /* [43] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.43.woff2) format('woff2'); unicode-range: U+7ffa, U+7ffe, U+8004, U+8006, U+800b, U+800e, U+8011-8012, U+8014, U+8016, U+8018-8019, U+801c, U+801e, U+8026-802a, U+8031, U+8034-8035, U+8037, U+8043, U+804b, U+804d, U+8052, U+8056, U+8059, U+805e, U+8061, U+8068-8069, U+806e-8074, U+8076-8078, U+807c-8080, U+8082, U+8084-8085, U+8088, U+808f, U+8093, U+809c, U+809f, U+80ab, U+80ad-80ae, U+80b1, U+80b6-80b8, U+80bc-80bd, U+80c2, U+80c4, U+80ca, U+80cd, U+80d1, U+80d4, U+80d7, U+80d9-80db, U+80dd, U+80e0, U+80e4-80e5, U+80e7-80ed, U+80ef-80f1, U+80f3-80f4, U+80fc, U+8101, U+8104-8105, U+8107-8108, U+810c-810e, U+8112-8115, U+8117-8119, U+811b-811f, U+8121-8130, U+8132-8134, U+8137, U+8139, U+813f-8140, U+8142, U+8146, U+8148; } /* [44] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.44.woff2) format('woff2'); unicode-range: U+7ed7, U+7edb, U+7ee0-7ee2, U+7ee5-7ee6, U+7ee8, U+7eeb, U+7ef0-7ef2, U+7ef6, U+7efa-7efb, U+7efe, U+7f01-7f04, U+7f08, U+7f0a-7f12, U+7f17, U+7f19, U+7f1b-7f1c, U+7f1f, U+7f21-7f23, U+7f25-7f28, U+7f2a-7f33, U+7f35-7f37, U+7f3d, U+7f42, U+7f44-7f45, U+7f4c-7f4d, U+7f52, U+7f54, U+7f58-7f59, U+7f5d, U+7f5f-7f61, U+7f63, U+7f65, U+7f68, U+7f70-7f71, U+7f73-7f75, U+7f77, U+7f79, U+7f7d-7f7e, U+7f85-7f86, U+7f88-7f89, U+7f8b-7f8c, U+7f90-7f91, U+7f94-7f96, U+7f98-7f9b, U+7f9d, U+7f9f, U+7fa3, U+7fa7-7fa9, U+7fac-7fb2, U+7fb4, U+7fb6, U+7fb8, U+7fbc, U+7fbf-7fc0, U+7fc3, U+7fca, U+7fcc, U+7fce, U+7fd2, U+7fd5, U+7fd9-7fdb, U+7fdf, U+7fe3, U+7fe5-7fe7, U+7fe9, U+7feb-7fec, U+7fee-7fef, U+7ff1, U+7ff3-7ff4, U+7ff9; } /* [45] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.45.woff2) format('woff2'); unicode-range: U+7dc4, U+7dc7-7dc8, U+7dca-7dcd, U+7dcf, U+7dd1-7dd2, U+7dd4, U+7dd6-7dd8, U+7dda-7de0, U+7de2-7de6, U+7de8-7ded, U+7def, U+7df1-7df5, U+7df7, U+7df9, U+7dfb-7dfc, U+7dfe-7e02, U+7e04, U+7e08-7e0b, U+7e12, U+7e1b, U+7e1e, U+7e20, U+7e22-7e23, U+7e26, U+7e29, U+7e2b, U+7e2e-7e2f, U+7e31, U+7e37, U+7e39-7e3e, U+7e40, U+7e43-7e44, U+7e46-7e47, U+7e4a-7e4b, U+7e4d-7e4e, U+7e51, U+7e54-7e56, U+7e58-7e5b, U+7e5d-7e5e, U+7e61, U+7e66-7e67, U+7e69-7e6b, U+7e6d, U+7e70, U+7e73, U+7e77, U+7e79, U+7e7b-7e7d, U+7e81-7e82, U+7e8c-7e8d, U+7e8f, U+7e92-7e94, U+7e96, U+7e98, U+7e9a-7e9c, U+7e9e-7e9f, U+7ea1, U+7ea3, U+7ea5, U+7ea8-7ea9, U+7eab, U+7ead-7eae, U+7eb0, U+7ebb, U+7ebe, U+7ec0-7ec2, U+7ec9, U+7ecb-7ecc, U+7ed0, U+7ed4; } /* [46] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.46.woff2) format('woff2'); unicode-range: U+7ccc-7ccd, U+7cd7, U+7cdc, U+7cde, U+7ce0, U+7ce4-7ce5, U+7ce7-7ce8, U+7cec, U+7cf0, U+7cf5-7cf9, U+7cfc, U+7cfe, U+7d00, U+7d04-7d0b, U+7d0d, U+7d10-7d14, U+7d17-7d19, U+7d1b-7d1f, U+7d21, U+7d24-7d26, U+7d28-7d2a, U+7d2c-7d2e, U+7d30-7d31, U+7d33, U+7d35-7d36, U+7d38-7d3a, U+7d40, U+7d42-7d44, U+7d46, U+7d4b-7d4c, U+7d4f, U+7d51, U+7d54-7d56, U+7d58, U+7d5b-7d5c, U+7d5e, U+7d61-7d63, U+7d66, U+7d68, U+7d6a-7d6c, U+7d6f, U+7d71-7d73, U+7d75-7d77, U+7d79-7d7a, U+7d7e, U+7d81, U+7d84-7d8b, U+7d8d, U+7d8f, U+7d91, U+7d94, U+7d96, U+7d98-7d9a, U+7d9c-7da0, U+7da2, U+7da6, U+7daa-7db1, U+7db4-7db8, U+7dba-7dbf, U+7dc1; } /* [47] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.47.woff2) format('woff2'); unicode-range: U+7bc3-7bc4, U+7bc6, U+7bc8-7bcc, U+7bd1, U+7bd3-7bd4, U+7bd9-7bda, U+7bdd, U+7be0-7be1, U+7be4-7be6, U+7be9-7bea, U+7bef, U+7bf4, U+7bf6, U+7bfc, U+7bfe, U+7c01, U+7c03, U+7c07-7c08, U+7c0a-7c0d, U+7c0f, U+7c11, U+7c15-7c16, U+7c19, U+7c1e-7c21, U+7c23-7c24, U+7c26, U+7c28-7c33, U+7c35, U+7c37-7c3b, U+7c3d-7c3e, U+7c40-7c41, U+7c43, U+7c47-7c48, U+7c4c, U+7c50, U+7c53-7c54, U+7c59, U+7c5f-7c60, U+7c63-7c65, U+7c6c, U+7c6e, U+7c72, U+7c74, U+7c79-7c7a, U+7c7c, U+7c81-7c82, U+7c84-7c85, U+7c88, U+7c8a-7c91, U+7c93-7c96, U+7c99, U+7c9b-7c9e, U+7ca0-7ca2, U+7ca6-7ca9, U+7cac, U+7caf-7cb3, U+7cb5-7cb7, U+7cba-7cbd, U+7cbf-7cc2, U+7cc5, U+7cc7-7cc9; } /* [48] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.48.woff2) format('woff2'); unicode-range: U+7aca, U+7ad1-7ad2, U+7ada-7add, U+7ae1, U+7ae4, U+7ae6, U+7af4-7af7, U+7afa-7afb, U+7afd-7b0a, U+7b0c, U+7b0e-7b0f, U+7b13, U+7b15-7b16, U+7b18-7b19, U+7b1e-7b20, U+7b22-7b25, U+7b29-7b2b, U+7b2d-7b2e, U+7b30-7b3b, U+7b3e-7b3f, U+7b41-7b42, U+7b44-7b47, U+7b4a, U+7b4c-7b50, U+7b58, U+7b5a, U+7b5c, U+7b60, U+7b66-7b67, U+7b69, U+7b6c-7b6f, U+7b72-7b76, U+7b7b-7b7d, U+7b7f, U+7b82, U+7b85, U+7b87, U+7b8b-7b96, U+7b98-7b99, U+7b9b-7b9f, U+7ba2-7ba4, U+7ba6-7bac, U+7bae-7bb0, U+7bb4, U+7bb7-7bb9, U+7bbb, U+7bc0-7bc1; } /* [49] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.49.woff2) format('woff2'); unicode-range: U+797c, U+797e-7980, U+7982, U+7986-7987, U+7989-798e, U+7992, U+7994-7995, U+7997-7998, U+799a-799c, U+799f, U+79a3-79a6, U+79a8-79ac, U+79ae-79b1, U+79b3-79b5, U+79b8, U+79ba, U+79bf, U+79c2, U+79c6, U+79c8, U+79cf, U+79d5-79d6, U+79dd-79de, U+79e3, U+79e7-79e8, U+79eb, U+79ed, U+79f4, U+79f7-79f8, U+79fa, U+79fe, U+7a02-7a03, U+7a05, U+7a0a, U+7a14, U+7a17, U+7a19, U+7a1c, U+7a1e-7a1f, U+7a23, U+7a25-7a26, U+7a2c, U+7a2e, U+7a30-7a32, U+7a36-7a37, U+7a39, U+7a3c, U+7a40, U+7a42, U+7a47, U+7a49, U+7a4c-7a4f, U+7a51, U+7a55, U+7a5b, U+7a5d-7a5e, U+7a62-7a63, U+7a66, U+7a68-7a69, U+7a6b, U+7a70, U+7a78, U+7a80, U+7a85-7a88, U+7a8a, U+7a90, U+7a93-7a96, U+7a98, U+7a9b-7a9c, U+7a9e, U+7aa0-7aa1, U+7aa3, U+7aa8-7aaa, U+7aac-7ab0, U+7ab3, U+7ab8, U+7aba, U+7abd-7abf, U+7ac4-7ac5, U+7ac7-7ac8; } /* [50] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.50.woff2) format('woff2'); unicode-range: U+783e, U+7841-7844, U+7847-7849, U+784b-784c, U+784e-7854, U+7856-7857, U+7859-785a, U+7865, U+7869-786a, U+786d, U+786f, U+7876-7877, U+787c, U+787e-787f, U+7881, U+7887-7889, U+7893-7894, U+7898-789e, U+78a1, U+78a3, U+78a5, U+78a9, U+78ad, U+78b2, U+78b4, U+78b6, U+78b9-78ba, U+78bc, U+78bf, U+78c3, U+78c9, U+78cb, U+78d0-78d2, U+78d4, U+78d9-78da, U+78dc, U+78de, U+78e1, U+78e5-78e6, U+78ea, U+78ec, U+78ef, U+78f1-78f2, U+78f4, U+78fa-78fb, U+78fe, U+7901-7902, U+7905, U+7907, U+7909, U+790b-790c, U+790e, U+7910, U+7913, U+7919-791b, U+791e-791f, U+7921, U+7924, U+7926, U+792a-792b, U+7934, U+7936, U+7939, U+793b, U+793d, U+7940, U+7942-7943, U+7945-7947, U+7949-794a, U+794c, U+794e-7951, U+7953-7955, U+7957-795a, U+795c, U+795f-7960, U+7962, U+7964, U+7966-7967, U+7969, U+796b, U+796f, U+7972, U+7974, U+7979, U+797b; } /* [51] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.51.woff2) format('woff2'); unicode-range: U+770f, U+7712, U+7714, U+7716, U+7719-771b, U+771e, U+7721-7722, U+7726, U+7728, U+772b-7730, U+7732-7736, U+7739-773a, U+773d-773f, U+7743, U+7746-7747, U+774c-774f, U+7751-7752, U+7758-775a, U+775c-775e, U+7762, U+7765-7766, U+7768-776a, U+776c-776d, U+7771-7772, U+777a, U+777c-777e, U+7780, U+7785, U+7787, U+778b-778d, U+778f-7791, U+7793, U+779e-77a0, U+77a2, U+77a5, U+77ad, U+77af, U+77b4-77b7, U+77bd-77c0, U+77c2, U+77c5, U+77c7, U+77cd, U+77d6-77d7, U+77d9-77da, U+77dd-77de, U+77e7, U+77ea, U+77ec, U+77ef, U+77f8, U+77fb, U+77fd-77fe, U+7800, U+7803, U+7806, U+7809, U+780f-7812, U+7815, U+7817-7818, U+781a-781f, U+7821-7823, U+7825-7827, U+7829, U+782b-7830, U+7832-7833, U+7835, U+7837, U+7839-783c; } /* [52] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.52.woff2) format('woff2'); unicode-range: U+760a-760e, U+7610-7619, U+761b-761d, U+761f-7622, U+7625, U+7627-762a, U+762e-7630, U+7632-7635, U+7638-763a, U+763c-763d, U+763f-7640, U+7642-7643, U+7647-7648, U+764d-764e, U+7652, U+7654, U+7658, U+765a, U+765c, U+765e-765f, U+7661-7663, U+7665, U+7669, U+766c, U+766e-766f, U+7671-7673, U+7675-7676, U+7678-767a, U+767f, U+7681, U+7683, U+7688, U+768a-768c, U+768e, U+7690-7692, U+7695, U+7698, U+769a-769b, U+769d-76a0, U+76a2, U+76a4-76a7, U+76ab-76ac, U+76af-76b0, U+76b2, U+76b4-76b5, U+76ba-76bb, U+76bf, U+76c2-76c3, U+76c5, U+76c9, U+76cc-76ce, U+76dc-76de, U+76e1-76ea, U+76f1, U+76f9-76fb, U+76fd, U+76ff-7700, U+7703-7704, U+7707-7708, U+770c-770e; } /* [53] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.53.woff2) format('woff2'); unicode-range: U+74ef, U+74f4, U+74ff, U+7501, U+7503, U+7505, U+7508, U+750d, U+750f, U+7511, U+7513, U+7515, U+7517, U+7519, U+7521-7527, U+752a, U+752c-752d, U+752f, U+7534, U+7536, U+753a, U+753e, U+7540, U+7544, U+7547-754b, U+754d-754e, U+7550-7553, U+7556-7557, U+755a-755b, U+755d-755e, U+7560, U+7562, U+7564, U+7566-7568, U+756b-756c, U+756f-7573, U+7575, U+7579-757c, U+757e-757f, U+7581-7584, U+7587, U+7589-758e, U+7590, U+7592, U+7594, U+7596, U+7599-759a, U+759d, U+759f-75a0, U+75a3, U+75a5, U+75a8, U+75ac-75ad, U+75b0-75b1, U+75b3-75b5, U+75b8, U+75bd, U+75c1-75c4, U+75c8-75ca, U+75cc-75cd, U+75d4, U+75d6, U+75d9, U+75de, U+75e0, U+75e2-75e4, U+75e6-75ea, U+75f1-75f3, U+75f7, U+75f9-75fa, U+75fc, U+75fe-7601, U+7603, U+7605-7606, U+7608-7609; } /* [54] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.54.woff2) format('woff2'); unicode-range: U+73e7-73ea, U+73ee-73f0, U+73f2, U+73f4-73f5, U+73f7, U+73f9-73fa, U+73fc-73fd, U+73ff-7402, U+7404, U+7407-7408, U+740a-740f, U+7418, U+741a-741c, U+741e, U+7424-7425, U+7428-7429, U+742c-7430, U+7432, U+7435-7436, U+7438-743b, U+743e-7441, U+7443-7446, U+7448, U+744a-744b, U+7452, U+7457, U+745b, U+745d, U+7460, U+7462-7465, U+7467-746a, U+746d, U+746f, U+7471, U+7473-7474, U+7477, U+747a, U+747e, U+7481-7482, U+7484, U+7486, U+7488-748b, U+748e-748f, U+7493, U+7498, U+749a, U+749c-74a0, U+74a3, U+74a6, U+74a9-74aa, U+74ae, U+74b0-74b2, U+74b6, U+74b8-74ba, U+74bd, U+74bf, U+74c1, U+74c3, U+74c5, U+74c8, U+74ca, U+74cc, U+74cf, U+74d1-74d2, U+74d4-74d5, U+74d8-74db, U+74de-74e0, U+74e2, U+74e4-74e5, U+74e7-74e9, U+74ee; } /* [55] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.55.woff2) format('woff2'); unicode-range: U+72dd-72df, U+72e1, U+72e5-72e6, U+72e8, U+72ef-72f0, U+72f2-72f4, U+72f6-72f7, U+72f9-72fb, U+72fd, U+7300-7304, U+7307, U+730a-730c, U+7313-7317, U+731d-7322, U+7327, U+7329, U+732c-732d, U+7330-7331, U+7333, U+7335-7337, U+7339, U+733d-733e, U+7340, U+7342, U+7344-7345, U+734a, U+734d-7350, U+7352, U+7355, U+7357, U+7359, U+735f-7360, U+7362-7363, U+7365, U+7368, U+736c-736d, U+736f-7370, U+7372, U+7374-7376, U+7378, U+737a-737b, U+737d-737e, U+7382-7383, U+7386, U+7388, U+738a, U+738c-7393, U+7395, U+7397-739a, U+739c, U+739e, U+73a0-73a3, U+73a5-73a8, U+73aa, U+73ad, U+73b1, U+73b3, U+73b6-73b7, U+73b9, U+73c2, U+73c5-73c9, U+73cc, U+73ce-73d0, U+73d2, U+73d6, U+73d9, U+73db-73de, U+73e3, U+73e5-73e6; } /* [56] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.56.woff2) format('woff2'); unicode-range: U+719c, U+71a0, U+71a4-71a5, U+71a8, U+71af, U+71b1-71bc, U+71be, U+71c1-71c2, U+71c4, U+71c8-71cb, U+71ce-71d0, U+71d2, U+71d4, U+71d9-71da, U+71dc, U+71df-71e0, U+71e6-71e8, U+71ea, U+71ed-71ee, U+71f4, U+71f6, U+71f9, U+71fb-71fc, U+71ff-7200, U+7207, U+720c-720d, U+7210, U+7216, U+721a-721e, U+7223, U+7228, U+722b, U+722d-722e, U+7230, U+7232, U+723a-723c, U+723e-7242, U+7246, U+724b, U+724d-724e, U+7252, U+7256, U+7258, U+725a, U+725c-725d, U+7260, U+7264-7266, U+726a, U+726c, U+726e-726f, U+7271, U+7273-7274, U+7278, U+727b, U+727d-727e, U+7281-7282, U+7284, U+7287, U+728a, U+728d, U+728f, U+7292, U+729b, U+729f-72a0, U+72a7, U+72ad-72ae, U+72b0-72b5, U+72b7-72b8, U+72ba-72be, U+72c0-72c1, U+72c3, U+72c5-72c6, U+72c8, U+72cc-72ce, U+72d2, U+72d6, U+72db; } /* [57] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.57.woff2) format('woff2'); unicode-range: U+7005-7006, U+7009, U+700b, U+700d, U+7015, U+7018, U+701b, U+701d-701f, U+7023, U+7026-7028, U+702c, U+702e-7030, U+7035, U+7037, U+7039-703a, U+703c-703e, U+7044, U+7049-704b, U+704f, U+7051, U+7058, U+705a, U+705c-705e, U+7061, U+7064, U+7066, U+706c, U+707d, U+7080-7081, U+7085-7086, U+708a, U+708f, U+7091, U+7094-7095, U+7098-7099, U+709c-709d, U+709f, U+70a4, U+70a9-70aa, U+70af-70b2, U+70b4-70b7, U+70bb, U+70c0, U+70c3, U+70c7, U+70cb, U+70ce-70cf, U+70d4, U+70d9-70da, U+70dc-70dd, U+70e0, U+70e9, U+70ec, U+70f7, U+70fa, U+70fd, U+70ff, U+7104, U+7108-7109, U+710c, U+7110, U+7113-7114, U+7116-7118, U+711c, U+711e, U+7120, U+712e-712f, U+7131, U+713c, U+7142, U+7144-7147, U+7149-714b, U+7150, U+7152, U+7155-7156, U+7159-715a, U+715c, U+7161, U+7165-7166, U+7168-7169, U+716d, U+7173-7174, U+7176, U+7178, U+717a, U+717d, U+717f-7180, U+7184, U+7186-7188, U+7192, U+7198; } /* [58] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.58.woff2) format('woff2'); unicode-range: U+6ed8-6ed9, U+6edb, U+6edd, U+6edf-6ee0, U+6ee2, U+6ee6, U+6eea, U+6eec, U+6eee-6eef, U+6ef2-6ef3, U+6ef7-6efa, U+6efe, U+6f01, U+6f03, U+6f08-6f09, U+6f15-6f16, U+6f19, U+6f22-6f25, U+6f28-6f2a, U+6f2c-6f2d, U+6f2f, U+6f31-6f32, U+6f36-6f38, U+6f3f, U+6f43-6f46, U+6f48, U+6f4b, U+6f4e-6f4f, U+6f51, U+6f54-6f57, U+6f59-6f5b, U+6f5e-6f5f, U+6f61, U+6f64-6f67, U+6f69-6f6c, U+6f6f-6f72, U+6f74-6f76, U+6f78-6f7e, U+6f80-6f83, U+6f86, U+6f89, U+6f8b-6f8d, U+6f90, U+6f92, U+6f94, U+6f97-6f98, U+6f9b, U+6fa3-6fa5, U+6fa7, U+6faa, U+6faf, U+6fb1, U+6fb4, U+6fb6, U+6fb9, U+6fc1-6fcb, U+6fd1-6fd3, U+6fd5, U+6fdb, U+6fde-6fe1, U+6fe4, U+6fe9, U+6feb-6fec, U+6fee-6ff1, U+6ffa, U+6ffe; } /* [59] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.59.woff2) format('woff2'); unicode-range: U+6dc3, U+6dc5-6dc6, U+6dc9, U+6dcc, U+6dcf, U+6dd2-6dd3, U+6dd6, U+6dd9-6dde, U+6de0, U+6de4, U+6de6, U+6de8-6dea, U+6dec, U+6def-6df0, U+6df5-6df6, U+6df8, U+6dfa, U+6dfc, U+6e03-6e04, U+6e07-6e09, U+6e0b-6e0c, U+6e0e, U+6e11, U+6e13, U+6e15-6e16, U+6e19-6e1b, U+6e1e-6e1f, U+6e22, U+6e25-6e27, U+6e2b-6e2c, U+6e36-6e37, U+6e39-6e3a, U+6e3c-6e41, U+6e44-6e45, U+6e47, U+6e49-6e4b, U+6e4d-6e4e, U+6e51, U+6e53-6e55, U+6e5c-6e5f, U+6e61-6e63, U+6e65-6e67, U+6e6a-6e6b, U+6e6d-6e70, U+6e72-6e74, U+6e76-6e78, U+6e7c, U+6e80-6e82, U+6e86-6e87, U+6e89, U+6e8d, U+6e8f, U+6e96, U+6e98, U+6e9d-6e9f, U+6ea1, U+6ea5-6ea7, U+6eab, U+6eb1-6eb2, U+6eb4, U+6eb7, U+6ebb-6ebd, U+6ebf-6ec6, U+6ec8-6ec9, U+6ecc, U+6ecf-6ed0, U+6ed3-6ed4, U+6ed7; } /* [60] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.60.woff2) format('woff2'); unicode-range: U+6cb2, U+6cb4-6cb5, U+6cb7, U+6cba, U+6cbc-6cbd, U+6cc1-6cc3, U+6cc5-6cc7, U+6cd0-6cd4, U+6cd6-6cd7, U+6cd9-6cda, U+6cde-6ce0, U+6ce4, U+6ce6, U+6ce9, U+6ceb-6cef, U+6cf1-6cf2, U+6cf6-6cf7, U+6cfa, U+6cfe, U+6d03-6d05, U+6d07-6d08, U+6d0a, U+6d0c, U+6d0e-6d11, U+6d13-6d14, U+6d16, U+6d18-6d1a, U+6d1c, U+6d1f, U+6d22-6d23, U+6d26-6d29, U+6d2b, U+6d2e-6d30, U+6d33, U+6d35-6d36, U+6d38-6d3a, U+6d3c, U+6d3f, U+6d42-6d44, U+6d48-6d49, U+6d4d, U+6d50, U+6d52, U+6d54, U+6d56-6d58, U+6d5a-6d5c, U+6d5e, U+6d60-6d61, U+6d63-6d65, U+6d67, U+6d6c-6d6d, U+6d6f, U+6d75, U+6d7b-6d7d, U+6d87, U+6d8a, U+6d8e, U+6d90-6d9a, U+6d9c-6da0, U+6da2-6da3, U+6da7, U+6daa-6dac, U+6dae, U+6db3-6db4, U+6db6, U+6db8, U+6dbc, U+6dbf, U+6dc2; } /* [61] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.61.woff2) format('woff2'); unicode-range: U+6b85-6b86, U+6b89, U+6b8d, U+6b91-6b93, U+6b95, U+6b97-6b98, U+6b9a-6b9b, U+6b9e, U+6ba1-6ba4, U+6ba9-6baa, U+6bad, U+6baf-6bb0, U+6bb2-6bb3, U+6bba-6bbd, U+6bc0, U+6bc2, U+6bc6, U+6bca-6bcc, U+6bce, U+6bd0-6bd1, U+6bd3, U+6bd6-6bd8, U+6bda, U+6be1, U+6be6, U+6bec, U+6bf1, U+6bf3-6bf5, U+6bf9, U+6bfd, U+6c05-6c08, U+6c0d, U+6c10, U+6c15-6c1a, U+6c21, U+6c23-6c26, U+6c29-6c2d, U+6c30-6c33, U+6c35-6c37, U+6c39-6c3a, U+6c3c-6c3f, U+6c46, U+6c4a-6c4c, U+6c4e-6c50, U+6c54, U+6c56, U+6c59-6c5c, U+6c5e, U+6c63, U+6c67-6c69, U+6c6b, U+6c6d, U+6c6f, U+6c72-6c74, U+6c78-6c7a, U+6c7c, U+6c84-6c87, U+6c8b-6c8c, U+6c8f, U+6c91, U+6c93-6c96, U+6c98, U+6c9a, U+6c9d, U+6ca2-6ca4, U+6ca8-6ca9, U+6cac-6cae, U+6cb1; } /* [62] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.62.woff2) format('woff2'); unicode-range: U+6a01, U+6a06, U+6a09, U+6a0b, U+6a11, U+6a13, U+6a17-6a19, U+6a1b, U+6a1e, U+6a23, U+6a28-6a29, U+6a2b, U+6a2f-6a30, U+6a35, U+6a38-6a40, U+6a46-6a48, U+6a4a-6a4b, U+6a4e, U+6a50, U+6a52, U+6a5b, U+6a5e, U+6a62, U+6a65-6a67, U+6a6b, U+6a79, U+6a7c, U+6a7e-6a7f, U+6a84, U+6a86, U+6a8e, U+6a90-6a91, U+6a94, U+6a97, U+6a9c, U+6a9e, U+6aa0, U+6aa2, U+6aa4, U+6aa9, U+6aab, U+6aae-6ab0, U+6ab2-6ab3, U+6ab5, U+6ab7-6ab8, U+6aba-6abb, U+6abd, U+6abf, U+6ac2-6ac4, U+6ac6, U+6ac8, U+6acc, U+6ace, U+6ad2-6ad3, U+6ad8-6adc, U+6adf-6ae0, U+6ae4-6ae5, U+6ae7-6ae8, U+6afb, U+6b04-6b05, U+6b0d-6b13, U+6b16-6b17, U+6b19, U+6b24-6b25, U+6b2c, U+6b37-6b39, U+6b3b, U+6b3d, U+6b43, U+6b46, U+6b4e, U+6b50, U+6b53-6b54, U+6b58-6b59, U+6b5b, U+6b60, U+6b69, U+6b6d, U+6b6f-6b70, U+6b73-6b74, U+6b77-6b7a, U+6b80-6b84; } /* [63] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.63.woff2) format('woff2'); unicode-range: U+68e1, U+68e3-68e4, U+68e6-68ed, U+68ef-68f0, U+68f2, U+68f4, U+68f6-68f7, U+68f9, U+68fb-68fd, U+68ff-6902, U+6906-6908, U+690b, U+6910, U+691a-691c, U+691f-6920, U+6924-6925, U+692a, U+692d, U+6934, U+6939, U+693c-6945, U+694a-694b, U+6952-6954, U+6957, U+6959, U+695b, U+695d, U+695f, U+6962-6964, U+6966, U+6968-696c, U+696e-696f, U+6971, U+6973-6974, U+6978-6979, U+697d, U+697f-6980, U+6985, U+6987-698a, U+698d-698e, U+6994-6999, U+699b, U+69a3-69a4, U+69a6-69a7, U+69ab, U+69ad-69ae, U+69b1, U+69b7, U+69bb-69bc, U+69c1, U+69c3-69c5, U+69c7, U+69ca-69ce, U+69d0-69d1, U+69d3-69d4, U+69d7-69da, U+69e0, U+69e4, U+69e6, U+69ec-69ed, U+69f1-69f3, U+69f8, U+69fa-69fc, U+69fe-6a00; } /* [64] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.64.woff2) format('woff2'); unicode-range: U+6792-6793, U+6796, U+6798, U+679e-67a1, U+67a5, U+67a7-67a9, U+67ac-67ad, U+67b0-67b1, U+67b3, U+67b5, U+67b7, U+67b9, U+67bb-67bc, U+67c0-67c1, U+67c3, U+67c5-67ca, U+67d1-67d2, U+67d7-67d9, U+67dd-67df, U+67e2-67e4, U+67e6-67e9, U+67f0, U+67f5, U+67f7-67f8, U+67fa-67fb, U+67fd-67fe, U+6800-6801, U+6803-6804, U+6806, U+6809-680a, U+680c, U+680e, U+6812, U+681d-681f, U+6822, U+6824-6829, U+682b-682d, U+6831-6835, U+683b, U+683e, U+6840-6841, U+6844-6845, U+6849, U+684e, U+6853, U+6855-6856, U+685c-685d, U+685f-6862, U+6864, U+6866-6868, U+686b, U+686f, U+6872, U+6874, U+6877, U+687f, U+6883, U+6886, U+688f, U+689b, U+689f-68a0, U+68a2-68a3, U+68b1, U+68b6, U+68b9-68ba, U+68bc-68bf, U+68c1-68c4, U+68c6, U+68c8, U+68ca, U+68cc, U+68d0-68d1, U+68d3, U+68d7, U+68dd, U+68df; } /* [65] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.65.woff2) format('woff2'); unicode-range: U+663a-663b, U+663d, U+6641, U+6644-6645, U+6649, U+664c, U+664f, U+6654, U+6659, U+665b, U+665d-665e, U+6660-6667, U+6669, U+666b-666c, U+6671, U+6673, U+6677-6679, U+667c, U+6680-6681, U+6684-6685, U+6688-6689, U+668b-668e, U+6690, U+6692, U+6695, U+6698, U+669a, U+669d, U+669f-66a0, U+66a2-66a3, U+66a6, U+66aa-66ab, U+66b1-66b2, U+66b5, U+66b8-66b9, U+66bb, U+66be, U+66c1, U+66c6-66c9, U+66cc, U+66d5-66d8, U+66da-66dc, U+66de-66e2, U+66e8-66ea, U+66ec, U+66f1, U+66f3, U+66f7, U+66fa, U+66fd, U+6702, U+6705, U+670a, U+670f-6710, U+6713, U+6715, U+6719, U+6722-6723, U+6725-6727, U+6729, U+672d-672e, U+6732-6733, U+6736, U+6739, U+673b, U+673f, U+6744, U+6748, U+674c-674d, U+6753, U+6755, U+6762, U+6767, U+6769-676c, U+676e, U+6772-6773, U+6775, U+6777, U+677a-677d, U+6782-6783, U+6787, U+678a-678d, U+678f; } /* [66] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.66.woff2) format('woff2'); unicode-range: U+64f8, U+64fa, U+64fc, U+64fe-64ff, U+6503, U+6509, U+650f, U+6514, U+6518, U+651c-651e, U+6522-6525, U+652a-652c, U+652e, U+6530-6532, U+6534-6535, U+6537-6538, U+653a, U+653c-653d, U+6542, U+6549-654b, U+654d-654e, U+6553-6555, U+6557-6558, U+655d, U+6564, U+6569, U+656b, U+656d-656f, U+6571, U+6573, U+6575-6576, U+6578-657e, U+6581-6583, U+6585-6586, U+6589, U+658e-658f, U+6592-6593, U+6595-6596, U+659b, U+659d, U+659f-65a1, U+65a3, U+65ab-65ac, U+65b2, U+65b6-65b7, U+65ba-65bb, U+65be-65c0, U+65c2-65c4, U+65c6-65c8, U+65cc, U+65ce, U+65d0, U+65d2-65d3, U+65d6, U+65db, U+65dd, U+65e1, U+65e3, U+65ee-65f0, U+65f3-65f5, U+65f8, U+65fb-65fc, U+65fe-6600, U+6603, U+6607, U+6609, U+660b, U+6610-6611, U+6619-661a, U+661c-661e, U+6621, U+6624, U+6626, U+662a-662c, U+662e, U+6630-6631, U+6633-6634, U+6636; } /* [67] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.67.woff2) format('woff2'); unicode-range: U+63bc, U+63be, U+63c0, U+63c3-63c4, U+63c6, U+63c8, U+63cd-63ce, U+63d1, U+63d6, U+63da-63db, U+63de, U+63e0, U+63e3, U+63e9-63ea, U+63ee, U+63f2, U+63f5-63fa, U+63fc, U+63fe-6400, U+6406, U+640b-640d, U+6410, U+6414, U+6416-6417, U+641b, U+6420-6423, U+6425-6428, U+642a, U+6431-6432, U+6434-6437, U+643d-6442, U+6445, U+6448, U+6450-6452, U+645b-645f, U+6462, U+6465, U+6468, U+646d, U+646f-6471, U+6473, U+6477, U+6479-647d, U+6482-6485, U+6487-6488, U+648c, U+6490, U+6493, U+6496-649a, U+649d, U+64a0, U+64a5, U+64ab-64ac, U+64b1-64b7, U+64b9-64bb, U+64be-64c1, U+64c4, U+64c7, U+64c9-64cb, U+64d0, U+64d4, U+64d7-64d8, U+64da, U+64de, U+64e0-64e2, U+64e4, U+64e9, U+64ec, U+64f0-64f2, U+64f4, U+64f7; } /* [68] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.68.woff2) format('woff2'); unicode-range: U+623b, U+623d-623e, U+6243, U+6246, U+6248-6249, U+624c, U+6255, U+6259, U+625e, U+6260-6261, U+6265-6266, U+626a, U+6271, U+627a, U+627c-627d, U+6283, U+6286, U+6289, U+628e, U+6294, U+629c, U+629e-629f, U+62a1, U+62a8, U+62ba-62bb, U+62bf, U+62c2, U+62c4, U+62c8, U+62ca-62cb, U+62ce-62cf, U+62d1, U+62d7, U+62d9-62da, U+62dd, U+62e0-62e1, U+62e3-62e4, U+62e7, U+62eb, U+62ee, U+62f0, U+62f4-62f6, U+6308, U+630a-630e, U+6310, U+6312-6313, U+6317, U+6319, U+631b, U+631d-631f, U+6322, U+6326, U+6329, U+6331-6332, U+6334-6337, U+6339, U+633b-633c, U+633e-6340, U+6343, U+6347, U+634b-634e, U+6354, U+635c-635d, U+6368-6369, U+636d, U+636f-6372, U+6376, U+637a-637b, U+637d, U+6382-6383, U+6387, U+638a-638b, U+638d-638e, U+6391, U+6393-6397, U+6399, U+639b, U+639e-639f, U+63a1, U+63a3-63a4, U+63ac-63ae, U+63b1-63b5, U+63b7-63bb; } /* [69] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.69.woff2) format('woff2'); unicode-range: U+60fa, U+6100, U+6106, U+610d-610e, U+6112, U+6114-6115, U+6119, U+611c, U+6120, U+6122-6123, U+6126, U+6128-6130, U+6136-6137, U+613a, U+613d-613e, U+6144, U+6146-6147, U+614a-614b, U+6151, U+6153, U+6158, U+615a, U+615c-615d, U+615f, U+6161, U+6163-6165, U+616b-616c, U+616e, U+6171, U+6173-6177, U+617e, U+6182, U+6187, U+618a, U+618d-618e, U+6190-6191, U+6194, U+6199-619a, U+619c, U+619f, U+61a1, U+61a3-61a4, U+61a7-61a9, U+61ab-61ad, U+61b2-61b3, U+61b5-61b7, U+61ba-61bb, U+61bf, U+61c3-61c4, U+61c6-61c7, U+61c9-61cb, U+61d0-61d1, U+61d3-61d4, U+61d7, U+61da, U+61df-61e1, U+61e6, U+61ee, U+61f0, U+61f2, U+61f6-61f8, U+61fa, U+61fc-61fe, U+6200, U+6206-6207, U+6209, U+620b, U+620d-620e, U+6213-6215, U+6217, U+6219, U+621b-6223, U+6225-6226, U+622c, U+622e-6230, U+6232, U+6238; } /* [70] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.70.woff2) format('woff2'); unicode-range: U+5fd1-5fd6, U+5fda-5fde, U+5fe1-5fe2, U+5fe4-5fe5, U+5fea, U+5fed-5fee, U+5ff1-5ff3, U+5ff6, U+5ff8, U+5ffb, U+5ffe-5fff, U+6002-6006, U+600a, U+600d, U+600f, U+6014, U+6019, U+601b, U+6020, U+6023, U+6026, U+6029, U+602b, U+602e-602f, U+6031, U+6033, U+6035, U+6039, U+603f, U+6041-6043, U+6046, U+604f, U+6053-6054, U+6058-605b, U+605d-605e, U+6060, U+6063, U+6065, U+6067, U+606a-606c, U+6075, U+6078-6079, U+607b, U+607d, U+607f, U+6083, U+6085-6087, U+608a, U+608c, U+608e-608f, U+6092-6093, U+6095-6097, U+609b-609d, U+60a2, U+60a7, U+60a9-60ab, U+60ad, U+60af-60b1, U+60b3-60b6, U+60b8, U+60bb, U+60bd-60be, U+60c0-60c3, U+60c6-60c9, U+60cb, U+60ce, U+60d3-60d4, U+60d7-60db, U+60dd, U+60e1-60e4, U+60e6, U+60ea, U+60ec-60ee, U+60f0-60f1, U+60f4, U+60f6; } /* [71] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.71.woff2) format('woff2'); unicode-range: U+5ea3-5ea5, U+5ea8, U+5eab, U+5eaf, U+5eb3, U+5eb5-5eb6, U+5eb9, U+5ebe, U+5ec1-5ec3, U+5ec6, U+5ec8, U+5ecb-5ecc, U+5ed1-5ed2, U+5ed4, U+5ed9-5edb, U+5edd, U+5edf-5ee0, U+5ee2-5ee3, U+5ee8, U+5eea, U+5eec, U+5eef-5ef0, U+5ef3-5ef4, U+5ef8, U+5efb-5efc, U+5efe-5eff, U+5f01, U+5f07, U+5f0b-5f0e, U+5f10-5f12, U+5f14, U+5f1a, U+5f22, U+5f28-5f29, U+5f2c-5f2d, U+5f35-5f36, U+5f38, U+5f3b-5f43, U+5f45-5f4a, U+5f4c-5f4e, U+5f50, U+5f54, U+5f56-5f59, U+5f5b-5f5f, U+5f61, U+5f63, U+5f65, U+5f67-5f68, U+5f6b, U+5f6e-5f6f, U+5f72-5f78, U+5f7a, U+5f7e-5f7f, U+5f82-5f83, U+5f87, U+5f89-5f8a, U+5f8d, U+5f91, U+5f93, U+5f95, U+5f98-5f99, U+5f9c, U+5f9e, U+5fa0, U+5fa6-5fa9, U+5fac-5fad, U+5faf, U+5fb3-5fb5, U+5fb9, U+5fbc, U+5fc4, U+5fc9, U+5fcb, U+5fce-5fd0; } /* [72] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.72.woff2) format('woff2'); unicode-range: U+5d32-5d34, U+5d3c-5d3e, U+5d41-5d44, U+5d46-5d48, U+5d4a-5d4b, U+5d4e, U+5d50, U+5d52, U+5d55-5d58, U+5d5a-5d5d, U+5d68-5d69, U+5d6b-5d6c, U+5d6f, U+5d74, U+5d7f, U+5d82-5d89, U+5d8b-5d8c, U+5d8f, U+5d92-5d93, U+5d99, U+5d9d, U+5db2, U+5db6-5db7, U+5dba, U+5dbc-5dbd, U+5dc2-5dc3, U+5dc6-5dc7, U+5dc9, U+5dcc, U+5dd2, U+5dd4, U+5dd6-5dd8, U+5ddb-5ddc, U+5de3, U+5ded, U+5def, U+5df3, U+5df6, U+5dfa-5dfd, U+5dff-5e00, U+5e07, U+5e0f, U+5e11, U+5e13-5e14, U+5e19-5e1b, U+5e22, U+5e25, U+5e28, U+5e2a, U+5e2f-5e31, U+5e33-5e34, U+5e36, U+5e39-5e3c, U+5e3e, U+5e40, U+5e44, U+5e46-5e48, U+5e4c, U+5e4f, U+5e53-5e54, U+5e57, U+5e59, U+5e5b, U+5e5e-5e5f, U+5e61, U+5e63, U+5e6a-5e6b, U+5e75, U+5e77, U+5e79-5e7a, U+5e7e, U+5e80-5e81, U+5e83, U+5e85, U+5e87, U+5e8b, U+5e91-5e92, U+5e96, U+5e98, U+5e9b, U+5e9d, U+5ea0-5ea2; } /* [73] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.73.woff2) format('woff2'); unicode-range: U+5bf5-5bf6, U+5bfe, U+5c02-5c03, U+5c05, U+5c07-5c09, U+5c0b-5c0c, U+5c0e, U+5c10, U+5c12-5c13, U+5c15, U+5c17, U+5c19, U+5c1b-5c1c, U+5c1e-5c1f, U+5c22, U+5c25, U+5c28, U+5c2a-5c2b, U+5c2f-5c30, U+5c37, U+5c3b, U+5c43-5c44, U+5c46-5c47, U+5c4d, U+5c50, U+5c59, U+5c5b-5c5c, U+5c62-5c64, U+5c66, U+5c6c, U+5c6e, U+5c74, U+5c78-5c7e, U+5c80, U+5c83-5c84, U+5c88, U+5c8b-5c8d, U+5c91, U+5c94-5c96, U+5c98-5c99, U+5c9c, U+5c9e, U+5ca1-5ca3, U+5cab-5cac, U+5cb1, U+5cb5, U+5cb7, U+5cba, U+5cbd-5cbf, U+5cc1, U+5cc3-5cc4, U+5cc7, U+5ccb, U+5cd2, U+5cd8-5cd9, U+5cdf-5ce0, U+5ce3-5ce6, U+5ce8-5cea, U+5ced, U+5cef, U+5cf3-5cf4, U+5cf6, U+5cf8, U+5cfd, U+5d00-5d04, U+5d06, U+5d08, U+5d0b-5d0d, U+5d0f-5d13, U+5d15, U+5d17-5d1a, U+5d1d-5d22, U+5d24-5d27, U+5d2e-5d31; } /* [74] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.74.woff2) format('woff2'); unicode-range: U+5ab2, U+5ab4-5ab5, U+5ab7-5aba, U+5abd-5abf, U+5ac3-5ac4, U+5ac6-5ac8, U+5aca-5acb, U+5acd, U+5acf-5ad2, U+5ad4, U+5ad8-5ada, U+5adc, U+5adf-5ae2, U+5ae4, U+5ae6, U+5ae8, U+5aea-5aed, U+5af0-5af3, U+5af5, U+5af9-5afb, U+5afd, U+5b01, U+5b05, U+5b08, U+5b0b-5b0c, U+5b11, U+5b16-5b17, U+5b1b, U+5b21-5b22, U+5b24, U+5b27-5b2e, U+5b30, U+5b32, U+5b34, U+5b36-5b38, U+5b3e-5b40, U+5b43, U+5b45, U+5b4a-5b4b, U+5b51-5b53, U+5b56, U+5b5a-5b5b, U+5b62, U+5b65, U+5b67, U+5b6a-5b6e, U+5b70-5b71, U+5b73, U+5b7a-5b7b, U+5b7f-5b80, U+5b84, U+5b8d, U+5b91, U+5b93-5b95, U+5b9f, U+5ba5-5ba6, U+5bac, U+5bae, U+5bb8, U+5bc0, U+5bc3, U+5bcb, U+5bd0-5bd1, U+5bd4-5bd8, U+5bda-5bdc, U+5be2, U+5be4-5be7, U+5be9, U+5beb-5bec, U+5bee-5bf0, U+5bf2-5bf3; } /* [75] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.75.woff2) format('woff2'); unicode-range: U+5981, U+598f, U+5997-5998, U+599a, U+599c-599d, U+59a0-59a1, U+59a3-59a4, U+59a7, U+59aa-59ad, U+59af, U+59b2-59b3, U+59b5-59b6, U+59b8, U+59ba, U+59bd-59be, U+59c0-59c1, U+59c3-59c4, U+59c7-59ca, U+59cc-59cd, U+59cf, U+59d2, U+59d5-59d6, U+59d8-59d9, U+59db, U+59dd-59e0, U+59e2-59e7, U+59e9-59eb, U+59ee, U+59f1, U+59f3, U+59f5, U+59f7-59f9, U+59fd, U+5a06, U+5a08-5a0a, U+5a0c-5a0d, U+5a11-5a13, U+5a15-5a16, U+5a1a-5a1b, U+5a21-5a23, U+5a2d-5a2f, U+5a32, U+5a38, U+5a3c, U+5a3e-5a45, U+5a47, U+5a4a, U+5a4c-5a4d, U+5a4f-5a51, U+5a53, U+5a55-5a57, U+5a5e, U+5a60, U+5a62, U+5a65-5a67, U+5a6a, U+5a6c-5a6d, U+5a72-5a73, U+5a75-5a76, U+5a79-5a7c, U+5a81-5a84, U+5a8c, U+5a8e, U+5a93, U+5a96-5a97, U+5a9c, U+5a9e, U+5aa0, U+5aa3-5aa4, U+5aaa, U+5aae-5aaf, U+5ab1; } /* [76] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.76.woff2) format('woff2'); unicode-range: U+5831, U+583a, U+583d, U+583f-5842, U+5844-5846, U+5848, U+584a, U+584d, U+5852, U+5857, U+5859-585a, U+585c-585d, U+5862, U+5868-5869, U+586c-586d, U+586f-5873, U+5875, U+5879, U+587d-587e, U+5880-5881, U+5888-588a, U+588d, U+5892, U+5896-5898, U+589a, U+589c-589d, U+58a0-58a1, U+58a3, U+58a6, U+58a9, U+58ab-58ae, U+58b0, U+58b3, U+58bb-58bf, U+58c2-58c3, U+58c5-58c8, U+58ca, U+58cc, U+58ce, U+58d1-58d3, U+58d5, U+58d8-58d9, U+58de-58df, U+58e2, U+58e9, U+58ec, U+58ef, U+58f1-58f2, U+58f5, U+58f7-58f8, U+58fa, U+58fd, U+5900, U+5902, U+5906, U+5908-590c, U+590e, U+5910, U+5914, U+5919, U+591b, U+591d-591e, U+5920, U+5922-5925, U+5928, U+592c-592d, U+592f, U+5932, U+5936, U+593c, U+593e, U+5940-5942, U+5944, U+594c-594d, U+5950, U+5953, U+5958, U+595a, U+5961, U+5966-5968, U+596a, U+596c-596e, U+5977, U+597b-597c; } /* [77] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.77.woff2) format('woff2'); unicode-range: U+570a, U+570c-570d, U+570f, U+5712-5713, U+5718-5719, U+571c, U+571e, U+5725, U+5727, U+5729-572a, U+572c, U+572e-572f, U+5734-5735, U+5739, U+573b, U+5741, U+5743, U+5745, U+5749, U+574c-574d, U+575c, U+5763, U+5768-5769, U+576b, U+576d-576e, U+5770, U+5773, U+5775, U+5777, U+577b-577c, U+5785-5786, U+5788, U+578c, U+578e-578f, U+5793-5795, U+5799-57a1, U+57a3-57a4, U+57a6-57aa, U+57ac-57ad, U+57af-57b2, U+57b4-57b6, U+57b8-57b9, U+57bd-57bf, U+57c2, U+57c4-57c8, U+57cc-57cd, U+57cf, U+57d2, U+57d5-57de, U+57e1-57e2, U+57e4-57e5, U+57e7, U+57eb, U+57ed, U+57ef, U+57f4-57f8, U+57fc-57fd, U+5800-5801, U+5803, U+5805, U+5807, U+5809, U+580b-580e, U+5811, U+5814, U+5819, U+581b-5820, U+5822-5823, U+5825-5826, U+582c, U+582f; } /* [78] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.78.woff2) format('woff2'); unicode-range: U+5605-5606, U+5608, U+560c-560d, U+560f, U+5614, U+5616-5617, U+561a, U+561c, U+561e, U+5621-5625, U+5627, U+5629, U+562b-5630, U+5636, U+5638-563a, U+563c, U+5640-5642, U+5649, U+564c-5650, U+5653-5655, U+5657-565b, U+5660, U+5663-5664, U+5666, U+566b, U+566f-5671, U+5673-567c, U+567e, U+5684-5687, U+568c, U+568e-5693, U+5695, U+5697, U+569b-569c, U+569e-569f, U+56a1-56a2, U+56a4-56a9, U+56ac-56af, U+56b1, U+56b4, U+56b6-56b8, U+56bf, U+56c1-56c3, U+56c9, U+56cd, U+56d1, U+56d4, U+56d6-56d9, U+56dd, U+56df, U+56e1, U+56e3-56e6, U+56e8-56ec, U+56ee-56ef, U+56f1-56f3, U+56f5, U+56f7-56f9, U+56fc, U+56ff-5700, U+5703-5704, U+5709; } /* [79] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.79.woff2) format('woff2'); unicode-range: U+5519, U+551b, U+551d-551e, U+5520, U+5522-5523, U+5526-5527, U+552a-552c, U+5530, U+5532-5535, U+5537-5538, U+553b-5541, U+5543-5544, U+5547-5549, U+554b, U+554d, U+5550, U+5553, U+5555-5558, U+555b-555f, U+5567-5569, U+556b-5572, U+5574-5577, U+557b-557c, U+557e-557f, U+5581, U+5583, U+5585-5586, U+5588, U+558b-558c, U+558e-5591, U+5593, U+5599-559a, U+559f, U+55a5-55a6, U+55a8-55ac, U+55ae, U+55b0-55b3, U+55b6, U+55b9-55ba, U+55bc-55be, U+55c4, U+55c6-55c7, U+55c9, U+55cc-55d2, U+55d4-55db, U+55dd-55df, U+55e1, U+55e3-55e6, U+55ea-55ee, U+55f0-55f3, U+55f5-55f7, U+55fb, U+55fe, U+5600-5601; } /* [80] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.80.woff2) format('woff2'); unicode-range: U+53fb-5400, U+5402, U+5405-5407, U+540b, U+540f, U+5412, U+5414, U+5416, U+5418-541a, U+541d, U+5420-5423, U+5425, U+5429-542a, U+542d-542e, U+5431-5433, U+5436, U+543d, U+543f, U+5442-5443, U+5449, U+544b-544c, U+544e, U+5451-5454, U+5456, U+5459, U+545b-545c, U+5461, U+5463-5464, U+546a-5472, U+5474, U+5476-5478, U+547a, U+547e-5484, U+5486, U+548a, U+548d-548e, U+5490-5491, U+5494, U+5497-5499, U+549b, U+549d, U+54a1-54a7, U+54a9, U+54ab, U+54ad, U+54b4-54b5, U+54b9, U+54bb, U+54be-54bf, U+54c2-54c3, U+54c9-54cc, U+54cf-54d0, U+54d3, U+54d5-54d6, U+54d9-54da, U+54dc-54de, U+54e2, U+54e7, U+54f3-54f4, U+54f8-54f9, U+54fd-54ff, U+5501, U+5504-5506, U+550c-550f, U+5511-5514, U+5516-5517; } /* [81] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.81.woff2) format('woff2'); unicode-range: U+52a2, U+52a6-52a7, U+52ac-52ad, U+52af, U+52b4-52b5, U+52b9, U+52bb-52bc, U+52be, U+52c1, U+52c5, U+52ca, U+52cd, U+52d0, U+52d6-52d7, U+52d9, U+52db, U+52dd-52de, U+52e0, U+52e2-52e3, U+52e5, U+52e7-52f0, U+52f2-52f3, U+52f5-52f9, U+52fb-52fc, U+5302, U+5304, U+530b, U+530d, U+530f-5310, U+5315, U+531a, U+531c-531d, U+5321, U+5323, U+5326, U+532e-5331, U+5338, U+533c-533e, U+5340, U+5344-5345, U+534b-534d, U+5350, U+5354, U+5358, U+535d-535f, U+5363, U+5368-5369, U+536c, U+536e-536f, U+5372, U+5379-537b, U+537d, U+538d-538e, U+5390, U+5393-5394, U+5396, U+539b-539d, U+53a0-53a1, U+53a3-53a5, U+53a9, U+53ad-53ae, U+53b0, U+53b2-53b3, U+53b5-53b8, U+53bc, U+53be, U+53c1, U+53c3-53c7, U+53ce-53cf, U+53d2-53d3, U+53d5, U+53da, U+53de-53df, U+53e1-53e2, U+53e7-53e9, U+53f1, U+53f4-53f5, U+53fa; } /* [82] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.82.woff2) format('woff2'); unicode-range: U+5110, U+5113, U+5115, U+5117-5118, U+511a-511c, U+511e-511f, U+5121, U+5128, U+512b-512d, U+5131-5135, U+5137-5139, U+513c, U+5140, U+5142, U+5147, U+514c, U+514e-5150, U+5155-5158, U+5162, U+5169, U+5172, U+517f, U+5181-5184, U+5186-5187, U+518b, U+518f, U+5191, U+5195-5197, U+519a, U+51a2-51a3, U+51a6-51ab, U+51ad-51ae, U+51b1, U+51b4, U+51bc-51bd, U+51bf, U+51c3, U+51c7-51c8, U+51ca-51cb, U+51cd-51ce, U+51d4, U+51d6, U+51db-51dc, U+51e6, U+51e8-51eb, U+51f1, U+51f5, U+51fc, U+51ff, U+5202, U+5205, U+5208, U+520b, U+520d-520e, U+5215-5216, U+5228, U+522a, U+522c-522d, U+5233, U+523c-523d, U+523f-5240, U+5245, U+5247, U+5249, U+524b-524c, U+524e, U+5250, U+525b-525f, U+5261, U+5263-5264, U+5270, U+5273, U+5275, U+5277, U+527d, U+527f, U+5281-5285, U+5287, U+5289, U+528b, U+528d, U+528f, U+5291-5293, U+529a; } /* [83] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.83.woff2) format('woff2'); unicode-range: U+4fe3-4fe4, U+4fe6, U+4fe8, U+4feb-4fed, U+4ff3, U+4ff5-4ff6, U+4ff8, U+4ffe, U+5001, U+5005-5006, U+5009, U+500c, U+500f, U+5013-5018, U+501b-501e, U+5022-5025, U+5027-5028, U+502b-502e, U+5030, U+5033-5034, U+5036-5039, U+503b, U+5041-5043, U+5045-5046, U+5048-504a, U+504c-504e, U+5051, U+5053, U+5055-5057, U+505b, U+505e, U+5060, U+5062-5063, U+5067, U+506a, U+506c, U+5070-5072, U+5074-5075, U+5078, U+507b, U+507d-507e, U+5080, U+5088-5089, U+5091-5092, U+5095, U+5097-509e, U+50a2-50a3, U+50a5-50a7, U+50a9, U+50ad, U+50b3, U+50b5, U+50b7, U+50ba, U+50be, U+50c4-50c5, U+50c7, U+50ca, U+50cd, U+50d1, U+50d5-50d6, U+50da, U+50de, U+50e5-50e6, U+50ec-50ee, U+50f0-50f1, U+50f3, U+50f9-50fb, U+50fe-5102, U+5104, U+5106-5107, U+5109-510b, U+510d, U+510f; } /* [84] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.84.woff2) format('woff2'); unicode-range: U+4eb8-4eb9, U+4ebb-4ebe, U+4ec2-4ec4, U+4ec8-4ec9, U+4ecc, U+4ecf-4ed0, U+4ed2, U+4eda-4edb, U+4edd-4ee1, U+4ee6-4ee9, U+4eeb, U+4eee-4eef, U+4ef3-4ef5, U+4ef8-4efa, U+4efc, U+4f00, U+4f03-4f05, U+4f08-4f09, U+4f0b, U+4f0e, U+4f12-4f13, U+4f15, U+4f1b, U+4f1d, U+4f21-4f22, U+4f25, U+4f27-4f29, U+4f2b-4f2e, U+4f31-4f33, U+4f36-4f37, U+4f39, U+4f3e, U+4f40-4f41, U+4f43, U+4f47-4f49, U+4f54, U+4f57-4f58, U+4f5d-4f5e, U+4f61-4f62, U+4f64-4f65, U+4f67, U+4f6a, U+4f6e-4f6f, U+4f72, U+4f74-4f7e, U+4f80-4f82, U+4f84, U+4f89-4f8a, U+4f8e-4f98, U+4f9e, U+4fa1, U+4fa5, U+4fa9-4faa, U+4fac, U+4fb3, U+4fb6-4fb8, U+4fbd, U+4fc2, U+4fc5-4fc6, U+4fcd-4fce, U+4fd0-4fd1, U+4fd3, U+4fda-4fdc, U+4fdf-4fe0, U+4fe2; } /* [85] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.85.woff2) format('woff2'); unicode-range: U+3127-3129, U+3131, U+3134, U+3137, U+3139, U+3141-3142, U+3145, U+3147-3148, U+314b, U+314d-314e, U+315c, U+3160-3161, U+3163-3164, U+3186, U+318d, U+3192, U+3196-3198, U+319e-319f, U+3220-3229, U+3231, U+3268, U+3297, U+3299, U+32a3, U+338e-338f, U+3395, U+339c-339e, U+33c4, U+33d1-33d2, U+33d5, U+3434, U+34dc, U+34ee, U+353e, U+355d, U+3566, U+3575, U+3592, U+35a0-35a1, U+35ad, U+35ce, U+36a2, U+36ab, U+38a8, U+3dab, U+3de7, U+3deb, U+3e1a, U+3f1b, U+3f6d, U+4495, U+4723, U+48fa, U+4ca3, U+4e02, U+4e04-4e06, U+4e0c, U+4e0f, U+4e15, U+4e17, U+4e1f-4e21, U+4e26, U+4e29, U+4e2c, U+4e2f, U+4e31, U+4e35, U+4e37, U+4e3c, U+4e3f-4e42, U+4e44, U+4e46-4e47, U+4e57, U+4e5a-4e5c, U+4e64-4e65, U+4e67, U+4e69, U+4e6d, U+4e78, U+4e7f-4e82, U+4e85, U+4e87, U+4e8a, U+4e8d, U+4e93, U+4e96, U+4e98-4e99, U+4e9c, U+4e9e-4ea0, U+4ea2-4ea3, U+4ea5, U+4eb0-4eb1, U+4eb3-4eb6; } /* [86] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.86.woff2) format('woff2'); unicode-range: U+279c, U+279f-27a2, U+27a4-27a5, U+27a8, U+27b0, U+27b2-27b3, U+27b9, U+27e8-27e9, U+27f6, U+2800, U+28ec, U+2913, U+2921-2922, U+2934-2935, U+2a2f, U+2b05-2b07, U+2b50, U+2b55, U+2bc5-2bc6, U+2e1c-2e1d, U+2ebb, U+2f00, U+2f08, U+2f24, U+2f2d, U+2f2f-2f30, U+2f3c, U+2f45, U+2f63-2f64, U+2f74, U+2f83, U+2f8f, U+2fbc, U+3003, U+3005-3007, U+3012-3013, U+301c-301e, U+3021, U+3023-3024, U+3030, U+3034-3035, U+3041, U+3043, U+3045, U+3047, U+3049, U+3056, U+3058, U+305c, U+305e, U+3062, U+306c, U+3074, U+3077, U+307a, U+307c-307d, U+3080, U+308e, U+3090-3091, U+3099-309b, U+309d-309e, U+30a5, U+30bc, U+30be, U+30c2, U+30c5, U+30cc, U+30d8, U+30e2, U+30e8, U+30ee, U+30f0-30f2, U+30f4-30f6, U+30fd-30fe, U+3105-3126; } /* [87] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.87.woff2) format('woff2'); unicode-range: U+2650-2655, U+2658, U+265a-265b, U+265d-265e, U+2660-266d, U+266f, U+267b, U+2688, U+2693-2696, U+2698-2699, U+269c, U+26a0-26a1, U+26a4, U+26aa-26ab, U+26bd-26be, U+26c4-26c5, U+26d4, U+26e9, U+26f0-26f1, U+26f3, U+26f5, U+26fd, U+2702, U+2704-2706, U+2708-270f, U+2712-2718, U+271a-271b, U+271d, U+271f, U+2721, U+2724-2730, U+2732-2734, U+273a, U+273d-2744, U+2747-2749, U+274c, U+274e-274f, U+2753-2757, U+275b, U+275d-275e, U+2763, U+2765-2767, U+276e-276f, U+2776-277e, U+2780-2782, U+278a-278c, U+278e, U+2794-2796; } /* [88] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.88.woff2) format('woff2'); unicode-range: U+254b, U+2550-2551, U+2554, U+2557, U+255a-255b, U+255d, U+255f-2560, U+2562-2563, U+2565-2567, U+2569-256a, U+256c-2572, U+2579, U+2580-2595, U+25a1, U+25a3, U+25a9-25ad, U+25b0, U+25b3-25bb, U+25bd-25c2, U+25c4, U+25c8-25cb, U+25cd, U+25d0-25d1, U+25d4-25d5, U+25d8, U+25dc-25e6, U+25ea-25eb, U+25ef, U+25fe, U+2600-2604, U+2609, U+260e-260f, U+2611, U+2614-2615, U+2618, U+261a-2620, U+2622-2623, U+262a, U+262d-2630, U+2639-2640, U+2642, U+2648-264f; } /* [89] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.89.woff2) format('woff2'); unicode-range: U+23e9, U+23f0, U+23f3, U+2445, U+2449, U+2465-2471, U+2474-249b, U+24b8, U+24c2, U+24c7, U+24c9, U+24d0, U+24d2, U+24d4, U+24d8, U+24dd-24de, U+24e3, U+24e6, U+24e8, U+2500-2509, U+250b-2526, U+2528-2534, U+2536-2537, U+253b-2548, U+254a; } /* [90] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.90.woff2) format('woff2'); unicode-range: U+207b-2083, U+208c-208e, U+2092, U+20a6, U+20a8-20ad, U+20af, U+20b1, U+20b4-20b5, U+20b8-20ba, U+20bd, U+20db, U+20dd, U+20e0, U+20e3, U+2105, U+2109, U+2113, U+2116-2117, U+2120-2121, U+2126, U+212b, U+2133, U+2139, U+2194, U+2196-2199, U+21a0, U+21a9-21aa, U+21af, U+21b3, U+21b5, U+21ba-21bb, U+21c4, U+21ca, U+21cc, U+21d0-21d4, U+21e1, U+21e6-21e9, U+2200, U+2202, U+2205-2208, U+220f, U+2211-2212, U+2215, U+2217-2219, U+221d-2220, U+2223, U+2225, U+2227-222b, U+222e, U+2234-2237, U+223c-223d, U+2248, U+224c, U+2252, U+2256, U+2260-2261, U+2266-2267, U+226a-226b, U+226e-226f, U+2282-2283, U+2295, U+2297, U+2299, U+22a5, U+22b0-22b1, U+22b9, U+22bf, U+22c5-22c6, U+22ef, U+2304, U+2307, U+230b, U+2312-2314, U+2318, U+231a-231b, U+2323, U+239b, U+239d-239e, U+23a0; } /* [91] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.91.woff2) format('woff2'); unicode-range: U+1d34-1d35, U+1d38-1d3a, U+1d3c, U+1d3f-1d40, U+1d49, U+1d4e-1d4f, U+1d52, U+1d55, U+1d5b, U+1d5e, U+1d9c, U+1da0, U+1dc4-1dc5, U+1e69, U+1e73, U+1ea0-1ea9, U+1eab-1ead, U+1eaf, U+1eb1, U+1eb3, U+1eb5, U+1eb7, U+1eb9, U+1ebb, U+1ebd-1ebe, U+1ec0-1ec3, U+1ec5-1ec6, U+1ec9-1ecd, U+1ecf-1ed3, U+1ed5, U+1ed7-1edf, U+1ee1, U+1ee3, U+1ee5-1eeb, U+1eed, U+1eef-1ef1, U+1ef3, U+1ef7, U+1ef9, U+1f62, U+1f7b, U+2001-2002, U+2004-2006, U+2009-200a, U+200c-2012, U+2015-2016, U+201a, U+201e-2021, U+2023, U+2025, U+2027-2028, U+202a-202d, U+202f-2030, U+2032-2033, U+2035, U+2038, U+203c, U+203e-203f, U+2043-2044, U+2049, U+204d-204e, U+2060-2061, U+2070, U+2074-2078, U+207a; } /* [97] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.97.woff2) format('woff2'); unicode-range: U+2ae-2b3, U+2b5-2bf, U+2c2-2c3, U+2c6-2d1, U+2d8-2da, U+2dc, U+2e1-2e3, U+2e5, U+2eb, U+2ee-2f0, U+2f2-2f7, U+2f9-2ff, U+302-30d, U+311, U+31b, U+321-325, U+327-329, U+32b-32c, U+32e-32f, U+331-339, U+33c-33d, U+33f, U+348, U+352, U+35c, U+35e-35f, U+361, U+363, U+368, U+36c, U+36f, U+530-540, U+55d-55e, U+561, U+563, U+565, U+56b, U+56e-579; } /* [98] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.98.woff2) format('woff2'); unicode-range: U+176-17f, U+192, U+194, U+19a-19b, U+19d, U+1a0-1a1, U+1a3-1a4, U+1aa, U+1ac-1ad, U+1af-1bf, U+1d2, U+1d4, U+1d6, U+1d8, U+1da, U+1dc, U+1e3, U+1e7, U+1e9, U+1ee, U+1f0-1f1, U+1f3, U+1f5-1ff, U+219-21b, U+221, U+223-226, U+228, U+22b, U+22f, U+231, U+234-237, U+23a-23b, U+23d, U+250-252, U+254-255, U+259-25e, U+261-263, U+265, U+268, U+26a-26b, U+26f-277, U+279, U+27b-280, U+282-283, U+285, U+28a, U+28c, U+28f, U+292, U+294-296, U+298-29a, U+29c, U+29f, U+2a1-2a4, U+2a6-2a7, U+2a9, U+2ab; } /* [99] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.99.woff2) format('woff2'); unicode-range: U+a1-a4, U+a6-a8, U+aa, U+ac, U+af, U+b1, U+b3-b6, U+b8-ba, U+bc-d6, U+d8-de, U+e6, U+eb, U+ee-f0, U+f5, U+f7-f8, U+fb, U+fd-100, U+102, U+104-107, U+10d, U+10f-112, U+115, U+117, U+119, U+11b, U+11e-11f, U+121, U+123, U+125-127, U+129-12a, U+12d, U+12f-13f, U+141-142, U+144, U+146, U+14b-14c, U+14f-153, U+158-15b, U+15e-160, U+163-165, U+168-16a, U+16d-175; } /* [100] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.100.woff2) format('woff2'); unicode-range: U+221a, U+2264, U+2464, U+25a0, U+3008, U+4e10, U+512a, U+5152, U+5201, U+5241, U+5352, U+549a, U+54b2, U+54c6, U+54d7, U+54e1, U+5509, U+55c5, U+560e, U+5618, U+565c, U+56bc, U+5716, U+576f, U+5784, U+57a2, U+589f, U+5a20, U+5a25, U+5a29, U+5a34, U+5a7f, U+5ac9, U+5ad6, U+5b09, U+5b5c, U+5bc7, U+5c27, U+5d2d, U+5dcd, U+5f1b, U+5f37, U+604d, U+6055, U+6073, U+60eb, U+61ff, U+620c, U+62c7, U+62ed, U+6320, U+6345, U+6390, U+63b0, U+64ae, U+64c2, U+64d2, U+6556, U+663c, U+667e, U+66d9, U+66f8, U+6756, U+6789, U+689d, U+68f1, U+695e, U+6975, U+6a1f, U+6b0a, U+6b61, U+6b87, U+6c5d, U+6c7e, U+6c92, U+6d31, U+6df9, U+6e0d, U+6e2d, U+6f3e, U+70b3, U+70bd, U+70ca, U+70e8, U+725f, U+72e9, U+733f, U+7396, U+739f, U+7459-745a, U+74a7, U+75a1, U+75f0, U+76cf, U+76d4, U+7729, U+77aa, U+77b0, U+77e3, U+780c, U+78d5, U+7941, U+7977, U+797a, U+79c3, U+7a20, U+7a92, U+7b71, U+7bf1, U+7c9f, U+7eb6, U+7eca, U+7ef7, U+7f07, U+7f09, U+7f15, U+7f81, U+7fb9, U+8038, U+8098, U+80b4, U+8110, U+814b-814c, U+816e, U+818a, U+8205, U+8235, U+828b, U+82a5, U+82b7, U+82d4, U+82db, U+82df, U+8317, U+8338, U+8385-8386, U+83c1, U+83cf, U+8537, U+853b, U+854a, U+8715, U+8783, U+892a, U+8a71, U+8aaa, U+8d58, U+8dbe, U+8f67, U+8fab, U+8fc4, U+8fe6, U+9023, U+9084, U+9091, U+916a, U+91c9, U+91dc, U+94b3, U+9502, U+9523, U+9551, U+956f, U+960e, U+962a, U+962e, U+9647, U+96f3, U+9739, U+97a0, U+97ed, U+983b, U+985e, U+988a, U+9a6f, U+9a8b, U+9ab7, U+9ac5, U+9e25, U+e608, U+ff06, U+ff14-ff16; } /* [101] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.101.woff2) format('woff2'); unicode-range: U+161, U+926, U+928, U+939, U+93f-940, U+94d, U+e17, U+e22, U+e44, U+2463, U+25c7, U+25ce, U+2764, U+3009, U+3016-3017, U+4e4d, U+4e53, U+4f5a, U+4f70, U+4fae, U+4fd8, U+4ffa, U+5011, U+501a, U+516e, U+51c4, U+5225, U+5364, U+547b, U+5495, U+54e8, U+54ee, U+5594, U+55d3, U+55dc, U+55fd, U+5662, U+5669, U+566c, U+5742, U+5824, U+5834, U+598a, U+5992, U+59a9, U+5a04, U+5b75, U+5b7d, U+5bc5, U+5c49, U+5c90, U+5e1c, U+5e27, U+5e2b, U+5e37, U+5e90, U+618b, U+61f5, U+620a, U+6273, U+62f7, U+6342, U+6401-6402, U+6413, U+6512, U+655b, U+65a7, U+65f1, U+65f7, U+665f, U+6687, U+66a7, U+673d, U+67b8, U+6854, U+68d8, U+68fa, U+696d, U+6a02, U+6a0a, U+6a80, U+6b7c, U+6bd9, U+6c2e, U+6c76, U+6cf8, U+6d4a, U+6d85, U+6e24, U+6e32, U+6ec7, U+6ed5, U+6f88, U+700f, U+701a, U+7078, U+707c, U+70ac, U+70c1, U+7409, U+7422, U+7480, U+74a8, U+752b, U+7574, U+7656, U+7699, U+7737, U+785d, U+78be, U+79b9, U+7a3d, U+7a91, U+7a9f, U+7ae3, U+7b77, U+7c3f, U+7d1a, U+7d50, U+7d93, U+803f, U+8042, U+808b, U+8236, U+82b8-82b9, U+82ef, U+8309, U+836b, U+83ef, U+8431, U+85c9, U+865e, U+868c, U+8759, U+8760, U+8845, U+89ba, U+8a2a, U+8c41, U+8cec, U+8d2c, U+8d4e, U+8e66, U+8e6d, U+8eaf, U+902e, U+914b, U+916e, U+919b, U+949b, U+94a0, U+94b0, U+9541-9542, U+9556, U+95eb, U+95f5, U+964b, U+968b, U+96cc-96cd, U+96cf, U+9704, U+9713, U+9890, U+98a8, U+9985, U+9992, U+9a6d, U+9a81, U+9a86, U+9ab8, U+9ca4, U+9f9a, U+e606-e607, U+e60a, U+e60c, U+e60e, U+fe0f, U+ff02, U+ff1e, U+ff3d; } /* [102] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.102.woff2) format('woff2'); unicode-range: U+10c, U+627-629, U+639, U+644, U+64a, U+203b, U+2265, U+2573, U+25b2, U+3448-3449, U+4e1e, U+4e5e, U+4f3a, U+4f5f, U+4fea, U+5026, U+508d, U+5189, U+5254, U+5288, U+52d8, U+52fa, U+5306, U+5308, U+5384, U+53ed, U+543c, U+5450, U+5455, U+5466, U+54c4, U+5578, U+55a7, U+561f, U+5631, U+572d, U+575f, U+57ae, U+57e0, U+5830, U+594e, U+5984, U+5993, U+5bdd, U+5c0d, U+5c7f, U+5c82, U+5e62, U+5ed3, U+5f08, U+607a, U+60bc, U+60df, U+625b, U+6292, U+62e2, U+6363, U+6467, U+6714, U+675e, U+6771, U+67a2, U+67ff, U+6805, U+6813, U+6869, U+68a7, U+68e0, U+6930, U+6986, U+69a8, U+69df, U+6a44, U+6a5f, U+6c13, U+6c1f, U+6c22, U+6c2f, U+6c40, U+6c81, U+6c9b, U+6ca5, U+6da4, U+6df3, U+6e85, U+6eba, U+6f13, U+6f33, U+6f62, U+715e, U+72c4, U+73d1, U+73fe, U+7405, U+7455, U+7487, U+7578, U+75a4, U+75eb, U+7693, U+7738, U+7741, U+776b, U+7792, U+77a7, U+77a9, U+77b3, U+788c, U+7984, U+79a7, U+79e4, U+7a1a, U+7a57, U+7aa6, U+7b0b, U+7b5d, U+7c27, U+7c7d, U+7caa, U+7cd9, U+7cef, U+7eda, U+7ede, U+7f24, U+8046, U+80fa, U+81b3, U+81fb, U+8207, U+8258, U+8335, U+8339, U+8354, U+840e, U+85b0, U+85fb, U+8695, U+86aa, U+8717, U+8749, U+874c, U+8996, U+89bd, U+89c5, U+8bdb, U+8bf5, U+8c5a, U+8d3f, U+8d9f, U+8e44, U+8fed, U+9005, U+9019, U+904e, U+9082, U+90af, U+90dd, U+90e1, U+90f8, U+9119, U+916f, U+9176, U+949e, U+94a7, U+94c2, U+9525, U+9580, U+95dc, U+96e2, U+96fb, U+9a7c, U+9a7f, U+9b41, U+9ca8, U+9cc4, U+9cde, U+9e92, U+9ede, U+e60b, U+e610, U+ff10, U+ff13, U+ff3b, U+f012b; } /* [103] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.103.woff2) format('woff2'); unicode-range: U+60, U+631, U+2606, U+3014-3015, U+309c, U+33a1, U+4e52, U+4ec6, U+4f86, U+4f8d, U+4fde, U+4fef, U+500b, U+502a, U+515c, U+518a, U+51a5, U+51f3, U+5243, U+52c9, U+52d5, U+53a2, U+53ee, U+54ce, U+54fa, U+54fc, U+5580, U+5587, U+563f, U+56da, U+5792, U+5815, U+5960, U+59d7, U+5a1f, U+5b78, U+5b9b, U+5be1, U+5c4e, U+5c51, U+5c6f, U+5c9a, U+5cfb, U+5d16, U+5ed6, U+5f27, U+5f6a, U+5f6c, U+603c, U+609a, U+6168, U+61c8, U+6236, U+62d0, U+62f1, U+62fd, U+631a, U+6328, U+632b, U+6346, U+638f, U+63a0, U+63c9, U+655e, U+6590, U+6615, U+6627, U+66ae, U+66e6, U+66f0, U+6703, U+67da, U+67ec, U+6816, U+6893, U+68ad, U+68f5, U+6977, U+6984, U+69db, U+6b72, U+6bb7, U+6ce3, U+6cfb, U+6d47, U+6da1, U+6dc4, U+6e43, U+6eaf, U+6eff, U+6f8e, U+7011, U+7063, U+7076, U+7096, U+70ba, U+70db, U+70ef, U+7119-711a, U+7172, U+718f, U+7194, U+727a, U+72d9, U+72ed, U+7325, U+73ae, U+73ba, U+73c0, U+7410, U+7426, U+7554, U+7576, U+75ae, U+75b9, U+762b, U+766b, U+7682, U+7750, U+7779, U+7784, U+77eb, U+77ee, U+78f7, U+79e9, U+7a79, U+7b1b, U+7b28, U+7bf7, U+7db2, U+7ec5, U+7eee, U+7f14, U+7f1a, U+7fe1, U+8087, U+809b, U+8231, U+830e, U+835f, U+83e9, U+849c, U+851a, U+868a, U+8718, U+874e, U+8822, U+8910, U+8944, U+8a3b, U+8bb6, U+8bbc, U+8d50, U+8e72, U+8f9c, U+900d, U+904b, U+9063, U+90a2, U+90b9, U+94f2, U+952f, U+9576-9577, U+9593, U+95f8, U+961c, U+9631, U+969b, U+96a7, U+96c1, U+9716, U+9761, U+97ad, U+97e7, U+98a4, U+997a, U+9a73, U+9b44, U+9e3d, U+9ecf, U+9ed4, U+ff11-ff12, U+fffd; } /* [104] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.104.woff2) format('woff2'); unicode-range: U+2003, U+2193, U+2462, U+4e19, U+4e2b, U+4e36, U+4ea8, U+4ed1, U+4ed7, U+4f51, U+4f63, U+4f83, U+50e7, U+5112, U+5167, U+51a4, U+51b6, U+5239, U+5265, U+532a, U+5351, U+537f, U+5401, U+548f, U+5492, U+54af, U+54b3, U+54bd, U+54d1, U+54df, U+554f, U+5564, U+5598, U+5632, U+56a3, U+56e7, U+574e, U+575d-575e, U+57d4, U+584c, U+58e4, U+5937, U+5955, U+5a05, U+5a49, U+5ac2, U+5bb0, U+5c39, U+5c61, U+5d0e, U+5de9, U+5e9a, U+5eb8, U+5f0a, U+5f13, U+5f8c, U+608d, U+611b, U+6127, U+62a0, U+634f, U+635e, U+63fd, U+6577, U+658b, U+65bc, U+660a, U+6643, U+6656, U+6760, U+67af, U+67c4, U+67e0, U+6817, U+68cd, U+690e, U+6960, U+69b4, U+6a71, U+6aac, U+6b67, U+6bb4, U+6c55, U+6c70, U+6c82, U+6ca6, U+6cb8, U+6cbe, U+6e9c, U+6ede, U+6ee5, U+6f4d, U+6f84, U+6f9c, U+7115, U+7121, U+722a, U+7261, U+7272, U+7280, U+72f8, U+7504, U+754f, U+75d8, U+767c, U+76ef, U+778e, U+77bb, U+77f6, U+786b, U+78b1, U+7948, U+7985, U+79be, U+7a83, U+7a8d, U+7eac, U+7eef, U+7ef8, U+7efd, U+7f00, U+803d, U+8086, U+810a, U+8165, U+819d, U+81a8, U+8214, U+829c, U+831c, U+8328, U+832b, U+8367, U+83e0, U+83f1, U+8403, U+846b, U+8475, U+84b2, U+8513, U+8574, U+85af, U+86d9, U+86db, U+8acb, U+8bbd, U+8be0-8be1, U+8c0e, U+8d29, U+8d63, U+8e81, U+8f7f, U+9032, U+9042, U+90b1, U+90b5, U+9165, U+9175, U+94a6, U+94c5, U+950c, U+9540, U+9610, U+9699, U+96c7, U+973e, U+978d, U+97ec, U+97f6, U+984c, U+987d, U+9882, U+9965, U+996a, U+9972, U+9a8f, U+9ad3, U+9ae6, U+9cb8, U+9edb, U+e600, U+e60f, U+e611, U+ff05, U+ff0b; } /* [105] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.105.woff2) format('woff2'); unicode-range: U+5e, U+2190, U+250a, U+25bc, U+25cf, U+300f, U+4e56, U+4ea9, U+4f3d, U+4f6c, U+4f88, U+4fa8, U+4fcf, U+5029, U+5188, U+51f9, U+5203, U+524a, U+5256, U+529d, U+5375, U+53db, U+541f, U+5435, U+5457, U+548b, U+54b1, U+54c7, U+54d4, U+54e9, U+556a, U+5589, U+55bb, U+55e8, U+55ef, U+563b, U+566a, U+576a, U+58f9, U+598d, U+599e, U+59a8, U+5a9b, U+5ae3, U+5bde, U+5c4c, U+5c60, U+5d1b, U+5deb, U+5df7, U+5e18, U+5f26, U+5f64, U+601c, U+6084, U+60e9, U+614c, U+61be, U+6208, U+621a, U+6233, U+6254, U+62d8, U+62e6, U+62ef, U+6323, U+632a, U+633d, U+6361, U+6380, U+6405, U+640f, U+6614, U+6642, U+6657, U+67a3, U+6808, U+683d, U+6850, U+6897, U+68b3, U+68b5, U+68d5, U+6a58, U+6b47, U+6b6a, U+6c28, U+6c90, U+6ca7, U+6cf5, U+6d51, U+6da9, U+6dc7, U+6dd1, U+6e0a, U+6e5b, U+6f47, U+6f6d, U+70ad, U+70f9, U+710a, U+7130, U+71ac, U+745f, U+7476, U+7490, U+7529, U+7538, U+75d2, U+7696, U+76b1, U+76fc, U+777f, U+77dc, U+789f, U+795b, U+79bd, U+79c9, U+7a3b, U+7a46, U+7aa5, U+7ad6, U+7ca5, U+7cb9, U+7cdf, U+7d6e, U+7f06, U+7f38, U+7fa1, U+7fc1, U+8015, U+803b, U+80a2, U+80aa, U+8116, U+813e, U+82ad, U+82bd, U+8305, U+8346, U+846c, U+8549, U+859b, U+8611, U+8680, U+87f9, U+884d, U+8877, U+888d, U+88d4, U+898b, U+8a79, U+8a93, U+8c05, U+8c0d, U+8c26, U+8d1e, U+8d31, U+8d81, U+8e22, U+8f90, U+8f96, U+90ca, U+916c, U+917f, U+9187, U+918b, U+9499, U+94a9, U+9524, U+958b, U+9600, U+9640, U+96b6, U+96ef, U+98d9, U+9976, U+997f, U+9a74, U+9a84, U+9c8d, U+9e26, U+9e9f, U+ad6d, U+c5b4, U+d55c, U+ff0f; } /* [106] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.106.woff2) format('woff2'); unicode-range: U+b0, U+2191, U+2460-2461, U+25c6, U+300e, U+4e1b, U+4e7e, U+4ed5, U+4ef2, U+4f10, U+4f1e, U+4f50, U+4fa6, U+4faf, U+5021, U+50f5, U+5179, U+5180, U+51d1, U+522e, U+52a3, U+52c3, U+52cb, U+5300, U+5319, U+5320, U+5349, U+5395, U+53d9, U+541e, U+5428, U+543e, U+54c0, U+54d2, U+570b, U+5858, U+58f6, U+5974, U+59a5, U+59e8, U+59ec, U+5a36, U+5a9a, U+5ab3, U+5b99, U+5baa, U+5ce1, U+5d14, U+5d4c, U+5dc5, U+5de2, U+5e99, U+5e9e, U+5f18, U+5f66, U+5f70, U+6070, U+60d5, U+60e7, U+6101, U+611a, U+6241, U+6252, U+626f, U+6296, U+62bc, U+62cc, U+63a9, U+644a, U+6454, U+64a9, U+64b8, U+6500, U+6572, U+65a5, U+65a9, U+65ec, U+660f, U+6749, U+6795, U+67ab, U+68da, U+6912, U+6bbf, U+6bef, U+6cab, U+6cca, U+6ccc, U+6cfc, U+6d3d, U+6d78, U+6dee, U+6e17, U+6e34, U+6e83, U+6ea2, U+6eb6, U+6f20, U+6fa1, U+707f, U+70d8, U+70eb, U+714c, U+714e, U+7235, U+7239, U+73ca, U+743c, U+745c, U+7624, U+763e, U+76f2, U+77db, U+77e9, U+780d, U+7838, U+7845, U+78ca, U+796d, U+7a84, U+7aed, U+7b3c, U+7eb2, U+7f05, U+7f20, U+7f34, U+7f62, U+7fc5, U+7fd8, U+7ff0, U+800d, U+8036, U+80ba, U+80be, U+80c0-80c1, U+8155, U+817a, U+8180, U+81e3, U+8206, U+8247, U+8270, U+8299, U+8304, U+8393, U+83b9, U+83ca, U+840d, U+8427, U+8469, U+8471, U+84c4, U+84ec, U+853d, U+8681-8682, U+8721, U+8854, U+88d5, U+88f9, U+8bc0, U+8c0a, U+8c29, U+8c2d, U+8d41, U+8dea, U+8eb2, U+8f9f, U+903b, U+903e, U+9102, U+9493, U+94a5, U+94f8, U+95ef, U+95f7, U+9706, U+9709, U+9774, U+9887, U+98a0, U+9e64, U+9f9f, U+e601, U+e603; } /* [107] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.107.woff2) format('woff2'); unicode-range: U+200b, U+2103, U+4e18, U+4e27-4e28, U+4e38, U+4e59, U+4e8f, U+4ead, U+4ec7, U+4fe9, U+503a, U+5085, U+5146, U+51af, U+51f8, U+52ab, U+5339, U+535c, U+5378, U+538c, U+5398, U+53f9, U+5415, U+5475, U+54aa, U+54ac, U+54b8, U+5582, U+5760, U+5764, U+57cb, U+5835, U+5885, U+5951, U+5983, U+59da, U+5a77, U+5b5d, U+5b5f, U+5bb5, U+5bc2, U+5be8, U+5bfa, U+5c2c, U+5c34, U+5c41, U+5c48, U+5c65, U+5cad, U+5e06, U+5e42, U+5ef7, U+5f17, U+5f25, U+5f6d, U+5f79, U+6028, U+6064, U+6068, U+606d, U+607c, U+6094, U+6109, U+6124, U+6247, U+626d, U+6291, U+629a, U+62ac, U+62b9, U+62fe, U+6324, U+6349, U+6367, U+6398, U+6495, U+64a4, U+64b0, U+64bc, U+64ce, U+658c, U+65ed, U+6602, U+6674, U+6691, U+66a8, U+674f, U+679a, U+67ef, U+67f4, U+680b, U+6876, U+68a8, U+6a59, U+6a61, U+6b20, U+6bc5, U+6d12, U+6d46, U+6d8c, U+6dc0, U+6e14, U+6e23, U+6f06, U+7164, U+716e, U+7199, U+71e5, U+72ac, U+742a, U+755c, U+75ab, U+75b2, U+75f4, U+7897, U+78b3, U+78c5, U+7978, U+79fd, U+7a74, U+7b4b, U+7b5b, U+7ece, U+7ed2, U+7ee3, U+7ef3, U+7f50, U+7f55, U+7f9e, U+7fe0, U+809d, U+8106, U+814a, U+8154, U+817b, U+818f, U+81c2, U+81ed, U+821f, U+82a6, U+82d1, U+8302, U+83c7, U+845b, U+848b, U+84c9, U+85e4, U+86ee, U+8700, U+8774, U+886c, U+8881, U+8c1c, U+8c79, U+8d2a, U+8d3c, U+8eba, U+8f70, U+8fa9, U+8fb1, U+900a, U+9017, U+901d, U+9022, U+906e, U+946b, U+94dd, U+94ed, U+953b, U+95fa, U+95fd, U+964c, U+96c0, U+971c, U+971e, U+9753, U+9756, U+97e6, U+9881, U+9b4f, U+9e2d, U+9f0e, U+e602, U+e604-e605, U+ff5c; } /* [108] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.108.woff2) format('woff2'); unicode-range: U+24, U+4e08, U+4e43, U+4e4f, U+4ef0, U+4f2a, U+507f, U+50ac, U+50bb, U+5151, U+51bb, U+51f6, U+51fd, U+5272, U+52fe, U+5362, U+53c9, U+53d4, U+53e0, U+543b, U+54f2, U+5507, U+5524, U+558a, U+55b5, U+561b, U+56ca, U+5782, U+57c3, U+5893, U+5915, U+5949, U+5962, U+59ae, U+59dc, U+59fb, U+5bd3, U+5c38, U+5cb3, U+5d07, U+5d29, U+5de1, U+5dfe, U+5e15, U+5eca, U+5f2f, U+5f7c, U+5fcc, U+6021, U+609f, U+60f9, U+6108, U+6148, U+6155, U+6170, U+61d2, U+6251, U+629b, U+62ab, U+62e8, U+62f3, U+6321, U+6350, U+6566, U+659c, U+65e8, U+6635, U+6655, U+6670, U+66f9, U+6734, U+679d, U+6851, U+6905, U+6b49, U+6b96, U+6c1b, U+6c41, U+6c6a, U+6c83, U+6cf3, U+6d9b, U+6dcb, U+6e1d, U+6e20-6e21, U+6eaa, U+6ee4, U+6ee9, U+6f58, U+70e4, U+722c, U+7262, U+7267, U+72b9, U+72e0, U+72ee, U+72f1, U+7334, U+73ab, U+7433, U+7470, U+758f, U+75d5, U+764c, U+7686, U+76c6, U+76fe, U+7720, U+77e2, U+7802, U+7816, U+788d, U+7891, U+7a00, U+7a9d, U+7b52, U+7bad, U+7c98, U+7cca, U+7eba, U+7eea, U+7ef5, U+7f1d, U+7f69, U+806a, U+809a, U+80bf, U+80c3, U+81c0, U+820c, U+82ac, U+82af, U+82cd, U+82d7, U+838e, U+839e, U+8404, U+84b8, U+852c, U+8587, U+85aa, U+8650, U+8679, U+86c7, U+8702, U+87ba, U+886b, U+8870, U+8c10, U+8c23, U+8c6b, U+8d3e, U+8d4b-8d4c, U+8d64, U+8d6b, U+8d74, U+8e29, U+8f69, U+8f74, U+8fb0, U+8fdf, U+901b, U+9038, U+9093, U+90aa, U+9171, U+9489, U+94ae, U+94c3, U+9508, U+9510, U+9601, U+9614, U+9675, U+97f5, U+9888, U+98d8, U+9971, U+9aa4, U+9e3f, U+9e45, U+9e4f, U+9e70, U+9f7f, U+e715; } /* [109] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.109.woff2) format('woff2'); unicode-range: U+a5, U+2022, U+2192, U+2605, U+4e11, U+4e22, U+4e32, U+4f0d, U+4f0f, U+4f69, U+4ff1, U+50b2, U+5154, U+51dd, U+51f0, U+5211, U+5269, U+533f, U+5366-5367, U+5389, U+5413, U+5440, U+5446, U+5561, U+574a, U+5751, U+57ab, U+5806, U+5821, U+582a, U+58f3, U+5938, U+5948, U+5978, U+59d1, U+5a03, U+5a07, U+5ac1, U+5acc, U+5ae9, U+5bb4, U+5bc4, U+5c3f, U+5e3d, U+5e7d, U+5f92, U+5faa, U+5fe0, U+5ffd, U+6016, U+60a0, U+60dc, U+60e8, U+614e, U+6212, U+6284, U+62c6, U+62d3-62d4, U+63f4, U+642c, U+6478, U+6491-6492, U+64e6, U+6591, U+65a4, U+664b, U+6735, U+6746, U+67f1, U+67f3, U+6842, U+68af, U+68c9, U+68cb, U+6a31, U+6b3a, U+6bc1, U+6c0f, U+6c27, U+6c57, U+6cc4, U+6ce5, U+6d2a, U+6d66, U+6d69, U+6daf, U+6e58, U+6ecb, U+6ef4, U+707e, U+7092, U+70ab, U+71d5, U+7275, U+7384, U+73b2, U+7434, U+74e6, U+74f7, U+75bc, U+76c8, U+76d0, U+7709, U+77ac, U+7855, U+78a7, U+78c1, U+7a77, U+7b79, U+7c92, U+7cae, U+7cd5, U+7ea4, U+7eb5, U+7ebd, U+7f5a, U+7fd4, U+7ffc, U+8083, U+8096, U+80a0, U+80d6, U+80de, U+8102, U+8109, U+810f, U+8179, U+8292, U+82b3, U+8352, U+8361, U+83cc, U+841d, U+8461, U+8482, U+8521, U+857e, U+866b, U+8776, U+8896, U+889c, U+88f8, U+8a9e, U+8bc8, U+8bf8, U+8c0b, U+8c28, U+8d2b, U+8d2f, U+8d37, U+8d3a, U+8d54, U+8dc3, U+8dcc, U+8df5, U+8e0f, U+8e48, U+8f86, U+8f88, U+8f9e, U+8fc1, U+8fc8, U+8feb, U+9065, U+90a6, U+90bb, U+90c1, U+94dc, U+9521, U+9676, U+96d5, U+970d, U+9897, U+997c, U+9a70, U+9a76, U+9a9a, U+9ad4, U+9e23, U+9e7f, U+9f3b, U+e675, U+e6b9, U+ffe5; } /* [110] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.110.woff2) format('woff2'); unicode-range: U+300c-300d, U+4e54, U+4e58, U+4e95, U+4ec1, U+4f2f, U+4f38, U+4fa3, U+4fca, U+503e, U+5141, U+5144, U+517c, U+51cc, U+51ed, U+5242, U+52b2, U+52d2, U+52e4, U+540a, U+5439, U+5448, U+5496, U+54ed, U+5565, U+5761, U+5766, U+58ee, U+593a, U+594b, U+594f, U+5954, U+5996, U+59c6, U+59ff, U+5b64, U+5bff, U+5c18, U+5c1d, U+5c97, U+5ca9, U+5cb8, U+5e9f, U+5ec9, U+5f04, U+5f7b, U+5fa1, U+5fcd, U+6012, U+60a6, U+60ac, U+60b2, U+60ef, U+626e, U+6270, U+6276, U+62d6, U+62dc, U+6316, U+632f, U+633a, U+6355, U+63aa, U+6447, U+649e, U+64c5, U+654c, U+65c1, U+65cb, U+65e6, U+6606, U+6731, U+675c, U+67cf, U+67dc, U+6846, U+6b8b, U+6beb, U+6c61, U+6c88, U+6cbf, U+6cdb, U+6cea, U+6d45, U+6d53, U+6d74, U+6d82, U+6da8, U+6db5, U+6deb, U+6eda, U+6ee8, U+6f0f, U+706d, U+708e, U+70ae, U+70bc, U+70c2, U+70e6, U+7237-7238, U+72fc, U+730e, U+731b, U+739b, U+73bb, U+7483, U+74dc, U+74f6, U+7586, U+7626, U+775b, U+77ff, U+788e, U+78b0, U+7956, U+7965, U+79e6, U+7af9, U+7bee, U+7c97, U+7eb1, U+7eb7, U+7ed1, U+7ed5, U+7f6a, U+7f72, U+7fbd, U+8017, U+808c, U+80a9, U+80c6, U+80ce, U+8150, U+8170, U+819c, U+820d, U+8230, U+8239, U+827e, U+8377, U+8389, U+83b2, U+8428, U+8463, U+867e, U+88c2, U+88d9, U+8986, U+8bca, U+8bde, U+8c13, U+8c8c, U+8d21, U+8d24, U+8d56, U+8d60, U+8d8b, U+8db4, U+8e2a, U+8f68, U+8f89, U+8f9b, U+8fa8, U+8fbd, U+9003, U+90ce, U+90ed, U+9189, U+94bb, U+9505, U+95f9, U+963b, U+9655, U+966a, U+9677, U+96fe, U+9896, U+99a8, U+9a71, U+9a82, U+9a91, U+9b45, U+9ece, U+9f20, U+feff, U+ff0d; } /* [111] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.111.woff2) format('woff2'); unicode-range: U+4e4c, U+4e88, U+4ea1, U+4ea6, U+4ed3-4ed4, U+4eff, U+4f30, U+4fa7, U+4fc4, U+4fd7, U+500d, U+504f, U+5076-5077, U+517d, U+5192, U+51c9, U+51ef, U+5238, U+5251, U+526a, U+52c7, U+52df, U+52ff, U+53a6, U+53a8, U+53ec, U+5410, U+559d, U+55b7, U+5634, U+573e, U+5783, U+585e, U+586b, U+58a8, U+5999, U+59d3, U+5a1c, U+5a46, U+5b54-5b55, U+5b85, U+5b8b, U+5b8f, U+5bbf, U+5bd2, U+5c16, U+5c24, U+5e05, U+5e45, U+5e7c, U+5e84, U+5f03, U+5f1f, U+5f31, U+5f84, U+5f90, U+5fbd, U+5fc6, U+5fd9, U+5fe7, U+6052, U+6062, U+6089, U+60a3, U+60d1, U+6167, U+622a, U+6234, U+624e, U+6269, U+626c, U+62b5, U+62d2, U+6325, U+63e1, U+643a, U+6446, U+6562, U+656c, U+65e2, U+65fa, U+660c, U+6628, U+6652, U+6668, U+6676, U+66fc, U+66ff, U+6717, U+676d, U+67aa, U+67d4, U+6843, U+6881, U+68d2, U+695a, U+69fd, U+6a2a, U+6b8a, U+6c60, U+6c64, U+6c9f, U+6caa, U+6cc9, U+6ce1, U+6cfd, U+6d1b, U+6d1e, U+6d6e, U+6de1, U+6e10, U+6e7f, U+6f5c, U+704c, U+7070, U+7089, U+70b8, U+718a, U+71c3, U+723d, U+732a, U+73cd, U+7518, U+756a, U+75af, U+75be, U+75c7, U+76d2, U+76d7, U+7763, U+78e8, U+795d, U+79df, U+7c4d, U+7d2f, U+7ee9, U+7f13, U+7f8a, U+8000, U+8010, U+80af, U+80f6, U+80f8, U+8212, U+8273, U+82f9, U+83ab, U+83b1, U+83f2, U+8584, U+871c, U+8861, U+888b, U+88c1, U+88e4, U+8bd1, U+8bf1, U+8c31, U+8d5a, U+8d75-8d76, U+8de8, U+8f85, U+8fa3, U+8fc5, U+9006, U+903c, U+904d, U+9075, U+9178, U+9274, U+950b, U+9526, U+95ea, U+9636, U+9686, U+978b, U+987f, U+9a7e, U+9b42, U+9e1f, U+9ea6, U+9f13, U+9f84, U+ff5e; } /* [112] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.112.woff2) format('woff2'); unicode-range: U+23, U+3d, U+4e01, U+4e39, U+4e73, U+4ecd, U+4ed9, U+4eea, U+4f0a, U+4f1f, U+4f5b, U+4fa0, U+4fc3, U+501f, U+50a8, U+515a, U+5175, U+51a0, U+51c0, U+51e1, U+51e4, U+5200, U+520a, U+5224, U+523a, U+52aa, U+52b1, U+52b3, U+5348, U+5353, U+5360, U+5371, U+5377, U+539a, U+541b, U+5434, U+547c, U+54e6, U+5510, U+5531, U+5609, U+56f0, U+56fa, U+5733, U+574f, U+5851, U+5854, U+5899, U+58c1, U+592e, U+5939, U+5976, U+5986, U+59bb, U+5a18, U+5a74, U+5b59, U+5b87, U+5b97, U+5ba0, U+5bab, U+5bbd-5bbe, U+5bf8, U+5c0a, U+5c3a, U+5c4a, U+5e16, U+5e1d, U+5e2d, U+5e8a, U+6015, U+602a, U+6050, U+6069, U+6162, U+61c2, U+6293, U+6297, U+62b1, U+62bd, U+62df, U+62fc, U+6302, U+635f, U+638c, U+63ed, U+6458, U+6469, U+6563, U+6620, U+6653, U+6696-6697, U+66dd, U+675f, U+676f-6770, U+67d0, U+67d3, U+684c, U+6865, U+6885, U+68b0, U+68ee, U+690d, U+6b23, U+6b32, U+6bd5, U+6c89, U+6d01, U+6d25, U+6d89, U+6da6, U+6db2, U+6df7, U+6ed1, U+6f02, U+70c8, U+70df, U+70e7, U+7126, U+7236, U+7259, U+731c, U+745e, U+74e3, U+751a, U+751c, U+7532, U+7545, U+75db, U+7761, U+7a0d, U+7b51, U+7ca4, U+7cd6, U+7d2b, U+7ea0, U+7eb9, U+7ed8, U+7f18, U+7f29, U+8033, U+804a, U+80a4-80a5, U+80e1, U+817f, U+829d, U+82e6, U+8336, U+840c, U+8499, U+864e, U+8651, U+865a, U+88ad, U+89e6, U+8bd7, U+8bfa, U+8c37, U+8d25, U+8d38, U+8ddd, U+8fea, U+9010, U+9012, U+906d, U+907f-9080, U+90d1, U+9177, U+91ca, U+94fa, U+9501, U+9634-9635, U+9694, U+9707, U+9738, U+9769, U+9a7b, U+9a97, U+9aa8, U+9b3c, U+9c81, U+9ed8; } /* [113] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.113.woff2) format('woff2'); unicode-range: U+26, U+3c, U+d7, U+4e4e, U+4e61, U+4e71, U+4ebf, U+4ee4, U+4f26, U+5012, U+51ac, U+51b0, U+51b2, U+51b7, U+5218, U+521a, U+5220, U+5237, U+523b, U+526f, U+5385, U+53bf, U+53e5, U+53eb, U+53f3, U+53f6, U+5409, U+5438, U+54c8, U+54e5, U+552f, U+5584, U+5706, U+5723, U+5750, U+575a, U+5987-5988, U+59b9, U+59d0, U+59d4, U+5b88, U+5b9c, U+5bdf, U+5bfb, U+5c01, U+5c04, U+5c3e, U+5c4b, U+5c4f, U+5c9b, U+5cf0, U+5ddd, U+5de6, U+5de8, U+5e01, U+5e78, U+5e7b, U+5e9c, U+5ead, U+5ef6, U+5f39, U+5fd8, U+6000, U+6025, U+604b, U+6076, U+613f, U+6258, U+6263, U+6267, U+6298, U+62a2, U+62e5, U+62ec, U+6311, U+6377, U+6388-6389, U+63a2, U+63d2, U+641e, U+642d, U+654f, U+6551, U+6597, U+65cf, U+65d7, U+65e7, U+6682, U+66f2, U+671d, U+672b, U+6751, U+6768, U+6811, U+6863, U+6982, U+6bd2, U+6cf0, U+6d0b, U+6d17, U+6d59, U+6dd8, U+6dfb, U+6e7e, U+6f6e, U+6fb3, U+706f, U+719f, U+72af, U+72d0, U+72d7, U+732b, U+732e, U+7389, U+73e0, U+7530, U+7687, U+76d6, U+76db, U+7840, U+786c, U+79cb, U+79d2, U+7a0e, U+7a33, U+7a3f, U+7a97, U+7ade-7adf, U+7b26, U+7e41, U+7ec3, U+7f3a, U+8089, U+80dc, U+811a, U+8131, U+8138, U+821e, U+8349, U+83dc, U+8457, U+867d, U+86cb, U+8a89, U+8ba8, U+8bad, U+8bef, U+8bfe, U+8c6a, U+8d1d, U+8d4f, U+8d62, U+8dd1, U+8df3, U+8f6e, U+8ff9, U+900f, U+9014, U+9057, U+9192, U+91ce, U+9488, U+94a2, U+9547, U+955c, U+95f2, U+9644, U+964d, U+96c4-96c5, U+96e8, U+96f6-96f7, U+9732, U+9759, U+9760, U+987a, U+989c, U+9910, U+996d-996e, U+9b54, U+9e21, U+9ebb, U+9f50; } /* [114] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.114.woff2) format('woff2'); unicode-range: U+7e, U+2026, U+4e03, U+4e25, U+4e30, U+4e34, U+4e45, U+4e5d, U+4e89, U+4eae, U+4ed8, U+4f11, U+4f19, U+4f24, U+4f34, U+4f59, U+4f73, U+4f9d, U+4fb5, U+5047, U+505c, U+5170, U+519c, U+51cf, U+5267, U+5356, U+5374, U+5382, U+538b, U+53e6, U+5426, U+542b, U+542f, U+5462, U+5473, U+554a, U+5566, U+5708, U+571f, U+5757, U+57df, U+57f9, U+5802, U+590f, U+591c, U+591f, U+592b, U+5965, U+5979, U+5a01, U+5a5a, U+5b69, U+5b81, U+5ba1, U+5ba3, U+5c3c, U+5c42, U+5c81, U+5de7, U+5dee, U+5e0c, U+5e10, U+5e55, U+5e86, U+5e8f, U+5ea7, U+5f02, U+5f52, U+5f81, U+5ff5, U+60ca, U+60e0, U+6279, U+62c5, U+62ff, U+63cf, U+6444, U+64cd, U+653b, U+65bd, U+65e9, U+665a, U+66b4, U+66fe, U+6728, U+6740, U+6742, U+677e, U+67b6, U+680f, U+68a6, U+68c0, U+699c, U+6b4c, U+6b66, U+6b7b, U+6bcd, U+6bdb, U+6c38, U+6c47, U+6c49, U+6cb3, U+6cb9, U+6ce2, U+6d32, U+6d3e, U+6d4f, U+6e56, U+6fc0, U+7075, U+7206, U+725b, U+72c2, U+73ed, U+7565, U+7591, U+7597, U+75c5, U+76ae, U+76d1, U+76df, U+7834, U+7968, U+7981, U+79c0, U+7a7f, U+7a81, U+7ae5, U+7b14, U+7c89, U+7d27, U+7eaf, U+7eb3, U+7eb8, U+7ec7, U+7ee7, U+7eff, U+7f57, U+7ffb, U+805a, U+80a1, U+822c, U+82cf, U+82e5, U+8363, U+836f, U+84dd, U+878d, U+8840, U+8857, U+8863, U+8865, U+8b66, U+8bb2, U+8bda, U+8c01, U+8c08, U+8c46, U+8d1f, U+8d35, U+8d5b, U+8d5e, U+8da3, U+8ddf, U+8f93, U+8fdd, U+8ff0, U+8ff7, U+8ffd, U+9000, U+9047, U+9152, U+949f, U+94c1, U+94f6, U+9646, U+9648, U+9669, U+969c, U+96ea, U+97e9, U+987b, U+987e, U+989d, U+9970, U+9986, U+9c7c, U+9c9c; } /* [115] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.115.woff2) format('woff2'); unicode-range: U+25, U+4e14, U+4e1d, U+4e3d, U+4e49, U+4e60, U+4e9a, U+4eb2, U+4ec5, U+4efd, U+4f3c, U+4f4f, U+4f8b, U+4fbf, U+5019, U+5145, U+514b, U+516b, U+516d, U+5174, U+5178, U+517b, U+5199, U+519b, U+51b3, U+51b5, U+5207, U+5212, U+5219, U+521d, U+52bf, U+533b, U+5343, U+5347, U+534a, U+536b, U+5370, U+53e4, U+53f2, U+5403, U+542c, U+547d, U+54a8, U+54cd, U+54ea, U+552e, U+56f4, U+5747, U+575b, U+5883, U+589e, U+5931, U+5947, U+5956-5957, U+5a92, U+5b63, U+5b83, U+5ba4, U+5bb3, U+5bcc, U+5c14, U+5c1a, U+5c3d, U+5c40, U+5c45, U+5c5e, U+5df4, U+5e72, U+5e95, U+5f80, U+5f85, U+5fb7, U+5fd7, U+601d, U+626b, U+627f, U+62c9, U+62cd, U+6309, U+63a7, U+6545, U+65ad, U+65af, U+65c5, U+666e, U+667a, U+670b, U+671b, U+674e, U+677f, U+6781, U+6790, U+6797, U+6821, U+6838-6839, U+697c, U+6b27, U+6b62, U+6bb5, U+6c7d, U+6c99, U+6d4e, U+6d6a, U+6e29, U+6e2f, U+6ee1, U+6f14, U+6f2b, U+72b6, U+72ec, U+7387, U+7533, U+753b, U+76ca, U+76d8, U+7701, U+773c, U+77ed, U+77f3, U+7814, U+793c, U+79bb, U+79c1, U+79d8, U+79ef, U+79fb, U+7a76, U+7b11, U+7b54, U+7b56, U+7b97, U+7bc7, U+7c73, U+7d20, U+7eaa, U+7ec8, U+7edd, U+7eed, U+7efc, U+7fa4, U+804c, U+8058, U+80cc, U+8111, U+817e, U+826f, U+8303, U+843d, U+89c9, U+89d2, U+8ba2, U+8bbf, U+8bc9, U+8bcd, U+8be6, U+8c22, U+8c61, U+8d22, U+8d26-8d27, U+8d8a, U+8f6f, U+8f7b, U+8f83, U+8f91, U+8fb9, U+8fd4, U+8fdc, U+9002, U+94b1, U+9519, U+95ed, U+961f, U+9632-9633, U+963f, U+968f-9690, U+96be, U+9876, U+9884, U+98de, U+9988, U+9999, U+9ec4, U+ff1b; } /* [116] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.116.woff2) format('woff2'); unicode-range: U+2b, U+40, U+3000, U+300a-300b, U+4e16, U+4e66, U+4e70, U+4e91-4e92, U+4e94, U+4e9b, U+4ec0, U+4eca, U+4f01, U+4f17-4f18, U+4f46, U+4f4e, U+4f9b, U+4fee, U+503c, U+5065, U+50cf, U+513f, U+5148, U+518d, U+51c6, U+51e0, U+5217, U+529e-529f, U+5341, U+534f, U+5361, U+5386, U+53c2, U+53c8, U+53cc, U+53d7-53d8, U+5404, U+5411, U+5417, U+5427, U+5468, U+559c, U+5668, U+56e0, U+56e2, U+56ed, U+5740, U+57fa, U+58eb, U+5904, U+592a, U+59cb, U+5a31, U+5b58, U+5b9d, U+5bc6, U+5c71, U+5dde, U+5df1, U+5e08, U+5e26, U+5e2e, U+5e93, U+5e97, U+5eb7, U+5f15, U+5f20, U+5f3a, U+5f62, U+5f69, U+5f88, U+5f8b, U+5fc5, U+600e, U+620f, U+6218, U+623f, U+627e, U+628a, U+62a4, U+62db, U+62e9, U+6307, U+6362, U+636e, U+64ad, U+6539, U+653f, U+6548, U+6574, U+6613, U+6625, U+663e, U+666f, U+672a, U+6750, U+6784, U+6a21, U+6b3e, U+6b65, U+6bcf, U+6c11, U+6c5f, U+6d4b, U+6df1, U+706b, U+7167, U+724c, U+738b, U+73a9, U+73af, U+7403, U+7537, U+754c, U+7559, U+767d, U+7740, U+786e, U+795e, U+798f, U+79f0, U+7aef, U+7b7e, U+7bb1, U+7ea2, U+7ea6, U+7ec4, U+7ec6, U+7ecd, U+7edc, U+7ef4, U+8003, U+80b2, U+81f3-81f4, U+822a, U+827a, U+82f1, U+83b7, U+8425, U+89c2, U+89c8, U+8ba9, U+8bb8, U+8bc6, U+8bd5, U+8be2, U+8be5, U+8bed, U+8c03, U+8d23, U+8d2d, U+8d34, U+8d70, U+8db3, U+8fbe, U+8fce, U+8fd1, U+8fde, U+9001, U+901f-9020, U+90a3, U+914d, U+91c7, U+94fe, U+9500, U+952e, U+9605, U+9645, U+9662, U+9664, U+9700, U+9752, U+975e, U+97f3, U+9879, U+9886, U+98df, U+9a6c, U+9a8c, U+9ed1, U+9f99; } /* [117] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.117.woff2) format('woff2'); unicode-range: U+4e, U+201c-201d, U+3010-3011, U+4e07, U+4e1c, U+4e24, U+4e3e, U+4e48, U+4e50, U+4e5f, U+4e8b-4e8c, U+4ea4, U+4eab-4eac, U+4ecb, U+4ece, U+4ed6, U+4ee3, U+4ef6-4ef7, U+4efb, U+4f20, U+4f55, U+4f7f, U+4fdd, U+505a, U+5143, U+5149, U+514d, U+5171, U+5177, U+518c, U+51fb, U+521b, U+5229, U+522b, U+52a9, U+5305, U+5317, U+534e, U+5355, U+5357, U+535a, U+5373, U+539f, U+53bb, U+53ca, U+53cd, U+53d6, U+53e3, U+53ea, U+53f0, U+5458, U+5546, U+56db, U+573a, U+578b, U+57ce, U+58f0, U+590d, U+5934, U+5973, U+5b57, U+5b8c, U+5b98, U+5bb9, U+5bfc, U+5c06, U+5c11, U+5c31, U+5c55, U+5df2, U+5e03, U+5e76, U+5e94, U+5efa, U+5f71, U+5f97, U+5feb, U+6001, U+603b, U+60f3, U+611f, U+6216, U+624d, U+6253, U+6295, U+6301, U+6392, U+641c, U+652f, U+653e, U+6559, U+6599, U+661f, U+671f, U+672f, U+6761, U+67e5, U+6807, U+6837, U+683c, U+6848, U+6b22, U+6b64, U+6bd4, U+6c14, U+6c34, U+6c42, U+6ca1, U+6d41, U+6d77, U+6d88, U+6e05, U+6e38, U+6e90, U+7136, U+7231, U+7531, U+767e, U+76ee, U+76f4, U+771f, U+7801, U+793a, U+79cd, U+7a0b, U+7a7a, U+7acb, U+7ae0, U+7b2c, U+7b80, U+7ba1, U+7cbe, U+7d22, U+7ea7, U+7ed3, U+7ed9, U+7edf, U+7f16, U+7f6e, U+8001, U+800c, U+8272, U+8282, U+82b1, U+8350, U+88ab, U+88c5, U+897f, U+89c1, U+89c4, U+89e3, U+8a00, U+8ba1, U+8ba4, U+8bae-8bb0, U+8bbe, U+8bc1, U+8bc4, U+8bfb, U+8d28, U+8d39, U+8d77, U+8d85, U+8def, U+8eab, U+8f66, U+8f6c, U+8f7d, U+8fd0, U+9009, U+90ae, U+90fd, U+91cc-91cd, U+91cf, U+95fb, U+9650, U+96c6, U+9891, U+98ce, U+ff1f; } /* [118] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.118.woff2) format('woff2'); unicode-range: U+d, U+3e, U+5f, U+7c, U+a0, U+a9, U+4e09-4e0b, U+4e0d-4e0e, U+4e13, U+4e1a, U+4e2a, U+4e3a-4e3b, U+4e4b, U+4e86, U+4e8e, U+4ea7, U+4eba, U+4ee5, U+4eec, U+4f1a, U+4f4d, U+4f53, U+4f5c, U+4f60, U+4fe1, U+5165, U+5168, U+516c, U+5173, U+5176, U+5185, U+51fa, U+5206, U+5230, U+5236, U+524d, U+529b, U+52a0-52a1, U+52a8, U+5316, U+533a, U+53cb, U+53d1, U+53ef, U+53f7-53f8, U+5408, U+540c-540e, U+544a, U+548c, U+54c1, U+56de, U+56fd-56fe, U+5728, U+5730, U+5907, U+5916, U+591a, U+5927, U+5929, U+597d, U+5982, U+5b50, U+5b66, U+5b89, U+5b9a, U+5b9e, U+5ba2, U+5bb6, U+5bf9, U+5c0f, U+5de5, U+5e02, U+5e38, U+5e73-5e74, U+5e7f, U+5ea6, U+5f00, U+5f0f, U+5f53, U+5f55, U+5fae, U+5fc3, U+6027, U+606f, U+60a8, U+60c5, U+610f, U+6210-6211, U+6237, U+6240, U+624b, U+6280, U+62a5, U+63a5, U+63a8, U+63d0, U+6536, U+6570, U+6587, U+65b9, U+65e0, U+65f6, U+660e, U+662d, U+662f, U+66f4, U+6700, U+670d, U+672c, U+673a, U+6743, U+6765, U+679c, U+682a, U+6b21, U+6b63, U+6cbb, U+6cd5, U+6ce8, U+6d3b, U+70ed, U+7247-7248, U+7269, U+7279, U+73b0, U+7406, U+751f, U+7528, U+7535, U+767b, U+76f8, U+770b, U+77e5, U+793e, U+79d1, U+7ad9, U+7b49, U+7c7b, U+7cfb, U+7ebf, U+7ecf, U+7f8e, U+8005, U+8054, U+80fd, U+81ea, U+85cf, U+884c, U+8868, U+8981, U+89c6, U+8bba, U+8bdd, U+8bf4, U+8bf7, U+8d44, U+8fc7, U+8fd8-8fd9, U+8fdb, U+901a, U+9053, U+90e8, U+91d1, U+957f, U+95e8, U+95ee, U+95f4, U+9762, U+9875, U+9898, U+9996, U+9ad8, U+ff01, U+ff08-ff09; } /* [119] */ @font-face { font-family: 'Noto Serif SC'; font-style: normal; font-weight: 900; font-display: swap; src: url(https://fonts.gstatic.com/s/notoserifsc/v22/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzVBFNEQIapA8nbGtPqFHEvqJCLn4zOiu4L3BuoNxzQoOAJm-d8.119.woff2) format('woff2'); unicode-range: U+20-22, U+27-2a, U+2c-3b, U+3f, U+41-4d, U+4f-5d, U+61-7b, U+7d, U+ab, U+ae, U+b2, U+b7, U+bb, U+df-e5, U+e7-ea, U+ec-ed, U+f1-f4, U+f6, U+f9-fa, U+fc, U+101, U+103, U+113, U+12b, U+148, U+14d, U+16b, U+1ce, U+1d0, U+300-301, U+1ebf, U+1ec7, U+2013-2014, U+2039-203a, U+2122, U+3001-3002, U+3042, U+3044, U+3046, U+3048, U+304a-3055, U+3057, U+3059-305b, U+305d, U+305f-3061, U+3063-306b, U+306d-3073, U+3075-3076, U+3078-3079, U+307b, U+307e-307f, U+3081-308d, U+308f, U+3092-3093, U+30a1-30a4, U+30a6-30bb, U+30bd, U+30bf-30c1, U+30c3-30c4, U+30c6-30cb, U+30cd-30d7, U+30d9-30e1, U+30e3-30e7, U+30e9-30ed, U+30ef, U+30f3, U+30fb-30fc, U+4e00, U+4e2d, U+65b0, U+65e5, U+6708-6709, U+70b9, U+7684, U+7f51, U+ff0c, U+ff0e, U+ff1a; }","categories":[],"tags":[]},{"title":"IO - ËæìÂÖ•/ËæìÂá∫ÊµÅ‚ë¥_ÂàÜÁ±ª","slug":"note/Basics/IO/IO_IO_1","date":"2023-05-09T17:19:01.932Z","updated":"2023-05-16T12:50:38.996Z","comments":true,"path":"note/Basics/IO/IO_IO_1/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_IO_1/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ JavaÊääÊâÄÊúâ‰º†ÁªüÁöÑÊµÅÁ±ªÂûãÔºàÁ±ªÊàñÊäΩË±°Á±ªÔºâÈÉΩÊîæÂú® java.io ÂåÖ‰∏≠Ôºå‰ª•ÂÆûÁé∞ËæìÂÖ•/ËæìÂá∫ÂäüËÉΩ„ÄÇ Ôºà‰∏ÄÔºâÊµÅÂàÜÁ±ª Java‰∏≠Êää‰∏çÂêåÁöÑËæìÂÖ•/ËæìÂá∫Ê∫êÔºàÈîÆÁõò„ÄÅÊñá‰ª∂„ÄÅÁΩëÁªúËøûÊé•Á≠âÔºâÊäΩË±°Ë°®Ëø∞‰∏∫‚ÄúÊµÅ‚ÄùÔºàstreamÔºâÔºåÈÄöËøáÊµÅÁöÑÊñπÂºèÂÖÅËÆ∏JavaÁ®ãÂ∫è‰ΩøÁî®Áõ∏ÂêåÁöÑÊñπÂºèÊù•ËÆøÈóÆ‰∏çÂêåÁöÑËæìÂÖ•/ËæìÂá∫Ê∫ê„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR T([\"IOÊµÅÂàÜÁ±ª\"]):::p T --> A([\"ÊåâÁÖß(ËØª/ÂÜô)ÊñπÂêëÂàÜÁ±ª\"]):::p T --> B([\"ÊåâÁÖß(ËØª/ÂÜô)Â≠óËäÇÊï∞Â§ßÂ∞èÂàÜÁ±ª\"]):::b T --> C([\"ÊåâÁÖßÊµÅÁöÑËßíËâ≤ÂàÜÁ±ª\"]):::g A -.-> |\"inÔºàËØªÂèñÔºâ\"| a(\"Êñá‰ª∂ËæìÂÖ•ÊµÅÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅ\"):::lp A -.-> |\"outÔºàÂÜôÂÖ•Ôºâ\"| a2(\"Êñá‰ª∂ËæìÂá∫ÊµÅÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂá∫ÊµÅÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂá∫ÊµÅ\"):::lp B -.-> |\"1Â≠óËäÇ\"| b(\"Â≠óËäÇÂûãÊñá‰ª∂ÊµÅÔºà‰∫åËøõÂà∂ÂÜÖÂÆπÔºâFileInputStreamFileOUtputStream\"):::lb B -.-> |\"1Â≠óÁ¨¶Ôºà2Â≠óËäÇÔºâ\"| b2(\"Â≠óÁ¨¶ÂûãÊñá‰ª∂ÊµÅÔºàÊñáÊú¨ÂÜÖÂÆπÔºâFileReaderFileWriter\"):::lb C -.-> |\"Áõ¥Êé•ËøûÊé•Âà∞Êï∞ÊçÆÊ∫ê\"| c(\"Â∫ïÂ±ÇËäÇÁÇπÊµÅÔºà‰ΩéÁ∫ßÊµÅÔºâ\"):::lg C -.-> |\"Â∞ÅË£ÖÂ∑≤Â≠òÂú®ÁöÑÊµÅ\"| c2(\"‰∏äÂ±ÇÂ§ÑÁêÜÊµÅÔºàÈ´òÁ∫ßÊµÅÔºâ\"):::lg classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà‰∫åÔºâÊµÅÊ®°ÂûãÔºà1ÔºâÊµÅÁöÑÂü∫Êú¨Ê¶ÇÂøµÊ®°Âûã 4‰∏™ÊäΩË±°Âü∫Á±ªÔºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph TD t([\"4‰∏™ÊäΩË±°Âü∫Á±ª\"]):::p t --> |\"ËæìÂÖ•ÊµÅ\"| A(\"InputStreanÔºàÂ≠óËäÇËæìÂÖ•ÊµÅÔºâReaderÔºàÂ≠óÁ¨¶ËæìÂÖ•ÊµÅÔºâ\"):::lp t --> |\"ËæìÂá∫ÊµÅ\"| B(\"OutputStreamÔºàÂ≠óËäÇËæìÂá∫ÊµÅÔºâWriterÔºàÂ≠óÁ¨¶ËæìÂá∫ÊµÅÔºâ\"):::lp A -.-> a(\"ÊääËæìÂÖ•ËÆæÂ§áÊäΩË±°Êàê‚ÄúÊ∞¥ÁÆ°‚ÄùÔºåÊ∞¥ÁÆ°ÈáåÁöÑÊØè‰∏™‚ÄúÊ∞¥Êª¥‚Äù‰æùÊ¨°ÊéíÂàó\"):::info B -.-> b(\"ÊääËæìÂá∫ËÆæÂ§áÊäΩË±°Êàê‚ÄúÊ∞¥ÁÆ°‚ÄùÔºåÊ∞¥ÁÆ°ÈáåÊ≤°Êúâ‰ªª‰ΩïÊ∞¥Êª¥\"):::info info(\"Java IOÊµÅ40Â§ö‰∏™Á±ªÈÉΩÁî±ÂÆÉ‰ª¨Ê¥æÁîü\"):::info classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#56565b,stroke-dasharray: 3 3, stroke-width: 2px ËæìÂÖ•ÊµÅÔºö ËæìÂÖ•ÊµÅ‰ΩøÁî®ÈöêÂºèÁöÑËÆ∞ÂΩïÊåáÈíàÊù•Ë°®Á§∫ÂΩìÂâçÊ≠£ÂáÜÂ§á‰ªéÂì™‰∏™‚ÄúÊ∞¥Êª¥‚ÄùÂºÄÂßãËØªÂèñÔºåÊØèÂΩìÁ®ãÂ∫è‰ªéInputStreamÊàñReaderÈáåÂèñÂá∫‰∏Ä‰∏™ÊàñÂ§ö‰∏™‚ÄúÊ∞¥Êª¥‚ÄùÂêéÔºåËÆ∞ÂΩïÊåáÈíàËá™Âä®ÂêëÂêéÁßªÂä®„ÄÇ ËæìÂá∫ÊµÅÔºö ÂΩìÊâßË°åËæìÂá∫Êó∂ÔºåÁ®ãÂ∫èÁõ∏ÂΩì‰∫é‰æùÊ¨°Êää‚ÄúÊ∞¥Êª¥‚ÄùÊîæÂÖ•Âà∞ËæìÂá∫ÊµÅÁöÑÊ∞¥ÁÆ°‰∏≠ÔºåËæìÂá∫ÊµÅÂêåÊ†∑ÈááÁî®ÈöêÂºèÁöÑËÆ∞ÂΩïÊåáÈíàÊù•Ê†áËØÜÂΩìÂâçÊ∞¥Êª¥Âç≥Â∞ÜÊîæÂÖ•ÁöÑ‰ΩçÁΩÆÔºåÊØèÂΩìÁ®ãÂ∫èÂêëOutputStreamÊàñWriterÈáåËæìÂá∫‰∏Ä‰∏™ÊàñÂ§ö‰∏™Ê∞¥Êª¥ÂêéÔºåËÆ∞ÂΩïÊåáÈíàËá™Âä®ÂêëÂêéÁßªÂä®„ÄÇ Ê≥®ÔºöÂàíÂàÜËæìÂÖ•/ËæìÂá∫ÊµÅÊó∂ÊòØ‰ªéÁ®ãÂ∫èËøêË°åÊâÄÂú®ÂÜÖÂ≠òÁöÑËßíÂ∫¶Êù•ËÄÉËôëÁöÑÔºåÂõ†Ê≠§ÔºàÂÜÖÂ≠ò ‚Äî&gt; Á°¨ÁõòÔºâÂ∫îËØ•ÊòØËæìÂá∫ÊµÅ„ÄÇ Ôºà2ÔºâÂ§ÑÁêÜÊµÅÊ®°Âûã ËäÇÁÇπÊµÅÂíåÂ§ÑÁêÜÊµÅ ‰ΩøÁî®ËäÇÁÇπÊµÅÔºà‰ΩéÁ∫ßÊµÅÔºâËøõË°åËæìÂÖ•/ËæìÂá∫Êó∂ÔºåÁ®ãÂ∫èÁõ¥Êé•ËøûÊé•Âà∞ÂÆûÈôÖÁöÑÊï∞ÊçÆÊ∫êÔºåÂíåÂÆûÈôÖÁöÑËæìÂÖ•/ËæìÂá∫ËäÇÁÇπËøûÊé•„ÄÇ Â§ÑÁêÜÊµÅÔºàÈ´òÁ∫ßÊµÅÔºâÂØπÂ∑≤Â≠òÂú®ÁöÑÊµÅËøõË°åËøûÊé•ÊàñÂ∞ÅË£ÖÔºåÈÄöËøáÂ∞ÅË£ÖÂêéÁöÑÊµÅÊù•ÂÆûÁé∞Êï∞ÊçÆËØª/ÂÜôÂäüËÉΩ„ÄÇ ‰ΩøÁî®Â§ÑÁêÜÊµÅÊù•ÂåÖË£ÖËäÇÁÇπÊµÅÔºö Á®ãÂ∫èÈÄöËøáÂ§ÑÁêÜÊµÅÔºàÂèàÁß∞È´òÁ∫ßÊµÅ„ÄÅÂåÖË£ÖÊµÅ„ÄÅËøáÊª§ÊµÅÔºâÊù•ÊâßË°åËæìÂÖ•/ËæìÂá∫ÂäüËÉΩÔºåËÆ©ËäÇÁÇπÊµÅ‰∏éÂ∫ïÂ±ÇÁöÑI/OËÆæÂ§á„ÄÅÊñá‰ª∂‰∫§‰∫í„ÄÇÔºàÂ§ÑÁêÜÊµÅÂèØ‚ÄúÂ´ÅÊé•‚ÄùÂú®‰ªª‰ΩïÂ∑≤Â≠òÂú®ÁöÑÊµÅÁöÑÂü∫Á°Ä‰πã‰∏äÔºâ üìå Java‰ΩøÁî®Â§ÑÁêÜÊµÅÊù•ÂåÖË£ÖËäÇÁÇπÊµÅÊòØ‰∏ÄÁßçÂÖ∏ÂûãÁöÑË£ÖÈ•∞Âô®ËÆæËÆ°Ê®°ÂºèÔºåÈÄöËøá‰ΩøÁî®Â§ÑÁêÜÊµÅÊù•ÂåÖË£Ö‰∏çÂêåÁöÑËäÇÁÇπÊµÅÔºåÊó¢ÂèØ‰ª•Ê∂àÈô§‰∏çÂêåËäÇÁÇπÊµÅÁöÑÂÆûÁé∞Â∑ÆÂºÇÔºå‰πüÂèØ‰ª•Êèê‰æõÊõ¥Êñπ‰æøÁöÑÊñπÊ≥ïÊù•ÂÆåÊàêËæìÂÖ•/ËæìÂá∫ÂäüËÉΩ„ÄÇÂõ†Ê≠§Â§ÑÁêÜÊµÅ‰πüË¢´Áß∞‰∏∫ÂåÖË£ÖÊµÅ„ÄÇ Ôºà‰∏âÔºâÊäΩË±°Âü∫Á±ªÔºà1ÔºâInputStream Âíå Reader InputStreamÂåÖÂê´ÁöÑ3‰∏™ÊñπÊ≥ïÔºö ÊñπÊ≥ï ËØ¥Êòé int read() ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂçï‰∏™Â≠óËäÇÔºåËøîÂõûÊâÄËØªÂèñÁöÑÂ≠óËäÇÊï∞ÊçÆÔºàÂ≠óËäÇÊï∞ÊçÆÂèØÁõ¥Êé•ËΩ¨Êç¢‰∏∫intÁ±ªÂûãÔºâ„ÄÇ int read(byte[] b) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆÔºàÊúÄÂ§öb.length‰∏™Â≠óËäÇÔºâÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Â≠óËäÇÊï∞ÁªÑb‰∏≠ÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞„ÄÇ int read(byte[] b, int off, int len) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆÔºàÊúÄÂ§ölen‰∏™Â≠óËäÇÔºâÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Êï∞ÁªÑb‰∏≠ÔºåÊîæÂÖ•Êï∞ÁªÑb‰∏≠Êó∂‰ªéoff‰ΩçÁΩÆÂºÄÂßãÔºàÂπ∂‰∏çÊòØ‰ªéÊï∞ÁªÑËµ∑ÁÇπÂºÄÂßãÔºâÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞„ÄÇ readerÂåÖÂê´ÁöÑ3‰∏™ÊñπÊ≥ïÔºö ÊñπÊ≥ï ËØ¥Êòé int read() ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂçï‰∏™Â≠óÁ¨¶ÔºåËøîÂõûÊâÄËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞ÊçÆÔºàÂ≠óÁ¨¶Êï∞ÊçÆÂèØÁõ¥Êé•ËΩ¨Êç¢‰∏∫intÁ±ªÂûãÔºâ„ÄÇ int read(char[] cbuf) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆÔºàÊúÄÂ§öcbuf.length‰∏™Â≠óÁ¨¶ÔºâÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Â≠óÁ¨¶Êï∞ÁªÑcbuf‰∏≠ÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞„ÄÇ int read(char[] cbuf, int off, int len) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆÔºàÊúÄÂ§ölen‰∏™Â≠óÁ¨¶ÔºâÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂú®Â≠óÁ¨¶Êï∞ÁªÑcbuf‰∏≠Ôºå‰ªéoff‰ΩçÁΩÆÂºÄÂßãÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞„ÄÇ Ê®°ÂûãÔºö InputStream Âíå Reader ÈÉΩÊòØÂ∞ÜËæìÂÖ•Êï∞ÊçÆÊäΩË±°ÊàêÂ¶ÇÂõæÊâÄÁ§∫ÁöÑÊ∞¥ÁÆ°Ôºö ‰ΩøÁî®Êï∞ÁªÑ‰Ωú‰∏∫ read() ÊñπÊ≥ïÁöÑÂèÇÊï∞Êó∂ÔºåÂèØÁêÜËß£‰∏∫‰ΩøÁî®‰∏Ä‰∏™‚ÄúÁ´πÁ≠í‚ÄùÂà∞Ê∞¥ÁÆ°‰∏≠ÂèñÊ∞¥„ÄÇÁõ¥Âà∞ read(char[] cbuf) Êàñ read(byte[] b) ÊñπÊ≥ïËøîÂõû-1ÔºåË°®ÊòéÂà∞‰∫ÜËæìÂÖ•ÊµÅÁöÑÁªìÊùüÁÇπ„ÄÇ Ôºà2ÔºâOutputStream Âíå Writer OutputStreamÂåÖÂê´ÁöÑ3‰∏™ÊñπÊ≥ïÔºö ÊñπÊ≥ï ËØ¥Êòé void write(int c) Â∞ÜÊåáÂÆöÁöÑÂ≠óËäÇ/Â≠óÁ¨¶cËæìÂá∫Âà∞ËæìÂá∫ÊµÅ‰∏≠„ÄÇ int write(byte[]/char[] buf) Â∞ÜÂ≠óËäÇÊï∞ÁªÑ/Â≠óÁ¨¶Êï∞ÁªÑ‰∏≠ÁöÑÊï∞ÊçÆËæìÂá∫Âà∞ÊåáÂÆöËæìÂá∫ÊµÅ‰∏≠„ÄÇ int write(byte[]/char[] buf, int off, int len) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊï∞ÊçÆÔºàÊúÄÂ§ölen‰∏™Â≠óËäÇÔºâÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Êï∞ÁªÑb‰∏≠ÔºåÊîæÂÖ•Êï∞ÁªÑb‰∏≠Êó∂‰ªéoff‰ΩçÁΩÆÂºÄÂßãÔºàÂπ∂‰∏çÊòØ‰ªéÊï∞ÁªÑËµ∑ÁÇπÂºÄÂßãÔºâÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞„ÄÇ WriterÂåÖÂê´ÁöÑ2‰∏™ÊñπÊ≥ïÔºö WriterÂèØ‰ª•Áî®Â≠óÁ¨¶‰∏≤Êù•‰ª£ÊõøÂ≠óÁ¨¶Êï∞ÁªÑÔºåÂç≥‰ª•StringÂØπË±°‰Ωú‰∏∫ÂèÇÊï∞ ÊñπÊ≥ï ËØ¥Êòé int write(String str) Â∞ÜstrÂ≠óÁ¨¶‰∏≤ÈáåÂåÖÂê´ÁöÑÂ≠óÁ¨¶ËæìÂá∫Âà∞ÊåáÂÆöËæìÂá∫ÊµÅ‰∏≠„ÄÇ int write(String str, int off, int len) Â∞ÜstrÂ≠óÁ¨¶‰∏≤Èáå‰ªéoff‰ΩçÁΩÆÂºÄÂßãÔºåÈïøÂ∫¶‰∏∫lenÁöÑÂ≠óÁ¨¶ËæìÂá∫Âà∞ÊåáÂÆöËæìÂá∫ÊµÅ‰∏≠„ÄÇ ÔºàÂõõÔºâ*ÊµÅ‰ΩìÁ≥ªÔºà1ÔºâÂàÜÁ±ª ÂàÜÁ±ª Â≠óËäÇËæìÂÖ•ÊµÅ Â≠óËäÇËæìÂá∫ÊµÅ Â≠óÁ¨¶ËæìÂÖ•ÊµÅ Â≠óÁ¨¶ËæìÂá∫ÊµÅ ÊäΩË±°Á±ª InputStream OutputStream Reader Writer ËΩ¨Êç¢Á±ª InputStream-Reader OutputStream-Writer Á¨¨‰∏ÄÁ±ªÔºöÊï∞ÊçÆÊ∫êÁ±ª Êñá‰ª∂ File-InputStream File-OutputStream FileReader FilerWriter Êï∞ÁªÑ ByteArray-InputStream ByteArray-OutputStream CharArray-Reader CharArray-Writer ÂØπË±° Object-InputStream Object-OutputStream Â≠óÁ¨¶‰∏≤ StringBuffer-InputStream StringReader StringWriter Á¨¨‰∫åÁ±ªÔºöÊï∞ÊçÆÊµÅ‰∏≤ËÅîÁ±ª ÁÆ°ÈÅì Pipe-InputStream Pipe-OutputStream PipeReader PipeWriter Â∫èÂàó Sequence-InputStream Á¨¨‰∏âÁ±ªÔºöÊï∞ÊçÆÊµÅËøáÊª§Á±ª ËøáÊª§ Filter-InputStream Filter-OutputStream FilterReader FilterWriter ÁºìÂÜ≤ Buffered-InputStream Buffered-OutputStream Buffered-Reader Buffered-Writer Êï∞ÊçÆ Data-InputStream Data-OutputStream Ë°åÂè∑ LineNumber-InputStream LineNumber-Reader Êé®Âõû Pushback-InputStream Pushback-Reader Ê†ºÂºèÂåñ PrintStream PrintWriter Ôºà2ÔºâËØ¥Êòégraph LR T([\"ÊµÅ‰ΩìÁ≥ªËØ¥Êòé\"]):::p T -.- 1(\"ÊäΩË±°Âü∫Á±ªÊó†Ê≥ïÁõ¥Êé•ÂàõÂª∫ÂÆû‰æãÔºåÂøÖÈ°ªÈÄöËøáÂ≠êÁ±ªÂàõÂª∫\"):::p T -.- 2(\"Êï∞ÊçÆÊ∫êÁ±ªÔºàËäÇÁÇπÊµÅÔºâÂàõÂª∫ÂêÑÁßçÊµÅÁöÑËµ∑ÂßãÁ±ªÔºåÂøÖÈ°ª‰∏éÊåáÂÆöÁâ©ÁêÜËäÇÁÇπÂÖ≥ËÅî\"):::g T -.- 3(\"Êï∞ÊçÆÊµÅ‰∏≤ËÅîÁ±ªÊï∞ÊçÆÊµÅËøáÊª§Á±ªÊòØÂØπÂêÑÁßçÊµÅÂÆû‰æãÁöÑÂåÖË£Ö\"):::g T -.- 4(\"#12288;#12288;#12288;ËΩ¨Êç¢Á±ª#12288;#12288;#12288;\"):::g %% ÊäΩË±°Âü∫Á±ª 1 -.- input(\"InputStream„ÄÅOutputStream„ÄÅReader„ÄÅWriter ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;FilterInputStream„ÄÅFilterOutputStream„ÄÅ#12288;#12288; FilterReader„ÄÅFilterWriter#12288;#12288;#12288;#12288;#12288;#12288;#12288;#12288;#12288; \"):::lp %% Êï∞ÊçÆÊ∫êÁ±ª 2-.- array(\"&nbsp;Êñá‰ª∂ÊµÅÔºö‰ª•Êñá‰ª∂‰∏∫Êï∞ÊçÆÊ∫êÔºåÂèØÊìç‰ΩúÊñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπ ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Êï∞ÁªÑÊµÅÔºöÂ∞ÜÂÜÖÂ≠ò‰∏≠ÁöÑÂÜÖÈÉ®ÁºìÂ≠òÂå∫‰Ωú‰∏∫Êï∞ÊçÆÊ∫ê„ÄÇ#12288; ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;ÂØπË±°ÊµÅÔºöÈÄöËøáÂ≠óËäÇÊµÅËØªÂÜôÂØπË±°ÔºåÂÆûÁé∞ÂØπË±°Â∫èÂàóÂåñ ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Â≠óÁ¨¶‰∏≤ÔºöÊï∞ÊçÆÊ∫ê‰∏∫Â≠óÁ¨¶‰∏≤ÁöÑÂ≠óÁ¨¶ÊµÅ„ÄÇ#12288;#12288;#12288;#12288;#12288; \"):::lg %% ÊµÅ‰∏≤ËÅîÁ±ª 3 -.- pip(\"&nbsp;ÁÆ°ÈÅìÊµÅÔºöÁÆ°ÈÅì(pipe)ÔºåÂÆûÁé∞ËøõÁ®ãÈó¥ÁöÑÈÄö‰ø°ÂäüËÉΩ„ÄÇ&nbsp; ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Â∫èÂàóÊµÅÔºöË°®Á§∫ÂÖ∂‰ªñËæìÂÖ•ÊµÅÁöÑÈÄªËæë‰∏≤ËÅî,ÂèØÂêàÂπ∂ÊµÅ„ÄÇ \"):::lg %% ÊµÅËøáÊª§Á±ª 3 -.- ft(\"&nbsp;ËøáÊª§ÊµÅÔºöÂ∞ÅË£ÖÂÖ∂‰ªñÊµÅÔºåÂπ∂‰∏∫ÂÆÉ‰ª¨Êèê‰æõÈ¢ùÂ§ñÂäüËÉΩ„ÄÇ ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;ÁºìÂÜ≤ÊµÅÔºöÂ¢ûÂä†ÁºìÂÜ≤ÂäüËÉΩÔºåÂØπÊµÅËµ∑ÁºìÂÜ≤Ë£ÖÈ•∞„ÄÇ#12288;#12288; ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Êï∞ÊçÆÊµÅÔºöÂèØÊåâ8ÁßçÂü∫Êú¨Á±ªÂûãÂíåÂ≠óÁ¨¶‰∏≤Êù•ËØªÂÜôÊµÅ„ÄÇ&nbsp; ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Ë°åÂè∑ÊµÅÔºöÂèØË∑üË∏™„ÄÅËÆæÁΩÆË°åÂè∑ÔºåÊ†áËÆ∞‰ª•ÊÅ¢Â§çÁ≠â„ÄÇ#12288; ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;Êé®ÂõûÊµÅÔºöÂ∞ÜÂÜÖÂÆπÊé®ÂõûÂà∞Êé®ÂõûÁºìÂÜ≤Âå∫‰ª•ÈáçÂ§çËØªÂèñ„ÄÇ ‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶ &nbsp;ÊâìÂç∞ÊµÅÔºöÂ∞ÜÂü∫Êú¨Á±ªÂûã„ÄÅÂØπË±°ËæìÂá∫‰∏∫Â≠óÁ¨¶‰∏≤Ë°®Á§∫„ÄÇ \"):::lg %% ËΩ¨Êç¢Á±ª 4 -.- isr(\"ËΩ¨Êç¢ÊµÅÔºöÂ∞ÜÂ≠óËäÇÊµÅËΩ¨Êç¢ÊàêÂ≠óÁ¨¶ÊµÅ#12288;#12288;#12288;#12288;#12288;#12288;#12288;#12288;\"):::lg classDef p fill:#e5c0cb classDef b fill:#aab7d2 classDef g fill:#a6ccc3 classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà3ÔºâÂ≠êÁ±ªÂõæ* InputStream classDiagram class InputStream class ByteArrayInputStream class FileInputStream class ObjectInputStream class FilterInputStream class PipedInputStream class SequenceInputStream class StringBufferInputStream class BufferedInputStream class DataInputStream class LineNumberInputStream class PushbackInputStream InputStream","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"IO - ËæìÂÖ•/ËæìÂá∫ÊµÅ‚ëµ_ÂÆûÁé∞Á±ª","slug":"note/Basics/IO/IO_IO_2","date":"2023-05-09T06:59:55.657Z","updated":"2023-05-16T12:51:41.422Z","comments":true,"path":"note/Basics/IO/IO_IO_2/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_IO_2/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ ÊµÅ‰ΩìÁ≥ªÔºö ÂàÜÁ±ª Â≠óËäÇËæìÂÖ•ÊµÅ Â≠óËäÇËæìÂá∫ÊµÅ Â≠óÁ¨¶ËæìÂÖ•ÊµÅ Â≠óÁ¨¶ËæìÂá∫ÊµÅ ÊäΩË±°Á±ª InputStream OutputStream Reader Writer ËΩ¨Êç¢Á±ª InputStream-Reader OutputStream-Writer Á¨¨‰∏ÄÁ±ªÔºöÊï∞ÊçÆÊ∫êÁ±ª Êñá‰ª∂ File-InputStream File-OutputStream FileReader FilerWriter Êï∞ÁªÑ ByteArray-InputStream ByteArray-OutputStream CharArray-Reader CharArray-Writer ÂØπË±° Object-InputStream Object-OutputStream Â≠óÁ¨¶‰∏≤ StringBuffer-InputStream StringReader StringWriter Á¨¨‰∫åÁ±ªÔºöÊï∞ÊçÆÊµÅ‰∏≤ËÅîÁ±ª ÁÆ°ÈÅì Pipe-InputStream Pipe-OutputStream PipeReader PipeWriter Â∫èÂàó Sequence-InputStream Á¨¨‰∏âÁ±ªÔºöÊï∞ÊçÆÊµÅËøáÊª§Á±ª ËøáÊª§ Filter-InputStream Filter-OutputStream FilterReader FilterWriter ÁºìÂÜ≤ Buffered-InputStream Buffered-OutputStream Buffered-Reader Buffered-Writer Êï∞ÊçÆ Data-InputStream Data-OutputStream Ë°åÂè∑ LineNumber-InputStream LineNumber-Reader Êé®Âõû Pushback-InputStream Pushback-Reader Ê†ºÂºèÂåñ PrintStream PrintWriter Ôºà‰∏ÄÔºâÊñá‰ª∂ÊµÅgraph LR T([\"Êñá‰ª∂ÊµÅÔºà‰ΩéÁ∫ßÊñá‰ª∂ÊµÅÔºâ\"]):::p T --> t(\"ÂèØÊìç‰ΩúÊñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπ\"):::info t --> A([\"ÊåâÁÖß(ËØª/ÂÜô)ÊñπÂêëÂàÜÁ±ª\"]):::p t --> B([\"ÊåâÁÖß(ËØª/ÂÜô)Â≠óËäÇÊï∞Â§ßÂ∞èÂàÜÁ±ª\"]):::b A -.-> |\"inÔºàËØªÂèñÔºâ\"| a(\"Êñá‰ª∂ËæìÂÖ•ÊµÅÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅ\"):::lp A -.-> |\"outÔºàÂÜôÂÖ•Ôºâ\"| a2(\"Êñá‰ª∂ËæìÂá∫ÊµÅÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂá∫ÊµÅÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂá∫ÊµÅ\"):::lp B -.-> |\"1Â≠óËäÇ\"| b(\"Â≠óËäÇÂûãÊñá‰ª∂ÊµÅFileInputStreamFileOUtputStream\"):::lb B -.-> |\"1Â≠óÁ¨¶Ôºà2Â≠óËäÇÔºâ\"| b2(\"Â≠óÁ¨¶ÂûãÊñá‰ª∂ÊµÅFileReaderFileWriter\"):::lb classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà1ÔºâFileInputStramÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅ * ÁªßÊâøÂÖ≥Á≥ªÁªßÊâø‰∫é InputStream Á±ªÔºàÂ≠óËäÇÂûãËæìÂÖ•ÊµÅÔºâ * ÊûÑÈÄ†ÊñπÊ≥ï ÊûÑÈÄ†ÊñπÊ≥ï ËØ¥Êòé ÔºàÊ≤°ÊúâÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÔºâ FileInputStram(File file) ÈÄöËøáFileÂØπË±°ÊûÑÈÄ† FileInputStram(String name) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÂ≠óÁ¨¶‰∏≤ÊûÑÈÄ† * Â∏∏Áî®ÊñπÊ≥ï Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé ËøîÂõûÂÄºÁ±ªÂûã finalize() GCÂØπË±°ÂõûÊî∂ available() ËøîÂõûÂΩìÂâçÊµÅÁÆ°ÈÅì‰∏≠ÊúâÂ§öÂ∞ëÁºìÂ≠òÂ≠óËäÇÔºåÊØèÊ¨°ËØªÂèñ‰∏Ä‰∏™Â≠óËäÇÂØπÂ∫îÁöÑ Unicode Á†Å„ÄÇÔºàËØªÂæóÂà∞ËøîÂõû 0‚Äì65536ÔºåËØª‰∏çÂà∞ËøîÂõû-1Ôºâ int üî∫ read() ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂçï‰∏™Â≠óËäÇÔºåËøîÂõûËØªÂèñÁöÑÂ≠óËäÇÊï∞ÊçÆÔºàUnicodeÁ†ÅÔºâ int read(byte[])ÔºöÂ∞ÜËæìÂÖ•ÊµÅÂÜÖÂÆπÂÜôÂÖ•Êï∞ÁªÑÈáåÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞„ÄÇ int read(byte[] b, int off, int leng)ÔºöÂ∞ÜËæìÂÖ•ÊµÅÂÜÖÂÆπÂÜôÂÖ•Êï∞ÁªÑÈáåÔºå‰ªéoff‰ΩçÁΩÆÂºÄÂßãÔºåÊîæÂÖ•len‰∏™Â≠óËäÇÔºà‰∏çÊòØ‰ªéÊï∞ÁªÑËµ∑ÁÇπÂºÄÂßãÔºâÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞„ÄÇ int skip() Ë∑≥ËøáÂá†‰∏™Â≠óËäÇËØªÂèñ long n close() ÂÖ≥Èó≠ÊµÅÁÆ°ÈÅìÔºà‚ö†Ô∏è ÂøÖÈ°ªË¶ÅÂÅöÔºåÊúÄÂ•ΩÊîæÂú® finally{} ÈáåÔºâ - read()ÂàõÂª∫‰∏Ä‰∏™Â≠óËäÇÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅÔºåËØªÂèñÊñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπ„ÄÇ try&#123; File file = new File(&quot;D://Test//test.txt&quot;); FileInputStream fis = new FileInputStram(file); int i = fis.read(); // ‚Üê ÊØèÊ¨°ËØªÂèñ‰∏Ä‰∏™Â≠óËäÇ while(i!=-1)&#123; System.out.ptinln(i); // ‚Üí ËøîÂõûÂ≠óËäÇÂØπÂ∫îÂæóUnicodeÁ†Å i = fis.read(); &#125;&#125;catch(IOException e)&#123; e.printStackTrace;&#125; - read(byte[] b)ËØªÂèñÊñá‰ª∂ÂÜÖÂÆπÔºåË£ÖÂÖ•Êï∞ÁªÑÂÜÖ„ÄÇËøîÂõûËØªÂèñÁöÑÊúâÊïàÂ≠óÁ¨¶‰∏™Êï∞„ÄÇ try&#123; FileInputStream fis = new FileInputStram(&quot;D://Test//test.txt&quot;); byte[] b = new bytep[5]; int count = fis.read(b); // ‚Üê ËØªÂèñÊñá‰ª∂ÂÜÖÂÆπÔºåË£ÖËøõÊï∞ÁªÑÈáå while(count!=-1)&#123; // ‚Üí ËøîÂõûËØªÂèñÂà∞ÁöÑÊúâÊïàÂ≠óËäÇ‰∏™Êï∞ // üî∏ String value = new String(b); String value = new String(b, 0, count); // ‰ΩøÁî®ÂÅèÁßªÈáèÊûÑÈÄ†Â≠óËäÇÂûãÊï∞ÁªÑÂ≠óÁ¨¶‰∏≤ System.out.ptint(value); // count = fis.read(b); &#125; &#125;catch(IOException e)&#123; e.printStackTrace; &#125;/* Êñá‰ª∂ÂÜÖÂÆπÔºö * abcdefg * hijklmn * opq *//* üî∏ Áõ¥Êé•‰ΩøÁî®String(b)ËØªÂèñÂÜÖÂÆπÔºö * a b c d e * f g \\r \\n h * i j k l m * n \\r \\n o p * q \\r \\n o p &lt;‚Äî‚Äî Âà∞qÁªìÊùüÔºå‰ΩÜÊòØ‰πãÂâçÁöÑÊ≤°ÊúâË¢´ÊõøÊç¢Êéâ - skip()try &#123; FileInputStream fis = new FileInputStream(&quot;D://Test//test.txt&quot;); fis.skip(2); int code = fis.read(); // c System.out.println((char)code);&#125; catch (IOException e) &#123; e.printStackTrace();&#125; - close()try&#123; File file = new File(&quot;D://Test//test.txt&quot;); FileOutStream fos = new FileOutStram(file); fos.write(97); // ÂÜôÂÖ•codeÁ†Å fos.flush(); // Âà∑Êñ∞ Â∞ÜÁÆ°ÈÅì‰∏≠ÁöÑÂ≠óËäÇÊé®ÂÖ•Êñá‰ª∂‰∏≠&#125;catch(IOException e)&#123; e.printStackTrace;&#125; Ôºà2ÔºâFileOutputStreamÂ≠óËäÇÂûãÊñá‰ª∂ËæìÂá∫ÊµÅ * ÁªßÊâøÂÖ≥Á≥ªÁªßÊâø‰∫é OutputStream Á±ª * ÊûÑÈÄ†ÊñπÊ≥ï ÊûÑÈÄ†ÊñπÊ≥ï ËØ¥Êòé ÔºàÊ≤°ÊúâÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÔºâ FileOutputStram(File file) Âà©Áî®FileÂØπË±°ÊûÑÈÄ†ÔºàÈªòËÆ§Ë¶ÜÁõñÂéüÊñáÔºâ FileOutputStram(File file, Boolean append) Âà©Áî®FileÂØπË±°ÊûÑÈÄ†„ÄÅÊòØÂê¶Â∞ÜÂÜÖÂÆπËøΩÂä†Âà∞Êñá‰ª∂Êú´Â∞æÔºàtrueÔºö‰∏çË¶ÜÁõñÔºâ FileOutputStram(String name) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÂ≠óÁ¨¶‰∏≤ÊûÑÈÄ† FileOutputStram(String name, Boolean append) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÊûÑÈÄ†„ÄÅÊòØÂê¶ËøΩÂä†Âà∞Êñá‰ª∂Êú´Â∞æ * Â∏∏Áî®ÊñπÊ≥ï Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé *finalize()* GCÂØπË±°ÂõûÊî∂ write() ÂÜôÂÖ•Âà∞Êñá‰ª∂Ôºà‰∏éread()Âå∫Âà´Ôºâ write(int code)ÔºöÂ∞ÜÁªôÂÆöcodeÂÜôÂÖ•Êñá‰ª∂ Ôºà‚Äô=‚ÄôÂ≠óÁ¨¶char‰πüË°å,‰ºöËá™Âä®ËΩ¨Êç¢Ôºâ write(byte[])Ôºö Â∞ÜÊï∞ÁªÑÂÜÖÂÆπÂÜôÂÖ•Êñá‰ª∂ÊµÅÈáåÔºàString‚ÄîgetByte()Ôºâ flush() Âà∑Êñ∞ÔºöÂ∞ÜÁÆ°ÈÅìÂÜÖÂ≠óËäÇÊé®ÂÖ•Êñá‰ª∂ close() * Ê≥®ÊÑèÔºöÂú®finally‰∏≠ÂÖ≥Èó≠ - write()try&#123; File file = new File(&quot;D://Test//test.txt&quot;); FileOutStream fos = new FileOutStram(file); fos.write(97); // ÂÜôÂÖ•codeÁ†Å fos.flush(); // Âà∑Êñ∞ Â∞ÜÁÆ°ÈÅì‰∏≠ÁöÑÂ≠óËäÇÊé®ÂÖ•Êñá‰ª∂‰∏≠ &#125;&#125;catch(IOException e)&#123; e.printStackTrace;&#125; Ôºà3ÔºâFileReaderÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂÖ•ÊµÅ * ÁªßÊâøÂÖ≥Á≥ªÁªßÊâø‰∫éInputStreamReader Á±ªÔºàÂ≠óËäÇÂûãËæìÂÖ•ÊµÅÔºâ * ÊûÑÈÄ†ÊñπÊ≥ï ÊûÑÈÄ†ÊñπÊ≥ï ËØ¥Êòé ÔºàÊ≤°ÊúâÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÔºâ FileReader(File file) ÈÄöËøáFileÂØπË±°ÊûÑÈÄ†ÔºàÈªòËÆ§Ë¶ÜÁõñÂéüÊñáÔºâ FIleReader(String fileName) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÂ≠óÁ¨¶‰∏≤ÊûÑÈÄ† FileReader(FileDescriptor fd) ÈÄöËøáÊñá‰ª∂ÊèèËø∞Á¨¶ÊûÑÂª∫ÔºàÊñá‰ª∂ÊèèËø∞Á¨¶ÁöÑÊúâÊïàËåÉÂõ¥ÊòØ 0 Âà∞ OPEN_MAXÔºâ * Â∏∏Áî®ÊñπÊ≥ï Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé üî∫ read() ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂçï‰∏™Â≠óÁ¨¶ÔºåËøîÂõûÊâÄËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞ÊçÆ int read(char[] cbuf) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ÊúÄÂ§öËØªÂèñcbuf.length‰∏™Â≠óÁ¨¶ÁöÑÊï∞ÊçÆÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Â≠óÁ¨¶Êï∞ÁªÑcbuf‰∏≠ÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞„ÄÇ int read(char[] cbuf, int off, int len) ‰ªéËæìÂÖ•ÊµÅ‰∏≠ÊúÄÂ§öËØªÂèñlen‰∏™Â≠óÁ¨¶ÁöÑÊï∞ÊçÆÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Â≠óÁ¨¶Êï∞ÁªÑcbuf‰∏≠Ôºå‰ªéoff‰ΩçÁΩÆÂºÄÂßãÂ≠òÂÇ®ÔºàÂπ∂‰∏çÊòØ‰ªéÊï∞ÁªÑËµ∑ÁÇπÂºÄÂßãÔºâÔºåËøîÂõûÂÆûÈôÖËØªÂèñÁöÑÂ≠óÁ¨¶Êï∞„ÄÇ Ôºà4ÔºâFileWriterÂ≠óÁ¨¶ÂûãÊñá‰ª∂ËæìÂá∫ÊµÅ * ÁªßÊâøÂÖ≥Á≥ªÁªßÊâø‰∫é OutputStreamWriter Á±ª ÔºàÂ≠óËäÇÂûãËæìÂá∫ÊµÅÔºâ * ÊûÑÈÄ†ÊñπÊ≥ï ÊûÑÈÄ†ÊñπÊ≥ï ËØ¥Êòé ÔºàÊ≤°ÊúâÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÔºâ FileWriter(File file) Âà©Áî®FileÂØπË±°ÊûÑÂª∫ÔºàÈªòËÆ§Ë¶ÜÁõñÂéüÊñáÔºâ FileWriter(File file, Boolean boolean) Âà©Áî®FileÂØπË±°ÊûÑÈÄ†„ÄÅÊòØÂê¶Â∞ÜÂÜÖÂÆπËøΩÂä†Âà∞Êñá‰ª∂Êú´Â∞æÔºàtrueÔºö‰∏çË¶ÜÁõñÔºâ FileWriter(String name) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÂ≠óÁ¨¶‰∏≤ÊûÑÈÄ† FileWriter(String name, Boolean boolean) ÈÄöËøáÊñá‰ª∂Ë∑ØÂæÑÂ≠óÁ¨¶‰∏≤ÊûÑÈÄ†„ÄÅÊòØÂê¶ËøΩÂä†Âà∞Êñá‰ª∂Êú´Â∞æ * Â∏∏Áî®ÊñπÊ≥ï Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé write() ËØªÂèñ write(char) write(String) - write()String str = &quot;abc&quot;;char[] c = str.toCharArray();FileWriter fw = new FileWriter(file);fw.write(97);fw.write(c); Ôºà5ÔºâDemo‚ë† Êñá‰ª∂ÁöÑÂ§çÂà∂import java.io.*;public class OperateFile &#123; public void copyFile(File file, String path)&#123; try &#123; // üîª 0 ÂàõÂª∫ÂØπË±° FileInputStream fis = new FileInputStream(new File(&quot;D://test.txt&quot;)); File newFile = new File(path + &quot;//&quot; + file.gsetName()); FileOutputStream fos = new FileOutputStream(newFile); // üîª 1 ËØªÂèñÊñá‰ª∂ byte[] b = new byte[1024]; // ÈÄöÂ∏∏ÂàõÂª∫ÁöÑÊï∞ÁªÑÔºö1kb-8kb‰πãÈó¥ int count = fis.read(b); // countËÆ∞ÂΩïËØªÂèñÁöÑÊúâÊïàÂ≠óËäÇÊï∞ÔºåËØªÂèñÂà∞byteÊï∞ÁªÑbÈáå // üîª 2 ÂÜôÂÖ•Êñá‰ª∂ while(count!=-1)&#123; // ÂΩìËÉΩËØªÂèñÂà∞ÂÜÖÂÆπÊó∂ // üî∏ÔºàÂÅöÁÇπÊâãËÑöÔºâ fos.write(b, 0, count); // ÂÜôÂÖ•ÊúâÊïàÂ≠óËäÇÊï∞ fos.flush(); count = fis.read(b); // ÊúÄÂêéÂÜçÊ¨°ËØªÂèñÔºåËØªÂèñ‰∏çÂà∞ÂÜÖÂÆπÊó∂Ôºåcount=-1Êó∂ÈÄÄÂá∫whileÂæ™ÁéØ &#125; System.out.println(&quot;Â§çÂà∂ÂÆåÊØïÔºÅ&quot;); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; // ÂÖ≥Èó≠ &#125; &#125; public static void main(String[] args) &#123; OperateFile of = new OperateFile(); of.copyFile(new File(&quot;D://test.txt&quot;), &quot;D://test&quot;); &#125;&#125; ‚ë° Êñá‰ª∂ÁöÑÂä†ÂØÜ// ËØªÂèñÊñá‰ª∂ -&gt; ÂÅöÁÇπÊâãËÑö -&gt; ÂÜôÂÖ•Êñá‰ª∂byte temp = b[0];b[0] = b[1];b[1] = temp; ‚ë¢ Êñá‰ª∂Â§πÁöÑÂ§çÂà∂public void superCopyFile(File file, String newPath)&#123; String oldFilePath = file.getAbsolutePath(); String newFilePath = newPath + oldFilePath.split(&quot;:&quot;)[1]; File[] files = file.listFiles(); // Ëé∑ÂèñÂΩìÂâç‰º†ÈÄíËøõÊù•ÁöÑFileÂØπË±°ÁöÑÊâÄÊúâÂ≠êÂÖÉÁ¥† File newFile = new File(newFilePath); // Âà§Êñ≠ÂΩìÂâç‰º†ÈÄíËøõÊù•ÁöÑfileÊòØ‰∏™Êñá‰ª∂ËøòÊòØ‰∏™Êñá‰ª∂Â§π Ôºà‚ë†isFile isDirectory ‚ë°listFile) if(files!=null)&#123; // üîª 1. Êñá‰ª∂Â§πÔºàÊâçËÉΩÊûÑÊàêÊñá‰ª∂Êï∞ÁªÑÂØπË±°Ôºâ newFile.mkdir(); // ÈÄöËøáÊñ∞ÁöÑfileÂØπË±°Êìç‰Ωú Âú®Á°¨Áõò‰∏äÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂Â§π if(files.length!=0)&#123; // üîª 3. Êñá‰ª∂Â§πÂÜÖÊúâÊñá‰ª∂ for(File f:files)&#123; this.superCopyFile(f, newPath); // üëà ‰ΩøÁî®ÈÄíÂΩí &#125; &#125; System.out.println(newFile.getName() + &quot;Êñá‰ª∂Â§πÂ§çÂà∂ÂÆåÊàêÔºÅ&quot;); &#125; else &#123; // üîª 2. Êñá‰ª∂ ÔºàÊ≤°ÊúâÂ≠êÊñá‰ª∂‰∫ÜÔºâ FileInputStream fis = null; FileOutputStream fos = null; try &#123; fis = new FileInputStream(new File(oldFilePath)); fos = new FileOutputStream(newFile); byte[] b = new byte[1024]; int count = fis.read(b); while(count!=-1)&#123; fos.write(b,0,count); fos.flush(); count = fis.read(b); &#125; System.out.println(newFile.getName() + &quot;Êñá‰ª∂Â§çÂà∂ÂÆåÊàêÔºÅ&quot;); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; finally &#123; if(fis!=null)&#123; try &#123; fis.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; if (fos!=null)&#123; try &#123; fos.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125; &#125;&#125; Ôºà‰∫åÔºâÂØπË±°ÊµÅÔºà1ÔºâÂØπË±°Â∫èÂàóÂåñ%%{ init: { 'themeVariables': { 'fontSize': '12px' } } }%% graph LR subgraph \"Â∫îÁî®Â±Ç1\" A(\"ÂØπË±°\"):::lb end subgraph \"Â∫îÁî®Â±Ç2\" B(\"ÂØπË±°\"):::lb end subgraph \"ÁΩëÁªúÂçèËÆÆ\" C(\"‰∫åËøõÂà∂ÊµÅ\"):::p end A --> |\"[ ËΩ¨Êç¢ ]ObjectOutputStreamFileOutputStream\"|C C --> |\"[ ËøòÂéü ]ObjectInputStreamFileInputStream\"|B style ÁΩëÁªúÂçèËÆÆ fill:#f4e4e9, stroke-dasharray: 3 3, stroke-width: 2px classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#3f3f3f,stroke-dasharray: 3 3, stroke-width: 1px Â∫èÂàóÂåñÔºöÂØπË±°ÁöÑÊåÅ‰πÖÂ≠òÂÇ® ObjectOutputStream Âíå ObjectInputStream ÂàÜÂà´‰∏é FileOutputStream Âíå FileInputStream ‰∏ÄËµ∑‰ΩøÁî®ÔºåÈÄöËøáÂú®ÊµÅ‰∏≠‰ΩøÁî®Êñá‰ª∂ÂèØ‰ª•ÂÆûÁé∞ÂØπË±°ÁöÑÊåÅ‰πÖÂ≠òÂÇ®„ÄÇ ObjectInputStreamÔºöÁî®‰∫éÊÅ¢Â§çÈÇ£‰∫õÂ∑≤ÁªèÂ∫èÂàóÂåñÂ≠òÂÇ®ÁöÑÂØπË±°„ÄÇÁ°Æ‰øù‰ªéÊµÅÂàõÂª∫ÁöÑÂõæÂΩ¢‰∏≠ÊâÄÊúâÂØπË±°ÁöÑÁ±ªÂûã‰∏éJavaËôöÊãüÊú∫‰∏≠ÊòæÁ§∫ÁöÑÁ±ªÁõ∏ÂåπÈÖç„ÄÇ Â∫èÂàóÂåñÁªÜËäÇÔºö ËØªÂÜôÈ°∫Â∫èË¶Å‰∏ÄËá¥ÔºàÂØπË±°Á±ªÂûãËΩ¨Êç¢ÂºÇÂ∏∏Ôºöjava.io.OptionalDataExceptionÔºâ Ë¶ÅÊ±ÇÂøÖÈ°ªÂÆûÁé∞ Serializable Êàñ Externalizable Êé•Âè£ Âú®Â∫èÂàóÂåñÁ±ª‰∏≠Ê∑ªÂä† SerialVersionUIDÔºåÊèêÈ´òÁâàÊú¨ÂÖºÂÆπÊÄß Â∫èÂàóÂåñÂØπË±°Êó∂ÈªòËÆ§ÊâÄÊúâÂ±ûÊÄßÈÉΩÂ∫èÂàóÂåñÔºåÈô§ static Âíå transit Â∫èÂàóÂåñÂèØÁªßÊâøÊÄßÔºåËã•ÊüêÁ±ªÂÆûÁé∞Â∫èÂàóÂåñÔºåÂÖ∂Â≠êÁ±ª‰πüÈªòËÆ§ÂÆûÁé∞Â∫èÂàóÂåñ Ôºà2ÔºâÊñπÊ≥ï readObject() readObject()ÔºöË¥üË¥£ËØªÂèñÈÄöËøáÂØπÂ∫îÁöÑ writeObject() ÊñπÊ≥ïÂÜôÂÖ•ÁöÑÊï∞ÊçÆÔºå‰∏∫ÁâπÂÆöÁ±ªËØªÂèñÂíåÊÅ¢Â§çÂØπË±°ÁöÑÁä∂ÊÄÅ„ÄÇ ÊÅ¢Â§çÁä∂ÊÄÅÔºö‰ªé ObjectInputStream ËØªÂèñÊï∞ÊçÆÂπ∂Â∞ÜÂÖ∂ÂàÜÈÖçÁªôÂØπË±°ÁöÑÈÄÇÂΩìÂ≠óÊÆµ„ÄÇ ËØªÂèñÂêÑÁßçÊï∞ÊçÆÁ±ªÂûãÁöÑÂáΩÊï∞ // ‰∏é ObjectOutputStream write()Áõ∏ÂØπÂ∫îboolean readBoolean(); // ËØªÂèñ‰∏Ä‰∏™booleanÂÄºbyte readByte(); // ËØªÂèñ‰∏Ä‰∏™8‰ΩçÁöÑÂ≠óËäÇchar readChar(); // ËØªÂèñ‰∏Ä‰∏™16‰ΩçÁöÑcharÂÄºdouble readDouble(); // ËØªÂèñ‰∏Ä‰∏™ 64 ‰ΩçÁöÑdoubleÂÄºfloat readFloat(); // ËØªÂèñ‰∏Ä‰∏™ 32 ‰ΩçÁöÑfloatÂÄºint readInt(); // ËØªÂèñ‰∏Ä‰∏™ 32 ‰ΩçÁöÑintÂÄºlong readLong(); // ËØªÂèñ‰∏Ä‰∏™ 64 ‰ΩçÁöÑlongÂÄºshort readShort(); // ËØªÂèñ‰∏Ä‰∏™ 16 ‰ΩçÁöÑshortÂÄº// ‰ªéÂ∫èÂàóÂåñÊµÅËØªÂèñÁ±ªÊèèËø∞Á¨¶protected ObjectStreamClass readClassDescriptor(); // ÊåâÂêçÁß∞‰ªéÊµÅ‰∏≠ËØªÂèñÊåÅ‰πÖÂ≠óÊÆµÂπ∂‰ΩøÂÖ∂ÂèØÁî®ObjectInputStream.GetField readFields();// ÂÖÅËÆ∏Â≠êÁ±ªËØªÂèñÂπ∂È™åËØÅÂÆÉ‰ª¨Ëá™Â∑±ÁöÑÊµÅÂ§¥ÈÉ®protected void readStreamHeader();// ‰ªé ObjectInputStream ËØªÂèñ‚ÄúÈùûÂÖ±‰∫´‚ÄùÂØπË±°Object readUnshared(); Ôºà3ÔºâÁ§∫‰æã‚ë† ÂØπË±°Â∫èÂàóÂåñ Person Á±ªÔºö public class Person implements java.io.Serializable &#123; // üîπ ‰ΩøÁî®SerializableÊù•ÂÆûÁé∞Â∫èÂàóÂåñÔºåËÆ©ÁõÆÊ†áÁ±ªÂÆûÁé∞SerializableÊ†áËÆ∞Êé•Âè£ private String name; private int age; // Ê≥®ÊÑèÊ≠§Â§ÑÊ≤°ÊúâÊèê‰æõÊó†ÂèÇÊï∞ÁöÑÊûÑÈÄ†Âô®ÔºöüîªÂèçÂ∫èÂàóÂåñÊú∫Âà∂Êó†È°ªÈÄöËøáÊûÑÈÄ†Âô®Êù•ÂàùÂßãÂåñJavaÂØπË±° public Person(String name , int age) &#123; System.out.println(&quot;ÊúâÂèÇÊï∞ÁöÑÊûÑÈÄ†Âô®&quot;); this.name=name; this.age=age; &#125; // ÁúÅÁï•name‰∏éageÁöÑsetterÂíågetterÊñπÊ≥ï ...&#125; ‰ΩøÁî® ObjectOutputStream Â∞Ü‰∏Ä‰∏™PersonÂØπË±°ÂÜôÂÖ•Á£ÅÁõòÊñá‰ª∂Ôºö public class WriteObject&#123; public static void main(String[] args) &#123; try( // üîπÔºà1ÔºâÂàõÂª∫‰∏Ä‰∏™ObjectOutputStreamËæìÂá∫ÊµÅ ObjectOutputStream oos = new ObjectOutputStream( new FileOutputStream(&quot;object.txt&quot;))) // Ëøô‰∏™ËæìÂá∫ÊµÅÊòØ‰∏Ä‰∏™Â§ÑÁêÜÊµÅÔºåÊâÄ‰ª•ÂøÖÈ°ªÂª∫Á´ãÂú®ÂÖ∂‰ªñËäÇÁÇπÊµÅÔºàÊñá‰ª∂ËæìÂá∫ÊµÅÔºâÁöÑÂü∫Á°Ä‰πã‰∏ä &#123; Person per = new Person(&quot;Â≠ôÊÇüÁ©∫&quot;, 500); // üîπÔºà2ÔºâË∞ÉÁî®ObjectOutputStreamÂØπË±°ÁöÑwriteObject()ÊñπÊ≥ïËæìÂá∫ÂèØÂ∫èÂàóÂåñÂØπË±° oos.writeObject(per); // Â∞ÜperÂØπË±°ÂÜôÂÖ•ËæìÂá∫ÊµÅ &#125; catch (IOException ex)&#123; ex.printStackTrace(); &#125; &#125; &#125;// ËøêË°å‰∏äÈù¢Á®ãÂ∫èÔºåÂ∞Ü‰ºöÁúãÂà∞ÁîüÊàê‰∫Ü‰∏Ä‰∏™object.txtÊñá‰ª∂ÔºåËØ•Êñá‰ª∂ÁöÑÂÜÖÂÆπÂ∞±ÊòØPersonÂØπË±°„ÄÇ ‚ë° ÂØπË±°ÂèçÂ∫èÂàóÂåñ ‰ªéÂàöÂàöÁîüÊàêÁöÑobject.txtÊñá‰ª∂‰∏≠ËØªÂèñPersonÂØπË±°Ôºö public class ReadObject &#123; public static void main(String[] args) &#123; try( // üîπÔºà1ÔºâÂàõÂª∫‰∏Ä‰∏™ObjectInputStreamËæìÂÖ•ÊµÅ ObjectInputStream ois=new ObjectInputStream( new FileInputStream(&quot;object.txt&quot;))) // Ëøô‰∏™ËæìÂÖ•ÊµÅÊòØ‰∏Ä‰∏™Â§ÑÁêÜÊµÅÔºåÊâÄ‰ª•ÂøÖÈ°ªÂª∫Á´ãÂú®ÂÖ∂‰ªñËäÇÁÇπÊµÅÁöÑÂü∫Á°Ä‰πã‰∏ä„ÄÇ &#123; // üîπÔºà2Ôºâ‰ªéËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñ‰∏Ä‰∏™JavaÂØπË±°ÔºåÂπ∂Â∞ÜÂÖ∂Âº∫Âà∂Á±ªÂûãËΩ¨Êç¢‰∏∫PersonÁ±ª Person p = (Person)ois.readObject(); // Ë∞ÉÁî®ObjectInputStreamÂØπË±°ÁöÑreadObject() System.out.println(&quot;ÂêçÂ≠ó‰∏∫Ôºö&quot; + p.getName() + &quot;\\nÂπ¥ÈæÑ‰∏∫Ôºö&quot; + p.getAge()); &#125; catch (Exception ex) &#123; ex.printStackTrace(); &#125; &#125;&#125; Ôºà‰∏âÔºâËΩ¨Êç¢ÊµÅËΩ¨Êç¢ÊµÅÔºàInputStreamReader„ÄÅOutputStreamWriterÔºâÔºåReaderÁöÑÂ≠êÁ±ªÔºåÂèØ‰ª•Â∞Ü InputStream ÂåÖË£ÖÊàê Reader„ÄÇÁî®‰∫éÂÆûÁé∞Â∞ÜÂ≠óËäÇÊµÅËΩ¨Êç¢ÊàêÂ≠óÁ¨¶ÊµÅ„ÄÇ‚Äî‚Äî ÂèØËß£ÂÜ≥Êñá‰ª∂‰π±Á†ÅÈóÆÈ¢ò„ÄÇ DemoÔºöËé∑ÂèñÈîÆÁõòËæìÂÖ• /* ËØ•Á®ãÂ∫èÂ∞Ü System.in ÂåÖË£ÖÊàê BufferedReaderÔºå BufferedReaderÊµÅÂÖ∑ÊúâÁºìÂÜ≤ÂäüËÉΩÔºåÂÆÉÂèØ‰ª•‰∏ÄÊ¨°ËØªÂèñ‰∏ÄË°åÊñáÊú¨Ôºö ‰ª•Êç¢Ë°åÁ¨¶‰∏∫Ê†áÂøóÔºåËã•Ê≤°ÊúâËØªÂà∞Êç¢Ë°åÁ¨¶ÔºåÂàôÁ®ãÂ∫èÈòªÂ°ûÔºåÁ≠âÂà∞ËØªÂà∞Êç¢Ë°åÁ¨¶‰∏∫Ê≠¢„ÄÇ*/public class KeyinTest &#123; public static void main(String[] args) &#123; try&#123; // Â∞Ü Sytem.in ÂØπË±°ËΩ¨Êç¢Êàê Reader ÂØπË±° InputStreamReader reader = new InputStreamReader(System.in); // Â∞ÜÊôÆÈÄöÁöÑReaderÂåÖË£ÖÊàêBufferedReader BufferedReader br = new BufferedReader(reader)) String buffer = null; // ÈááÁî®Âæ™ÁéØÊñπÂºèÊù•ÈÄêË°åÂú∞ËØªÂèñ while ((buffer = br.readLine()) !=null) &#123; //Â¶ÇÊûúËØªÂèñÁöÑÂ≠óÁ¨¶‰∏≤‰∏∫&quot;exit&quot;ÔºåÂàôÁ®ãÂ∫èÈÄÄÂá∫ if (buffer.equals(&quot;exit&quot;)) &#123; System.exit(1); &#125; //ÊâìÂç∞ËØªÂèñÁöÑÂÜÖÂÆπ System.out.println(&quot;ËæìÂÖ•ÂÜÖÂÆπ‰∏∫:&quot; + buffer); &#125; &#125; catch (IOException ioe) &#123; ioe.printStackTrace(); &#125; &#125;&#125; InputStreamReader Java‰ΩøÁî® System.in ‰ª£Ë°®Ê†áÂáÜËæìÂÖ•ÔºàÂç≥ÈîÆÁõòËæìÂÖ•ÔºâÔºå‰ΩÜËøô‰∏™Ê†áÂáÜËæìÂÖ•ÊµÅÊòØ InputStream Á±ªÁöÑÂÆû‰æãÔºå‰ΩøÁî®‰∏çÂ§™Êñπ‰æøÔºå‰∏îÈîÆÁõòËæìÂÖ•ÂÜÖÂÆπÈÉΩÊòØÊñáÊú¨ÂÜÖÂÆπÔºåÊâÄ‰ª•ÂèØÁî® InputStreamReader Â∞ÜÂÖ∂ËΩ¨Êç¢ÊàêÂ≠óÁ¨¶ËæìÂÖ•ÊµÅ„ÄÇ BufferedReaderÔºö Áî±‰∫é BufferedReader ÂÖ∑Êúâ‰∏Ä‰∏™ readLine() ÊñπÊ≥ïÔºåÂèØ‰ª•ÈùûÂ∏∏Êñπ‰æøÂú∞‰∏ÄÊ¨°ËØªÂÖ•‰∏ÄË°åÂÜÖÂÆπÔºåÊâÄ‰ª•ÁªèÂ∏∏ÊääËØªÂèñÊñáÊú¨ÂÜÖÂÆπÁöÑËæìÂÖ•ÊµÅÂåÖË£ÖÊàê BufferedReaderÔºåÁî®Êù•Êñπ‰æøÂú∞ËØªÂèñËæìÂÖ•ÊµÅÁöÑÊñáÊú¨ÂÜÖÂÆπ„ÄÇ üî∏ Âè™ÊúâÂ≠óËäÇËΩ¨Â≠óÁ¨¶ÔºöÂõ†‰∏∫Â≠óÁ¨¶ÊµÅÊØîÂ≠óËäÇÊµÅÊìç‰ΩúÊõ¥Êñπ‰æø ÔºàÂõõÔºâÁÆ°ÈÅìÊµÅÂÆûÁé∞‰∫ÜpipeÁöÑÊ¶ÇÂøµÔºå‰∏ªË¶ÅÂú®Á∫øÁ®ã‰∏≠‰ΩøÁî®Ôºö‰∏Ä‰∏™Á∫øÁ®ãÂèØ‰ª•ÈöèÊó∂ÂêëÁÆ°ÈÅìËæìÂá∫ÊµÅÂèëÈÄÅÊï∞ÊçÆÔºåÂè¶‰∏Ä‰∏™Á∫øÁ®ãÈöèÊó∂‰ªéÁÆ°ÈÅìËæìÂÖ•ÊµÅËØªÂèñÊï∞ÊçÆÔºåÂÆûÁé∞‰∏§‰∏™Á∫øÁ®ãÈó¥ÁöÑÈÄö‰ø°ÔºàÂºÇÊ≠•‰º†ËæìÊï∞ÊçÆÔºâ„ÄÇ ËæìÂÖ•ÊµÅÂíåËæìÂá∫ÊµÅÂøÖÈ°ªÁªìÂêà‰ΩøÁî®ÔºöËã•ÂêëËøûÊé•ÁÆ°ÈÅìËæìÂá∫ÊµÅÊèê‰æõÊï∞ÊçÆÂ≠óËäÇÁöÑÁ∫øÁ®ãÔºàÂèëÈÄÅÁ´ØÔºâ‰∏çÂ≠òÂú®ÔºåÂàôËÆ§‰∏∫ËØ•ÁÆ°ÈÅìÂ∑≤ÊçüÂùè„ÄÇ üìå Ê≥®ÊÑèÔºöÊï∞ÊçÆÁöÑ‰º†ËæìÊñπÂêë„ÄÇ Ôºà1ÔºâPipedInputStreamÁÆ°ÈÅìËæìÂÖ•ÊµÅÔºàÊé•Êî∂Á´ØÔºâÂ∫îËØ•ËøûÊé•Âà∞ÁÆ°ÈÅìËæìÂá∫ÊµÅÔºàÂèëÈÄÅÁ´ØÔºâ„ÄÇ graph LR A[[\"Á∫øÁ®ã1\"]] B[[\"Á∫øÁ®ã2\"]] pi([\"PipedOutputStream\"]):::lp po([\"PipedInputStreamÊèê‰æõË¶ÅÂÜôÂÖ•ÁÆ°ÈÅìËæìÂá∫ÊµÅÁöÑ\"]):::g A ==> |\"ÂèëÈÄÅ\"|pi pi -.-> |\"ÔΩúÁºìÂÜ≤Âå∫\"|po po ==> |\"ËØªÂèñ\"|B subgraph \"ÁÆ°ÈÅìËæìÂá∫ÊµÅÔΩúÁÆ°ÈÅìËæìÂÖ•ÊµÅ\" pi po end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#3f3f3f,stroke-dasharray: 3 3, stroke-width: 1px * ÁºìÂ≠òÂå∫ÔºöÁÆ°ÈÅìËæìÂÖ•ÊµÅÂåÖÂê´‰∏Ä‰∏™ÁºìÂ≠òÂå∫ÔºåÂèØÂú®ÁºìÂ≠òÂå∫ÈôêÂÆöÁöÑËåÉÂõ¥ÂÜÖÂ∞ÜËØªÊìç‰ΩúÂíåÂÜôÊìç‰ΩúÂàÜÁ¶ªÂºÄ„ÄÇüî∫ ‰∏çÂª∫ËÆÆÂØπËøô‰∏§‰∏™ÂØπË±°Â∞ùËØï‰ΩøÁî®Âçï‰∏™Á∫øÁ®ãÔºåÂõ†‰∏∫ËøôÊ†∑ÂèØËÉΩÊ≠ªÈîÅÁ∫øÁ®ã„ÄÇ * ËæìÂÖ•ËæìÂá∫ÊµÅÁöÑËøûÊé•ÊñπÊ≥ïÔºà1ÔºâÔºöÊûÑÈÄ†ÊñπÊ≥ï // ÊûÑÈÄ†ÊñπÊ≥ïÔºö// ‚ë† ‰ª•ÁÆ°ÈÅìËæìÂá∫ÊµÅÁöÑÂÆû‰æã‰Ωú‰∏∫ËæìÂÖ• (‰ΩøÂÖ∂ËøûÊé•Âà∞srcÊåáÂÆöÁöÑÁÆ°ÈÅìÂ≠óËäÇËæìÂá∫ÊµÅ„ÄÇ) PipedInputStream(PipedOutputStream src); // ‚ë° ÂàõÂª∫‰∏Ä‰∏™Â∞öÊú™ËøûÊé•ÁöÑPipedInputStreamPipedInputStream(); * ËæìÂÖ•ËæìÂá∫ÊµÅÁöÑËøûÊé•ÊñπÊ≥ïÔºà2ÔºâÔºöconnect() // Ë∞ÉÁî®PipedInputStreamÁ±ªÁöÑconnect()Âª∫Á´ã‰∏éËæìÂá∫ÊµÅÁöÑËøûÊé•Ôºö‰ΩøÊ≠§ÁÆ°ÈÅìËæìÂÖ•ÊµÅËøûÊé•Âà∞ÁÆ°ÈÅìËæìÂá∫ÊµÅsrcvoid connect(PipedOutputStream src); * Â∏∏Áî®ÊñπÊ≥ïÔºö public int avaliable(); // ËøîÂõûÂèØËØªÂèñÁöÑÂ≠óËäÇ‰π¶public void close(); // ÂÖ≥Èó≠ÁÆ°ÈÅìËæìÂÖ•ÊµÅÂπ∂ÈáäÊîæÁ≥ªÁªüËµÑÊ∫êpublic int read(); // ‰ªéÁÆ°ÈÅìËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñ‰∏ã‰∏Ä‰∏™Â≠óËäÇÊï∞ÊçÆpublic int read(byte[] b, int off, int len); // ‰ªéÁÆ°ÈÅìËæìÂÖ•ÊµÅËØªÂèñlenÂ≠óËäÇÊï∞ÊçÆÂà∞Êï∞ÁªÑprotected void receive(int b); // ‰ªéÁÆ°ÈÅì‰∏≠Êé•Âèó1Â≠óËäÇÊï∞ÊçÆpublic void connect(PipedOutputStream src); // ËøûÊé•Âà∞ÊåáÂÆöËæìÂá∫ÊµÅÔºåÁÆ°ÈÅìËæìÂÖ•ÊµÅÂ∞Ü‰ªéËØ•ËæìÂá∫ÊµÅÊé•ÂèóÊï∞ÊçÆ * Á§∫‰æãÔºö /** * ÁÆÄÂçïÂú∞Âª∫Á´ãÊµÅÈìæÊé•Ôºàüìå Ê≥®ÊÑèÔºöËøôÊ†∑ÂÆûÈôÖ‰∏äÊ≤°ÊúâÊÑè‰πâÔºåÈÄöÂ∏∏Â∫îÁî®‰∫éÁ∫øÁ®ãÈó¥ÈÄö‰ø°Ôºâ */public class TestPipedInputStream &#123; public static void main(String[] args) throws IOException &#123; try &#123; // üîπ ÂàõÂª∫ÁÆ°ÈÅìËæìÂá∫ÊµÅ PipedOutputStream os = new PipedOutputStream(); // üîπ ÂàõÂª∫ËæìÂÖ•ÊµÅ PipedInputStream is = new PipedInputStream(os); // üî∏ ‰ªéËæìÂá∫ÊµÅÂÜôÂÖ•Êï∞ÊçÆ byte[] b = new byte[3]; b[0] = 100; b[1] = 101; b[2] = 102; os.write(b); // üî∏ ‰ªéËæìÂÖ•ÊµÅËØªÂèñÊï∞ÊçÆ while (is.available() Ôºû 0) &#123; int c = is.read(); System.out.print((char)c); &#125; // üîπ ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ is.close(); //ÂÖ≥Èó≠ËæìÂá∫ÊµÅ os.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125; Ôºà2ÔºâPipedOutputStreamPipedOutputStream ÂèØ‰ª•Â∞ÜÁÆ°ÈÅìËæìÂá∫ÊµÅËøûÊé•Âà∞ÁÆ°ÈÅìËæìÂÖ•ÊµÅÊù•ÂàõÂª∫ÈÄö‰ø°ÁÆ°ÈÅì„ÄÇÁÆ°ÈÅìËæìÂá∫ÊµÅÊòØÊåá‰∏Ä‰∏™ÈÄö‰ø°ÁÆ°ÈÅìÁöÑÂèëÈÄÅÁ´ØÔºåÂÆÉÂøÖÈ°ª‰∏é‰∏Ä‰∏™‰Ωú‰∏∫Êé•Êî∂Á´ØÁöÑPipedInputStreamÂØπË±°Áõ∏Ëøû„ÄÇ graph LR A[[\"Á∫øÁ®ã1\"]] B[[\"Á∫øÁ®ã2\"]] pi([\"PipedOutputStream\"]):::p po([\"PipedInputStream\"]):::lg A ==> |\"ÂèëÈÄÅ\"|pi pi -.-> |\"ÔΩúÁºìÂÜ≤Âå∫\"|po po ==> |\"ËØªÂèñ\"|B subgraph \"ÁÆ°ÈÅìËæìÂá∫ÊµÅÔΩúÁÆ°ÈÅìËæìÂÖ•ÊµÅ\" pi po end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#3f3f3f,stroke-dasharray: 3 3, stroke-width: 1px * Á§∫‰æãÔºö - ÂèëÈÄÅËÄÖÁ∫øÁ®ãSenderÔºöÂàõÂª∫‰∫Ü‰∏Ä‰∏™ËæìÂá∫ÊµÅ PipedOutputStream ÁöÑÂØπË±° outÔºåÂú®ËØ•Á∫øÁ®ãÁöÑ‰∏ªÂáΩÊï∞ run() ‰∏≠Ë∞ÉÁî® out ÁöÑ write() ÂÜôÂÖ•Êï∞ÊçÆ„ÄÇ - Êé•Êî∂ËÄÖÁ∫øÁ®ãReceiverÔºöÂàõÂª∫‰∫Ü‰∏Ä‰∏™ËæìÂÖ•ÊµÅ PipedInputStream ÁöÑÂØπË±° inÔºåÂú®ËØ•Á∫øÁ®ãÁöÑ‰∏ªÂáΩÊï∞ run() ‰∏≠Ë∞ÉÁî® in ÁöÑ read() ËØªÂèñÊï∞ÊçÆ„ÄÇ /** * ÁÆ°ÈÅìËæìÂá∫ÊµÅ‰∏éÁÆ°ÈÅìËæìÂÖ•ÊµÅÂú®Â§öÁ∫øÁ®ã‰∏≠ÁöÑÂ∫îÁî®Ôºö * - SenderÔºöÁÆ°ÈÅìËæìÂá∫ÊµÅÔºàPipedOutputStreamÔºâÁöÑÁã¨Á´ãÁ∫øÁ®ãÁ±ª * - ReceiverÔºöÁÆ°ÈÅìËæìÂÖ•ÊµÅÔºàPipedInputStreamÔºâÁöÑÁã¨Á´ãÁ∫øÁ®ãÁ±ª */public class TestPipedOutputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫ÂèëÈÄÅËÄÖÁ∫øÁ®ã Sender t1 = new Sender(); PipedOutputStream out = t1.getOutputStream(); // üîπ ÂàõÂª∫Êé•Êî∂ËÄÖÁ∫øÁ®ã Receiver t2 = new Receiver(); PipedInputStream in = t2.getInputStream(); // üî∏ ËøûÊé•ÁÆ°ÈÅìÊµÅ out.connect(in); // üîπ ÂêØÂä®ÂèëÈÄÅËÄÖÁ∫øÁ®ãÂíåÊé•Êî∂ËÄÖÁ∫øÁ®ã new Thread(t1).start(); new Thread(t2).start(); // Âú®Ëøô‰∏§‰∏™Á∫øÁ®ãÈÉΩÂêØÂä®ÂêéÂ∞±‰ºöËøêË°åÂêÑËá™ÁöÑrun()‰∏ªÂáΩÊï∞Ôºå // ‰ªéout‰∏≠ÂÜôÂÖ•ÁöÑÊï∞ÊçÆÂ∞±‰ºö‰º†ÈÄíÂà∞in‰∏≠ÔºåÂÆûÁé∞Êï∞ÊçÆÁöÑÂºÇÊ≠•‰º†Ëæì„ÄÇ &#125; catch (Exception e) &#123; &#125; &#125; &#125;//Ôºà1ÔºâÂèëÈÄÅËÄÖÁ∫øÁ®ãÁ±ªclass Sender extends Thread &#123; private PipedOutputStream out = new PipedOutputStream(); public PipedOutputStream getOutputStream() &#123; return out; &#125; public void run() &#123; // üîπ ÂèëÈÄÅÂ≠óÁ¨¶‰∏≤ String s = new String(&quot;hello,receiver,how are you&quot;); try &#123; out.write(s.getBytes()); out.close(); &#125; catch (IOException e) &#123; System.out.println(e.getMessage()); &#125; &#125;&#125;//Ôºà2ÔºâÊé•Êî∂ËÄÖÁ∫øÁ®ãclass Receiver extends Thread &#123; private PipedInputStream in = new PipedInputStream(); public PipedInputStream getInputStream() &#123; return in; &#125; public void run() &#123; // üîπ Êé•Êî∂Â≠óÁ¨¶‰∏≤ String s = null; byte[] buf = new byte[1024]; try &#123; int len = in.read(buf); s = new String(buf, 0, len); System.out.println(&quot;from:\\n&quot; + s); in.close(); &#125; catch (IOException e) &#123; System.out.println(e.getMessage()); &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂç≥ÂèØÂÆûÁé∞ÂèëÈÄÅËÄÖÁ∫øÁ®ãÂæÄÊé•Êî∂ËÄÖÁ∫øÁ®ãÂèëÈÄÅÊï∞ÊçÆÁöÑÂäüËÉΩÔºå// ÂÆÉ‰ª¨ÂàÜÂà´‰ΩøÁî®‰∫ÜÁÆ°ÈÅìËæìÂÖ•ÊµÅÂíåËæìÂá∫ÊµÅ„ÄÇ Ôºà‰∫îÔºâÂ∫èÂàóÊµÅSequenceInputStream Á±ªÂÖÅËÆ∏ËøûÊé•Â§ö‰∏™ InputStream ÊµÅÔºåË°®Á§∫ÂÖ∂‰ªñËæìÂÖ•ÊµÅÁöÑÈÄªËæë‰∏≤ËÅî„ÄÇÔºà‰∏≤Ë°åËæìÂÖ•ÊµÅÔºâ %%{ init: { 'themeVariables': { 'fontSize': '12px' } } }%% graph A([InputStream s1]):::lp B([InputStream s2]):::lp C([InputStream s3]):::lp D([InputStream s1]):::lb E([InputStream s2]):::lb A --> B --> C subgraph \"Ôºà2Ôºâ SequenceInputStream(e)\" subgraph \"Enumeration ‚ü®? extends InputStream‚ü© e\" A B C end end subgraph \"Ôºà1Ôºâ SequenceInputStream(s1, s2)\" D --> E end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#3f3f3f,stroke-dasharray: 3 3, stroke-width: 1px ‰∏≤ËÅîËæìÂÖ•Ê∫êÔºöÂÆÉ‰ªéËæìÂÖ•ÊµÅÁöÑÊúâÂ∫èÈõÜÂêàÂºÄÂßãÔºå‰ªéÁ¨¨‰∏Ä‰∏™ËæìÂÖ•ÊµÅÂºÄÂßãËØªÂèñÔºåËØªÂà∞Êñá‰ª∂Êú´Â∞æÔºåÊé•ÁùÄ‰ªéÁ¨¨‰∫å‰∏™ËæìÂÖ•ÊµÅËØªÂèñÔºå‰æùÊ¨°Á±ªÊé®ÔºåÁõ¥Âà∞Âà∞ËææÂåÖÂê´ÁöÑÊúÄÂêé‰∏Ä‰∏™ËæìÂÖ•ÊµÅÁöÑÊñá‰ª∂Êú´Â∞æ‰∏∫Ê≠¢„ÄÇ * ÊûÑÈÄ†ÂáΩÊï∞Ôºö //Ôºà1Ôºâ‰∏≤ËÅîÊï∞ÊçÆÊ∫êSequenceInputStream(InputStream s1,InputStream s2); // Â∞ÜÊåâÈ°∫Â∫èËØªÂèñËøô‰∏§‰∏™ÂèÇÊï∞ÔºåÂÖàËØªÂèñs1ÔºåÁÑ∂ÂêéËØªÂèñs2 //Ôºà2Ôºâ‰∏≤ËÅî Enumeration Á±ªÂûãÁöÑÊï∞ÊçÆÊ∫êÂàóË°®SequenceInputStream(EnumerationÔºú?extends InputStreamÔºûe); * DemoÔºö /** Â∞Ü‰∏§‰∏™Êñá‰ª∂Êï∞ÊçÆÊ∫ê‰∏≤ËÅîËµ∑Êù•ÔºåÂàõÂª∫‰∏Ä‰∏™SequenceInputStreamÁ±ªÂûãÁöÑÊï∞ÊçÆÊ∫êÂπ∂ËæìÂá∫Êñá‰ª∂ÂÜÖÂÆπÂà∞ÊéßÂà∂Âè∞‰∏≠„ÄÇ */public class TestSequenceInputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫ËæìÂÖ•Ê∫êÊï∞ÁªÑ // * ‰∏≤ËÅîÁöÑÊï∞ÊçÆÊ∫êÂàóË°®‰∏≠ÔºåÂèØ‰ª•ÂåÖÂê´ÂêÑÁßçInputStreamÂÆûÁé∞Á±ªÁöÑÊï∞ÊçÆÊµÅÂØπË±°„ÄÇ FileInputStream fis1 = new FileInputStream(&quot;D:/demo/test.txt&quot;); FileInputStream fis2 = new FileInputStream(&quot;D:/demo/test2.txt&quot;); VectorÔºúFileInputStreamÔºû vector = new VectorÔºúFileInputStreamÔºû(); vector.add(fis1); vector.add(fis2); EnumerationÔºúFileInputStreamÔºû e = vector.elements(); // üî∏ ÂàõÂª∫Â∫èÂàóËæìÂÖ•Ê∫ê SequenceInputStream is = new SequenceInputStream(e); // üîπ ‰ªéËæìÂÖ•ÊµÅËØªÂèñÊï∞ÊçÆ while (is.available() Ôºû 0) &#123; int c = is.read(); System.out.print((char)c); &#125; // üîπ ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ is.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125; ÔºàÂÖ≠ÔºâËøáÊª§ÊµÅËøáÊª§ÊµÅÁî®‰∫éÊâ©Â±ïÂÖ∂‰ªñÊµÅÔºåÂ¢ûÂº∫ÂÖ∂ÂäüËÉΩ„ÄÇÂÆÉÂåÖÂê´ÂÖ∂‰ªñ‰∏Ä‰∫õËæìÂÖ•/ËæìÂá∫ÊµÅÔºåÂ∞ÜËøô‰∫õÊµÅÁî®ÂÅöÂÖ∂Âü∫Êú¨Êï∞ÊçÆÊ∫êÔºåÂÆÉÂèØ‰ª•Áõ¥Êé•‰º†ËæìÊï∞ÊçÆÊàñÊèê‰æõ‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÂäüËÉΩ„ÄÇ ‰ΩÜÊòØÔºå‰æãÂ¶Ç FilterInputStream Á±ªÊú¨Ë∫´Âè™ÊòØÁÆÄÂçïÂú∞ÈáçÂÜôÈÇ£‰∫õÂ∞ÜÊâÄÊúâËØ∑Ê±Ç‰º†ÈÄíÁªôÊâÄÂåÖÂê´ËæìÂÖ•ÊµÅÁöÑ InputStream ÁöÑÊâÄÊúâÊñπÊ≥ï„ÄÇÂõ†Ê≠§ÔºåËøô‰∏™Á±ªÊú¨Ë∫´ÂØπ‰∫éÊï∞ÊçÆÊµÅÂπ∂Ê≤°Êúâ‰ªÄ‰πà‰ΩúÁî®„ÄÇÊâÄ‰ª•ÈÄöÂ∏∏Âπ∂‰∏çÂçïÁã¨‰ΩøÁî®ÂÆÉ‰ª¨ÔºåËÄåÊòØ‰ΩøÁî®ÂÆÉ‰ª¨ÁöÑÂ≠êÁ±ª„ÄÇ Ôºà‰∏ÉÔºâÁºìÂÜ≤ÊµÅÁºìÂÜ≤ÊµÅ‰∏ªË¶Å‰∏∫ËæìÂÖ•/ËæìÂá∫ÊµÅÁºìÂ≠òÊï∞ÊçÆÔºåÂõ†Ê≠§ÈúÄË¶Å‰ΩøÁî® flush() ÊñπÊ≥ïÂº∫Âà∂Â∞ÜÁºìÂ≠ò‰∏≠ÁöÑÊï∞ÊçÆÁúüÊ≠£ÂÜôÂÖ•Âà∞ËæìÂá∫ÊµÅ‰∏≠„ÄÇÔºàËæìÂÖ•ÊµÅÂØπË±°ÁöÑÂÖ≥Èó≠È°∫Â∫èÂøÖÈ°ª‰∏éÂÖ∂ÂàõÂª∫ÁöÑÈ°∫Â∫èÁõ∏ÂèçÔºåÂêéÈù¢ÁöÑËæìÂá∫ÊµÅ‰πüÊòØÂ¶ÇÊ≠§„ÄÇÔºâ Ôºà1ÔºâBufferedInpuStreamBufferedInputStream‰∏∫Âè¶‰∏Ä‰∏™ËæìÂÖ•ÊµÅÊ∑ªÂä†‰∏Ä‰∫õÂäüËÉΩÔºåÂç≥ÁºìÂ≠òËæìÂÖ•ÁöÑËÉΩÂäõ„ÄÇ Âú®ÂàõÂª∫BufferedInputStreamÊó∂Ôºå‰ºöÂàõÂª∫‰∏Ä‰∏™ÂÜÖÈÉ®ÁºìÂ≠òÂå∫Êï∞ÁªÑ„ÄÇÂú®ËØªÂèñÊàñË∑≥ËøáÊµÅ‰∏≠ÁöÑÂ≠óËäÇÊó∂ÔºåÂèØÊ†πÊçÆÈúÄË¶Å‰ªéÂåÖÂê´ÁöÑËæìÂÖ•ÊµÅÂÜçÊ¨°Â°´ÂÖÖËØ•ÂÜÖÈÉ®ÁºìÂ≠òÂå∫Ôºå‰∏ÄÊ¨°Â°´ÂÖÖÂ§ö‰∏™Â≠óËäÇ„ÄÇ * DemoÔºö public class TestBufferedInputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπÂàõÂª∫ËæìÂÖ•ÊµÅ FileInputStream is = new FileInputStream(&quot;D:/demo/test.txt&quot;); BufferedInputStream bis = new BufferedInputStream(is); // üîπ‰ªéËæìÂÖ•ÊµÅËØªÂèñÊï∞ÊçÆ while (bis.available() Ôºû 0) &#123; int c = bis.read(); System.out.print((char)c); &#125; // üîπÂÖ≥Èó≠ËæìÂÖ•ÊµÅ bis.close(); is.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125; Ôºà2ÔºâBufferedOutputStreamBufferedOutputStream ÁªßÊâøËá™ FilterOutputStreamÔºåÂÆÉ‰∏é BufferedInputStream Áõ∏ÂØπÂ∫îÔºå‰∏ªË¶Å‰∏∫ËæìÂá∫ÊµÅÂÅöÁºìÂ≠ò„ÄÇ * demo /** Â∞ÜÊñá‰ª∂ËæìÂÖ•ÊµÅÂØπË±°osËΩ¨Êç¢‰∏∫ÁºìÂ≠òËæìÂá∫ÊµÅ */public class TestBufferedOutputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπÂàõÂª∫ËæìÂá∫ÊµÅ FileOutputStream os = new FileOutputStream(&quot;D:/demo/test.txt&quot;); BufferedOutputStream bos = new BufferedOutputStream(os); // üîπÂÜôÂÖ•Êï∞ÁªÑÊï∞ÊçÆ byte[] buf = new byte[3]; buf[0] = 100; buf[1] = 101; buf[2] = 102; bos.write(buf); // üîπÂÖ≥Èó≠ËæìÂá∫ÊµÅ bos.close(); os.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂ∞Ü‰ºöÂæÄÊñá‰ª∂‰∏≠ÂÜôÂÖ•3‰∏™Â≠óÁ¨¶‚Äúdef‚Äù„ÄÇ Ôºà3ÔºâBufferedReaderBufferedReader ‰ªéÂ≠óÁ¨¶ËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÊñáÊú¨ÔºåÁºìÂ≠òÂêÑ‰∏™Â≠óÁ¨¶Ôºå‰ª•ÂÆûÁé∞Â≠óÁ¨¶/Êï∞ÁªÑ/Ë°åÁöÑÈ´òÊïàËØªÂèñ„ÄÇ * ÊûÑÈÄ†ÊñπÊ≥ïÔºö üìå ReaderÊâÄÂÅöÁöÑÊØè‰∏™ËØªÂèñËØ∑Ê±ÇÈÉΩ‰ºöÂØºËá¥ÂØπÂ∫ïÂ±ÇÂ≠óÁ¨¶ÊàñÂ≠óËäÇÊµÅËøõË°åÁõ∏Â∫îÁöÑËØªÂèñËØ∑Ê±Ç„ÄÇÂõ†Ê≠§ÔºåÂª∫ËÆÆÁî® BufferedReader ÂåÖË£ÖÊâÄÊúâÂÖ∂ read() Êìç‰ΩúÂèØËÉΩÂºÄÈîÄÂæàÈ´òÁöÑReaderÔºàÂ¶Ç FileReader ÂíåInputStreamReaderÔºâ BufferedReader(Reader in); // ÂàõÂª∫‰∏Ä‰∏™‰ΩøÁî®ÈªòËÆ§Â§ßÂ∞èËæìÂÖ•ÁºìÂ≠òÂå∫ÁöÑÁºìÂ≠òÂ≠óÁ¨¶ËæìÂÖ•ÊµÅBufferedReader(Reader in,int sz); // ÂàõÂª∫‰∏Ä‰∏™‰ΩøÁî®ÊåáÂÆöÂ§ßÂ∞èËæìÂÖ•ÁºìÂ≠òÂå∫ÁöÑÁºìÂ≠òÂ≠óÁ¨¶ËæìÂÖ•ÊµÅ * DemoÔºö /** * ÁªÑÂêà‰ΩøÁî® FileReader Âíå BufferedReaderÔºöËé∑Âæó‰∏Ä‰∏™ÂÖ∑ÊúâÁºìÂ≠òÁöÑÊñá‰ª∂ËæìÂÖ•ÊµÅ */ public class TestBufferedReader &#123; public static void main(String[] args) &#123; try &#123; // üîπÂàõÂª∫ËæìÂÖ•ÊµÅ FileReader is = new FileReader(&quot;D:/demo/test.txt&quot;); BufferedReader bis = new BufferedReader(is); // üîπ‰ªéËæìÂÖ•ÊµÅËØªÂèñÊï∞ÊçÆ while (bis.ready()) &#123; int c = bis.read(); System.out.print((char)c); &#125; // üîπÂÖ≥Èó≠ËæìÂÖ•ÊµÅ bis.close(); is.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂ∞Ü‰ºöËæìÂá∫Êñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπÂà∞ÊéßÂà∂Âè∞‰∏≠„ÄÇ Ôºà4ÔºâBufferedWriterBufferedWriter Â∞ÜÊñáÊú¨ÂÜôÂÖ•Â≠óÁ¨¶ËæìÂá∫ÊµÅÔºåÁºìÂ≠òÂêÑ‰∏™Â≠óÁ¨¶Ôºå‰ªéËÄåÊèê‰æõÂçï‰∏™Â≠óÁ¨¶„ÄÅÊï∞ÁªÑÂíåÂ≠óÁ¨¶‰∏≤ÁöÑÈ´òÊïàÂÜôÂÖ•„ÄÇ * ‰ΩøÁî® üìå ÈÄöÂ∏∏ Writer Â∞ÜÂÖ∂ËæìÂá∫Á´ãÂç≥ÂèëÈÄÅÂà∞Â∫ïÂ±ÇÂ≠óÁ¨¶ÊàñÂ≠óËäÇÊµÅ„ÄÇÈô§ÈùûË¶ÅÊ±ÇÊèêÁ§∫ËæìÂá∫ÔºåÂê¶ÂàôÂª∫ËÆÆÁî® BufferedWriter ÂåÖË£ÖÊâÄÊúâÂÖ∂ write() Êìç‰ΩúÂèØËÉΩÂºÄÈîÄÂæàÈ´òÁöÑ WriterÔºàÂ¶ÇFileWritersÂíåOutputStreamWritersÔºâ„ÄÇ‰æãÂ¶Ç‰ª•‰∏ãÊ°à‰æãÂ∞ÜÁºìÂÜ≤ PrintWriter ÂØπÊñá‰ª∂ÁöÑËæìÂá∫„ÄÇ PrintWriter out = new PrintWriter( new BufferedWriter(new FileWriter(&quot;foo.out&quot;)));// Ëã•Ê≤°ÊúâÁºìÂÜ≤ÔºåÂàôÊØèÊ¨°Ë∞ÉÁî® print() ÊñπÊ≥ï‰ºöÂØºËá¥Â∞ÜÂ≠óÁ¨¶ËΩ¨Êç¢‰∏∫Â≠óËäÇÔºå// ÁÑ∂ÂêéÁ´ãÂç≥ÂÜôÂÖ•Âà∞Êñá‰ª∂ÔºåËÄåËøôÊòØÊûÅÂÖ∂‰ΩéÊïàÁöÑ„ÄÇ * ËæìÂá∫Êç¢Ë°å ËØ•Á±ªÊèê‰æõ‰∫Ü newLine() ÊñπÊ≥ïÔºåÂÆÉ‰ΩøÁî®Âπ≥Âè∞Ëá™Â∑±ÁöÑË°åÂàÜÈöîÁ¨¶Ê¶ÇÂøµÔºåÊ≠§Ê¶ÇÂøµÁî±Á≥ªÁªüÂ±ûÊÄß line.separator ÂÆö‰πâ„ÄÇ Âπ∂ÈùûÊâÄÊúâÂπ≥Âè∞ÈÉΩ‰ΩøÁî®Êñ∞Ë°åÁ¨¶Ôºà\\nÔºâÊù•ÁªàÊ≠¢ÂêÑË°å„ÄÇÂõ†Ê≠§Ë∞ÉÁî®Ê≠§ÊñπÊ≥ïÊù•ÁªàÊ≠¢ÊØè‰∏™ËæìÂá∫Ë°åË¶Å‰ºò‰∫éÁõ¥Êé•ÂÜôÂÖ•Êñ∞Ë°åÁ¨¶„ÄÇ * Demo /** Â∞ÜÊñá‰ª∂ËæìÂÖ•ÊµÅÂØπË±°osËΩ¨Êç¢‰∏∫ÁºìÂ≠òËæìÂá∫ÊµÅ„ÄÇ */public class TestBufferedWriter &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫ËæìÂá∫ÊµÅ FileWriter os = new FileWriter(&quot;D:/demo/test.txt&quot;); BufferedWriter bos = new BufferedWriter(os); // üîπ ÂÜôÂÖ•Êï∞ÁªÑÊï∞ÊçÆ char[] buf = new char[3]; buf[0] = &#x27;a&#x27;; buf[1] = &#x27;b&#x27;; buf[2] = &#x27;‰∏≠&#x27;; bos.write(buf); // üîπ ÂÖ≥Èó≠ËæìÂá∫ÊµÅ bos.close(); os.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂ∞Ü‰ºöÂú®Êñá‰ª∂‰∏≠ÂÜôÂÖ•‚Äúab‰∏≠‚Äù„ÄÇ ÔºàÂÖ´ÔºâÊï∞ÊçÆÊµÅÔºà1ÔºâDataInputStreamÊï∞ÊçÆËæìÂÖ•ÊµÅÂÖÅËÆ∏Â∫îÁî®Á®ãÂ∫è‰ª•‰∏éÊú∫Âô®Êó†ÂÖ≥ÊñπÂºè‰ªéÂ∫ïÂ±ÇËæìÂÖ•ÊµÅ‰∏≠ËØªÂèñÂü∫Êú¨JavaÊï∞ÊçÆÁ±ªÂûã„ÄÇ * ÊñπÊ≥ï boolean readBoolean(); // ËØªÂèñ‰∏Ä‰∏™booleanÂÄºbyte readByte(); // ËØªÂèñ‰∏Ä‰∏™8‰ΩçÁöÑÂ≠óËäÇchar readChar(); // ËØªÂèñ‰∏Ä‰∏™16‰ΩçÁöÑcharÂÄºdouble readDouble(); // ËØªÂèñ‰∏Ä‰∏™ 64 ‰ΩçÁöÑdoubleÂÄºfloat readFloat(); // ËØªÂèñ‰∏Ä‰∏™ 32 ‰ΩçÁöÑfloatÂÄºint readInt(); // ËØªÂèñ‰∏Ä‰∏™ 32 ‰ΩçÁöÑintÂÄºlong readLong(); // ËØªÂèñ‰∏Ä‰∏™ 64 ‰ΩçÁöÑlongÂÄºshort readShort(); // ËØªÂèñ‰∏Ä‰∏™ 16 ‰ΩçÁöÑshortÂÄº * Á±ª‰ºº ObjectInputStream ObjectInputStreamÔºöËØªÂèñÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûã + ÂØπË±°Êï∞ÊçÆÁ±ªÂûãDataInputStrreamÔºö ËØªÂèñÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûã * Demo /** * ËØªÂèñDataOutputStreamÁ±ªÊâÄÂÜôÊñá‰ª∂ÁöÑËøáÁ®ã * Ôºàdata.tmpÂèØ‰ª•ÈÄöËøá‰∏ã‰∏ÄËäÇ‰∏≠ DataOutputStream Á±ªÁöÑÊºîÁ§∫Á®ãÂ∫èËøêË°åÁîüÊàêÔºâ */public class TestDataInputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫Êñá‰ª∂ËæìÂÖ•ÊµÅ FileInputStream fis = new FileInputStream(&quot;D:/demo/data.tmp&quot;); // üîπ ÂàõÂª∫Êï∞ÊçÆËæìÂÖ•ÊµÅ DataInputStream dis = new DataInputStream(fis); // üî∏ ËØªÂèñÂØπË±°Êï∞ÊçÆ int i = dis.readInt(); boolean b = dis.readBoolean(); float f = dis.readFloat(); System.out.println(&quot;i=&quot; + i); System.out.println(&quot;b=&quot; + b); System.out.println(&quot;f=&quot; + f); // üîπ ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ dis.close(); fis.close(); &#125; catch (IOException e) &#123; &#125; &#125; &#125;// i=12345// b=true// f=1000.0 *Ê≥®ÊÑèÔºö Áî±‰∫éÊñá‰ª∂ D:/demo/data.tmp ÊòØÂÜôÂÖ•Á±ªË∞ÉÁî® DataOutputStream ÂÜôÂÖ•ÁöÑÂØπË±°ÔºåÊØè‰∏Ä‰∏™ÂØπË±°ÁöÑÂÜôÂÖ•ÈÉΩÊòØÊúâÈ°∫Â∫èÁöÑÔºåÂõ†Ê≠§ËøôÈáåÁöÑËØªÂèñ‰πüÂøÖÈ°ªÈááÁî®ÂêåÊ†∑ÁöÑÈ°∫Â∫è„ÄÇÂ¶ÇÊûúÈ°∫Â∫è‰∏ç‰∏ÄËá¥ÔºåÂ∞Ü‰ºö‰∫ßÁîüÂØπË±°Á±ªÂûãËΩ¨Êç¢ÂºÇÂ∏∏ java.io.OptionalDataExceptionÔºåÂÆÉÊòØIOExceptionÁöÑÂ≠êÁ±ª„ÄÇ Ôºà2ÔºâDataOutputStreamDataOutputStream ‰∏é DataInputStream Áõ∏ÂØπÂ∫îÔºåÂÖÅËÆ∏Â∫îÁî®Á®ãÂ∫èÂ∞ÜÂü∫Êú¨JavaÊï∞ÊçÆÁ±ªÂûãÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠„ÄÇÁÑ∂ÂêéÔºåÂ∫îÁî®Á®ãÂ∫èÂèØ‰ª•‰ΩøÁî®Êï∞ÊçÆËæìÂÖ•ÊµÅ DataInputStream Â∞ÜÊï∞ÊçÆËØªÂÖ•„ÄÇ * ÊñπÊ≥ï // ÁªßÊâøOutputStreamÁöÑÂêåÊó∂ÔºåÂÆûÁé∞‰∫ÜDataOutputÊé•Âè£ÔºåÂõ†Ê≠§ÂÆÉÂÖ∑ÊúâDataOutputÊâÄËßÑÂÆöÁöÑÊñπÊ≥ïÔºövoid writeBoolean(boolean v); // Â∞Ü‰∏Ä‰∏™booleanÂÄº‰ª•1-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅvoid writeByte(int v); // Â∞Ü‰∏Ä‰∏™byteÂÄº‰ª•1-byteÂÄºÂΩ¢ÂºèÂÜôÂá∫Âà∞ËæìÂá∫ÊµÅ‰∏≠void writeBytes(Strings); // Â∞ÜÂ≠óÁ¨¶‰∏≤ÊåâÂ≠óËäÇÈ°∫Â∫èÂÜôÂá∫Âà∞ËæìÂá∫ÊµÅ‰∏≠void writeChar(int v); // Â∞Ü‰∏Ä‰∏™charÂÄº‰ª•2-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeChars(Strings); // Â∞ÜÂ≠óÁ¨¶‰∏≤ÊåâÂ≠óÁ¨¶È°∫Â∫èÂÜôÂÖ•ËæìÂá∫ÊµÅvoid writeDouble(double v); // ‰ΩøÁî®DoubleÁ±ª‰∏≠ÁöÑdoubleToLongBitsÊñπÊ≥ïÂ∞ÜdoubleÂèÇÊï∞ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™longÂÄºÔºåÁÑ∂ÂêéÂ∞ÜËØ•longÂÄº‰ª•8-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeFloat(float v); // ‰ΩøÁî®FloatÁ±ª‰∏≠ÁöÑfloatToIntBitsÊñπÊ≥ïÂ∞ÜfloatÂèÇÊï∞ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™intÂÄºÔºåÁÑ∂ÂêéÂ∞ÜËØ•intÂÄº‰ª•4-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeInt(int v); // Â∞Ü‰∏Ä‰∏™intÂÄº‰ª•4-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeLong(long v); // Â∞Ü‰∏Ä‰∏™longÂÄº‰ª•8-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeShort(int v); // Â∞Ü‰∏Ä‰∏™shortÂÄº‰ª•2-byteÂÄºÂΩ¢ÂºèÂÜôÂÖ•ËæìÂá∫ÊµÅ‰∏≠ÔºåÂÖàÂÜôÂÖ•È´òÂ≠óËäÇvoid writeUTF(Stringstr); // ‰ª•‰∏éÊú∫Âô®Êó†ÂÖ≥ÊñπÂºè‰ΩøÁî®UTF-8ÁºñÁ†ÅÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂÜôÂÖ•ËæìÂá∫ÊµÅ * Demo /** * DataOutputStreamÁ±ªÂÜôÂÖ•Êñá‰ª∂data.tmpÁöÑËøáÁ®ã„ÄÇ */public class TestDataOutputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫Êñá‰ª∂ËæìÂá∫ÊµÅ FileOutputStream fos = new FileOutputStream(&quot;D:/demo/data.tmp&quot;); // üîπ ÂàõÂª∫ÂØπË±°ËæìÂá∫ÊµÅ DataOutputStream oos = new DataOutputStream(fos); // üî∏ ÂÜôÂÖ•ÂØπË±°Êï∞ÊçÆ oos.writeInt(12345); oos.writeBoolean(true); oos.writeFloat(1000.0f); // üîπ ÂÖ≥Èó≠ËæìÂá∫ÊµÅ oos.close(); fos.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂ∞Ü‰ºöÂ∞ÜÂØπË±°Êï∞ÊçÆÂÜôÂÖ•Êñá‰ª∂‰∏≠„ÄÇ Ôºà‰πùÔºâË°åÂè∑ËæìÂÖ•ÊµÅÔºà1ÔºâLineNumberInputStreamLineNumberInputStream ÂèØË∑üË∏™Ë°åÂè∑„ÄÅËÆæÁΩÆË°åÂè∑„ÄÅÂØπË°åÂÅöÊ†áËÆ∞‰ª•‰æøÊÅ¢Â§çÁ≠âÂäüËÉΩ„ÄÇ ÂêçËØç ËØ¥Êòé Ë°å ‰ª•ÂõûËΩ¶Á¨¶Ôºà\\rÔºâ„ÄÅÊç¢Ë°åÁ¨¶Ôºà\\nÔºâ„ÄÅÂõûËΩ¶Á¨¶ÂêéÁ¥ßË∑üÁöÑÊç¢Ë°åÁ¨¶Ôºà\\r\\nÔºâÔºà‰∏âÁßçÊÉÖÂÜµÔºâÁªìÂ∞æÁöÑÂ≠óËäÇÂ∫èÂàó„ÄÇ Ë°åÂè∑ ‰ª•0ÂºÄÂ§¥ÔºåÂπ∂Âú®readËøîÂõûÊç¢Ë°åÁ¨¶Êó∂ÈÄíÂ¢û1„ÄÇ * ÊñπÊ≥ïÔºöÔºàDeprecatedÔºâ getLineNumber(); // ÂèñÂæóË°åÂè∑setLineNumber(); // ËÆæÁΩÆË°åÂè∑ * demoÔºö /** * ÊåâÁÖßÊñá‰ª∂ÁöÑË°åËØªÂèñÔºåËæìÂá∫ÊØè‰∏ÄË°åÁöÑË°åÂè∑ÂíåÂÜÖÂÆπ„ÄÇ */public class TestLineNumberInputStream &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫Êñá‰ª∂ËæìÂÖ•ÊµÅ FileInputStream fis = new FileInputStream(&quot;D:/demo/test.txt&quot;); // üîπ ÂàõÂª∫Ë°åÂè∑ËæìÂÖ•ÊµÅ LineNumberInputStream lis = new LineNumberInputStream(fis); // üîπ ÂàõÂª∫Êï∞ÊçÆËæìÂÖ•ÊµÅÔºöÈÄöËøáDataInputStream ËøõË°åËæìÂÖ•ÊµÅËøáÊª§ÔºåËé∑ÂæóreadLine()ÁöÑÂäüËÉΩ„ÄÇ DataInputStream dis = new DataInputStream(lis); // üî∏ ËØªÂèñÊï∞ÊçÆ String line; while ((line = dis.readLine()) != null) &#123; System.out.println(lis.getLineNumber() + &quot;:&quot; + line); &#125; // ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ dis.close(); lis.close(); fis.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// 1:hello,World!// 2:hello,China!// 3:Hello,Beijing! Ôºà2ÔºâLineNumberReader* ÊûÑÈÄ†ÊñπÊ≥ïÔºö Áî±‰∫éËØ•Á±ªÁªßÊâøËá™BufferedReaderÔºåÂõ†Ê≠§ÂÆÉÊã•Êúâ‰∏éBufferedReaderÁõ∏ÂêåÁöÑ‰∏§‰∏™ÊûÑÈÄ†ÊñπÊ≥ïÔºö LineNumberReader(Reader in); // ‰ΩøÁî®ÈªòËÆ§ËæìÂÖ•ÁºìÂ≠òÂå∫ÁöÑÂ§ßÂ∞èÂàõÂª∫Êñ∞ÁöÑË°åÁºñÂè∑readerLineNumberReader(Reader in,int sz); // ÂàõÂª∫Êñ∞ÁöÑË°åÁºñÂè∑readerÔºåÂ∞ÜÂ≠óÁ¨¶ËØªÂÖ•ÁªôÂÆöÂ§ßÂ∞èÁöÑÁºìÂ≠òÂå∫ * ÊñπÊ≥ïÔºö getLineNumber(); // ÂèñÂæóË°åÂè∑ setLineNumber(int); // ËÆæÁΩÆË°åÂè∑// Ê≥®ÊÑèÔºösetLineNumber(int)‰∏ç‰ºöÂÆûÈôÖÊõ¥ÊîπÊµÅ‰∏≠ÁöÑÂΩìÂâç‰ΩçÁΩÆÔºõÂÆÉÂè™Êõ¥ÊîπÁî±getLineNumber()ËøîÂõûÁöÑÂÄº * demoÔºö /** * Ê†πÊçÆÊñá‰ª∂ËæìÂÖ•ÊµÅfisÂàõÂª∫Ë°åÂè∑ËæìÂÖ•ÊµÅÁöÑÊñπÊ≥ïÔºå * ÈÄöËøálisÁöÑreadLine()ÊñπÊ≥ïÂèØ‰ª•ËØªÂèñ‰∏ÄË°åÊï∞ÊçÆÔºå‰ΩøÁî®getLineNumber()ÂèñÂæóË°åÂè∑ÔºåÂπ∂ËæìÂá∫Ë°åÂè∑ÂíåËØ•Ë°åÂÜÖÂÆπ„ÄÇ */public class TestLineNumberReader &#123; public static void main(String[] args) &#123; try &#123; // üîπ ÂàõÂª∫Êñá‰ª∂ËæìÂÖ•ÊµÅ FileReader fis = new FileReader(&quot;D:/demo/test.txt&quot;); // üîπ ÂàõÂª∫Ë°åÂè∑ËæìÂÖ•ÊµÅ LineNumberReader lis = new LineNumberReader(fis); // üî∏ ËØªÂèñÊï∞ÊçÆ String line; while ((line = lis.readLine()) != null) &#123; System.out.println(lis.getLineNumber() + &quot;:&quot; + line); &#125; // ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ lis.close(); fis.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// 1:hello,World!// 2:hello,China!// 3:Hello,Beijing! ÔºàÂçÅÔºâÊé®ÂõûËæìÂÖ•ÊµÅPushbackInputStream Âíå PushbackReader ‰∏∫Âè¶‰∏Ä‰∏™ËæìÂÖ•ÊµÅÊ∑ªÂä†ÊÄßËÉΩÔºåÂÖÅËÆ∏Â∞ÜÂ≠óËäÇ(Â≠óÁ¨¶)Êé®ÂõûÂà∞ÊµÅ‰∏≠ÔºöÂç≥‚ÄúÊé®ÂõûÔºàpushbackÔºâ‚ÄùÊàñ‚ÄúÂèñÊ∂àËØªÂèñÔºàunreadÔºâ‚Äù‰∏Ä‰∏™Â≠óËäÇ(Â≠óÁ¨¶)ÁöÑËÉΩÂäõ„ÄÇ PushbackInputStream Âíå PushbackReader ÁöÑ3‰∏™ÊñπÊ≥ïÔºö ÊñπÊ≥ï ËØ¥Êòé void unread(int b) Â∞Ü‰∏Ä‰∏™Â≠óËäÇ/Â≠óÁ¨¶Êé®ÂõûÂà∞Êé®ÂõûÁºìÂÜ≤Âå∫ÈáåÔºå‰ªéËÄåÂÖÅËÆ∏ÈáçÂ§çËØªÂèñÂàöÂàöËØªÂèñÁöÑÂÜÖÂÆπ„ÄÇ void unread(byte[]/char[] buf) Â∞Ü‰∏Ä‰∏™Â≠óËäÇ/Â≠óÁ¨¶Êï∞ÁªÑÂÜÖÂÆπÊé®ÂõûÂà∞Êé®ÂõûÁºìÂÜ≤Âå∫ÈáåÔºå‰ªéËÄåÂÖÅËÆ∏ÈáçÂ§çËØªÂèñÂàöÂàöËØªÂèñÁöÑÂÜÖÂÆπ„ÄÇ void unread(byte[]/char[] b, int off, int len) Â∞Ü‰∏Ä‰∏™Â≠óËäÇ/Â≠óÁ¨¶Êï∞ÁªÑÈáå‰ªéoffÂºÄÂßãÔºåÈïøÂ∫¶‰∏∫lenÂ≠óËäÇ/Â≠óÁ¨¶ÁöÑÂÜÖÂÆπÊé®ÂõûÂà∞Êé®ÂõûÁºìÂÜ≤Âå∫ÈáåÔºå‰ªéËÄåÂÖÅËÆ∏ÈáçÂ§çËØªÂèñÂàöÂàöËØªÂèñÁöÑÂÜÖÂÆπ„ÄÇ Âú®ËØªÂèñÁªàÊ≠¢Â≠óËäÇ(Â≠óÁ¨¶)ÂêéÔºå‰ª£Á†ÅÁâáÊÆµÂèØ‰ª•‚ÄúÂèñÊ∂àËØªÂèñ‚ÄùËØ•Â≠óËäÇ(Â≠óÁ¨¶)ÔºåËøôÊ†∑ÔºåËæìÂÖ•ÊµÅ‰∏äÁöÑ‰∏ã‰∏Ä‰∏™ËØªÂèñÊìç‰ΩúÂ∞Ü‰ºöÈáçÊñ∞ËØªÂèñË¢´Êé®ÂõûÁöÑÂ≠óËäÇ(Â≠óÁ¨¶)„ÄÇ Â§ÑÁêÜÁ§∫ÊÑèÂõæ ÈúÄÊåáÂÆöÁºìÂÜ≤Âå∫Â§ßÂ∞è ÂΩìÂàõÂª∫‰∏Ä‰∏™ PushbackInputStream Âíå PushbackReader Êó∂ÈúÄË¶ÅÊåáÂÆöÊé®ÂõûÁºìÂÜ≤Âå∫ÁöÑÂ§ßÂ∞èÔºåÈªòËÆ§ÁöÑÊé®ÂõûÁºìÂÜ≤Âå∫ÁöÑÈïøÂ∫¶‰∏∫1„ÄÇ Ëã•Á®ãÂ∫è‰∏≠Êé®ÂõûÂà∞Êé®ÂõûÁºìÂÜ≤Âå∫ÁöÑÂÜÖÂÆπË∂ÖÂá∫‰∫ÜÊé®ÂõûÁºìÂÜ≤Âå∫ÁöÑÂ§ßÂ∞èÔºåÂ∞Ü‰ºöÂºïÂèë Pushback buffer overflow ÁöÑ IOException ÂºÇÂ∏∏„ÄÇ DemoÔºö public class TestPushbackInputStream &#123; public static void main(String[] args) &#123; try &#123; // ÂàõÂª∫Êñá‰ª∂ËæìÂÖ•ÊµÅ FileInputStream fis = new FileInputStream(&quot;D:/demo/test.txt&quot;); // ÂàõÂª∫Êé®ÂõûËæìÂÖ•ÊµÅ PushbackInputStream pis = new PushbackInputStream(fis); // ËØªÂèñÂØπË±°Êï∞ÊçÆ int c = pis.read(); System.out.print((char)c); pis.unread(c); // üîª Êé®Âõû‰∏Ä‰∏™Â≠óËäÇ c = pis.read(); // ÂÜçÊ¨°ËØªÂèñ System.out.print((char)c); // ÂÖ≥Èó≠ËæìÂÖ•ÊµÅ pis.close(); fis.close(); &#125; catch (IOException e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÂ∞Ü‰ºöÈáçÂ§çËæìÂá∫Á¨¨‰∏Ä‰∏™Â≠óÁ¨¶„ÄÇ ÔºàÂçÅ‰∏ÄÔºâÊâìÂç∞ÊµÅÔºàÊ†ºÂºèÂåñÔºâÔºà1ÔºâPrintStream%%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR A([\"PrintStreamÔºà‰∏éOutputStreamÁõ∏ÊØîÔºâ\"]):::p A -.-> a(\"Ê∑ªÂä†‰∫Ü‰∏ÄÁªÑ print() / println() ÊñπÊ≥ïÔºåÂèØ‰ª•ÊâìÂç∞ÂêÑÁßçÊï∞ÊçÆÁ±ªÂûãÔºåÊØîËæÉÊñπ‰æø„ÄÇ\"):::lp A -.-> b(\"‰∏ç‰ºöÊäõÂá∫IOException\"):::lp A -.-> c(\"Ëá™Âä®Âà∑Êñ∞Êú∫Âà∂ÔºöÂÜôÂÖ•ÂÜÖÂÆπÂêéËá™Âä®Ë∞ÉÁî®flush()ÊñπÊ≥ï\"):::lp classDef p fill:#ddaebd classDef lp fill:#f4e4e9 ÔºàÂ≠óËäÇÂûãÔºâPrintStream ÊòØ‰∏ÄÁßç FilterOutputStreamÔºåÂú® OutputStream ÁöÑÊé•Âè£‰∏äÔºåÈ¢ùÂ§ñÊèê‰æõ‰∫Ü‰∏Ä‰∫õÂÜôÂÖ•ÂêÑÁßçÊï∞ÊçÆÁ±ªÂûãÁöÑÊñπÊ≥ï„ÄÇ‰ª•ÂèäÂØπÂ∫îÁöÑ‰∏ÄÁªÑ println() ÊñπÊ≥ïÔºàËá™Âä®Âä†‰∏äÊç¢Ë°åÁ¨¶Ôºâ„ÄÇ ÊñπÊ≥ï ËØ¥Êòé void print(boolean) Â∞ÜbooleanÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(char) Â∞ÜcharÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(int) Â∞ÜintÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(long) Â∞ÜlongÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(float) Â∞ÜfloatÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(double) Â∞ÜdoubleÁ±ªÂûãÊï∞ÊçÆÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(char[]) Â∞ÜÂ≠óÁ¨¶‰∏≤Êï∞ÁªÑÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(String) Â∞ÜÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStreamÊµÅ‰∏≠ void print(Obj) Â∞ÜÂØπË±°ÂØπÂ∫îÂ≠óÁ¨¶‰∏≤ÂÜôÂà∞PrintStream‰∏≠ üî∫ ‰∏§ÊñπÊ≥ïÂÜôÂÖ•Êï∞ÊçÆÊó∂ÈÉΩ‰ºöÂ∞ÜÊï∞ÊçÆËΩ¨Êç¢ÊàêÂ≠óÁ¨¶‰∏≤ÔºåÂÆûÈôÖË∞ÉÁî®ÁöÑÊñπÊ≥ïÔºöwrite(String s)„ÄÇ ptrint(0x61) = write(String.valueOf(0x61)) Ôºà2ÔºâPrintWriter ÔºàÂ≠óÁ¨¶ÂûãÔºâPrintWriterÊâ©Â±ï‰∫Ü Writer Êé•Âè£ÔºåÂÆÉÁöÑ print() / println() ÊñπÊ≥ïÊúÄÁªàËæìÂá∫ÁöÑÊòØ char Êï∞ÊçÆ„ÄÇ‰ΩøÁî®ÊñπÊ≥ïÂêå PrintStream„ÄÇ Ôºà3ÔºâÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ•/ËæìÂá∫ ÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ•/ËæìÂá∫ JavaÁöÑÊ†áÂáÜËæìÂÖ•/ËæìÂá∫ÂàÜÂà´ÈÄöËøá System.inÔºà‰ªéÈîÆÁõòËæìÂÖ•ÔºâÂíå System.outÔºàËæìÂá∫Âà∞Â±èÂπïÔºâÊù•‰ª£Ë°®„ÄÇËÄå System Á±ªÈáåÊèê‰æõ‰∫ÜÂ¶Ç‰∏ã3‰∏™ÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ•/ËæìÂá∫ÁöÑÊñπÊ≥ï„ÄÇ ÊñπÊ≥ï ËØ¥Êòé static void setErr(PrintStream err) ÈáçÂÆöÂêë ‚ÄúÊ†áÂáÜ‚ÄùÈîôËØØËæìÂá∫ÊµÅ„ÄÇ static void setIn(InputStream in) ÈáçÂÆöÂêë‚ÄúÊ†áÂáÜ‚ÄùËæìÂÖ•ÊµÅ„ÄÇ static void setOut(PrintStream out) ÈáçÂÆöÂêë ‚ÄúÊ†áÂáÜ‚ÄùËæìÂá∫ÊµÅ„ÄÇ demoÔºöÈáçÂÆöÂêëÊ†áÂáÜËæìÂá∫ /** * ÈÄöËøáÈáçÂÆöÂêëÊ†áÂáÜËæìÂá∫ÊµÅÔºåÂ∞ÜSystem.outÁöÑËæìÂá∫ÈáçÂÆöÂêëÂà∞Êñá‰ª∂ËæìÂá∫ÔºåËÄå‰∏çÊòØÂú®Â±èÂπï‰∏äËæìÂá∫„ÄÇ */public class RedirectOut &#123; public static void main(String[] args) &#123; try( // ‰∏ÄÊ¨°ÊÄßÂàõÂª∫PrintStreamËæìÂá∫ÊµÅ PrintStream ps=new PrintStream(new FileOutputStream(&quot;out.txt&quot;))) &#123; // Â∞ÜÁ≥ªÁªüÁöÑÊ†áÂáÜËæìÂá∫ÈáçÂÆöÂêëÂà∞psËæìÂá∫ÊµÅ System.setOut(ps); // ÂêëÊ†áÂáÜËæìÂá∫ËæìÂá∫‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ System.out.println(&quot;ÊôÆÈÄöÂ≠óÁ¨¶‰∏≤&quot;); // ÂêëÊ†áÂáÜËæìÂá∫ËæìÂá∫‰∏Ä‰∏™ÂØπË±° System.out.println(new RedirectOut()); &#125; catch (IOException ex) &#123; ex.printStackTrace(); &#125; &#125;&#125; ËØ•‰ª£Á†ÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™ PrintStream ËæìÂá∫ÊµÅÔºåÂπ∂Â∞ÜÁ≥ªÁªüÁöÑÊ†áÂáÜËæìÂá∫ÈáçÂÆöÂêëÂà∞ËØ• Print Stream ËæìÂá∫ÊµÅ„ÄÇËøêË°åËØ•Á®ãÂ∫èÊó†‰ªª‰ΩïËæìÂá∫ÔºöÂõ†‰∏∫Ê†áÂáÜËæìÂá∫‰∏çÂÜçËæìÂá∫Âà∞Â±èÂπïÔºåËÄåÊòØËæìÂá∫Âà∞ out.txt Êñá‰ª∂„ÄÇ demoÔºöÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ• /** * ‰∏ãÈù¢Á®ãÂ∫èÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ•Ôºå‰ªéËÄåÂèØ‰ª•Â∞ÜSystem.inÈáçÂÆöÂêëÂà∞ÊåáÂÆöÊñá‰ª∂ÔºåËÄå‰∏çÊòØÈîÆÁõòËæìÂÖ•„ÄÇ */public class RedirectIn &#123; public static void main(String[] args) &#123; try( FileInputStream fis=new FileInputStream(&quot;RedirectIn.java&quot;)) &#123; // Â∞ÜÊ†áÂáÜËæìÂÖ•ÈáçÂÆöÂêëÂà∞fisËæìÂÖ•ÊµÅ System.setIn(fis); // ‰ΩøÁî®System.inÂàõÂª∫ScannerÂØπË±°ÔºåÁî®‰∫éËé∑ÂèñÊ†áÂáÜËæìÂÖ• Scanner sc=new Scanner(System.in); // Â¢ûÂä†‰∏ãÈù¢‰∏ÄË°åÂè™ÊääÂõûËΩ¶‰Ωú‰∏∫ÂàÜÈöîÁ¨¶ sc.useDelimiter(&quot;\\n&quot;); // Âà§Êñ≠ÊòØÂê¶ËøòÊúâ‰∏ã‰∏Ä‰∏™ËæìÂÖ•È°π while(sc.hasNext()) &#123; // ËæìÂá∫ËæìÂÖ•È°π System.out.println(&quot;ÈîÆÁõòËæìÂÖ•ÁöÑÂÜÖÂÆπÊòØÔºö&quot; + sc.next()); &#125; &#125; catch (IOException ex) &#123; ex.printStackTrace(); &#125; &#125;&#125; ËØ•‰ª£Á†ÅÂàõÂª∫‰∫Ü‰∏Ä‰∏™ FileInputStream ËæìÂÖ•ÊµÅÔºåÂπ∂‰ΩøÁî® System ÁöÑ setIn() ÊñπÊ≥ïÂ∞ÜÁ≥ªÁªüÊ†áÂáÜËæìÂÖ•ÈáçÂÆöÂêëÂà∞ËØ•Êñá‰ª∂ËæìÂÖ•ÊµÅ„ÄÇ ËøêË°å‰∏äÈù¢Á®ãÂ∫èÔºåÁ®ãÂ∫è‰∏ç‰ºöÁ≠âÂæÖÁî®Êà∑ËæìÂÖ•ÔºåËÄåÊòØÁõ¥Êé•ËæìÂá∫‰∫Ü RedirectIn.java Êñá‰ª∂ÁöÑÂÜÖÂÆπÔºåËøôË°®ÊòéÁ®ãÂ∫è‰∏çÂÜç‰ΩøÁî®ÈîÆÁõò‰Ωú‰∏∫Ê†áÂáÜËæìÂÖ•ÔºåËÄåÊòØ‰ΩøÁî®ÊåáÂÆöÊñá‰ª∂‰Ωú‰∏∫Ê†áÂáÜËæìÂÖ•Ê∫ê„ÄÇ - end - üîñ Á¨îËÆ∞Êù•Ëá™Ôºö „ÄäJavaÁºñÁ®ãÁöÑÈÄªËæë„Äã „ÄäJavaÈ´òÊâãÁúüÁªèÔºàÁºñÁ®ãÂü∫Á°ÄÂç∑Ôºâ„Äã „ÄäÁñØÁãÇJavaËÆ≤‰πâ„Äã üìé Ë°•ÂÖÖÔºö IO - ÂØπË±°Â∫èÂàóÂåñ","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"IO - File„ÄÅFileFilter Âíå FilenameFilter","slug":"note/Basics/IO/IO_File","date":"2023-05-08T12:02:52.578Z","updated":"2023-05-16T12:50:43.105Z","comments":true,"path":"note/Basics/IO/IO_File/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_File/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ Ôºà‰∏ÄÔºâFile - Êñá‰ª∂ÂØπÊñá‰ª∂ÂíåÁõÆÂΩïËøõË°åÂ¢ûÂà†ÊîπÊü•Êìç‰Ωú %%{ init: { 'themeVariables': { 'fontSize': '12px' } } }%% graph TD T([\"File Êñá‰ª∂ÂØπË±°\"]):::p T --> A(\"FileÁ±ªËÉΩÊìç‰ΩúÊñá‰ª∂Êú¨Ë∫´ÁöÑÂ±ûÊÄß\"):::p T -.-x B(\"FileÂØπË±°‰∏çËÉΩÊìç‰ΩúÊñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπ\"):::g A --> a(\"* Êü•ÁúãÊñá‰ª∂Â±ûÊÄß#12288;#12288;#12288;* ÂàõÂª∫Êñ∞Êñá‰ª∂„ÄÅÊñá‰ª∂Â§π* Êü•ÁúãÁà∂Á∫ßÁõÆÂΩï#12288;#12288;#12288;* ÈÅçÂéÜ„ÄÅÂà†Èô§Êñá‰ª∂Â§π#12288;\"):::lp B -.-> b(\"ÈúÄË¶ÅÈÄöËøá I/O ÁöÑÊñπÂºèÊù•ÂÆåÊàê\"):::lg info(\"fileÂØπË±°‰∏çÊòØÁúüÊ≠£ÁöÑÊñá‰ª∂ÔºåËÄåÊòØÂ†ÜÂÜÖÂ≠ò‰∏≠ÂàõÂª∫Âá∫Êù•ÁöÑ‰∏Ä‰∏™ÂØπË±°Á©∫Èó¥\"):::info classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#a6ccc3 classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#5a5a5f,stroke-dasharray: 3 3, stroke-width: 1px click b \"https://equnee.github.io/note/Basics/IO/IO_IO/\" ‚ë† ÂÆûÁé∞ÁöÑÊé•Âè£SerializableÔºå Comparable ‚ë° ÊûÑÈÄ†ÊñπÊ≥ïÂú®ËÉΩÂ§üÊìç‰ΩúÁõÆÂΩïÊàñÊñá‰ª∂‰πãÂâçÔºåË¶ÅÂÖàÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂ÂØπË±°ÔºåÊåáÂêëÁõÆÂΩïÊàñÊñá‰ª∂„ÄÇ ÊûÑÈÄ†ÊñπÊ≥ï ËØ¥Êòé ÔºàÊ≤°ÊúâÊó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ïÔºâ File(String pathname) ÈÄöËøáÂ∞ÜÁªôÂÆöË∑ØÂæÑÂêçÂ≠óÁ¨¶‰∏≤ËΩ¨Êç¢‰∏∫ÊäΩË±°Ë∑ØÂæÑÂêçÊù•ÂàõÂª∫‰∏Ä‰∏™Êñ∞FileÂÆû‰æã„ÄÇ File(File parent, String child) Ê†πÊçÆparentÊäΩË±°Ë∑ØÂæÑÂêçÂíåchildË∑ØÂæÑÂêçÂ≠óÁ¨¶‰∏≤ÂàõÂª∫‰∏Ä‰∏™Êñ∞FileÂÆû‰æã„ÄÇ File(String parent, String child) Ê†πÊçÆparentË∑ØÂæÑÂêçÂ≠óÁ¨¶‰∏≤ÂíåchildË∑ØÂæÑÂêçÂ≠óÁ¨¶‰∏≤ÂàõÂª∫‰∏Ä‰∏™Êñ∞FileÂÆû‰æã„ÄÇ File(URI uri) ÈÄöËøáÂ∞ÜÁªôÂÆöÁöÑ file:URI ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™ÊäΩË±°Ë∑ØÂæÑÂêçÊù•ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑFileÂÆû‰æã„ÄÇ ‚ë¢ Â∏∏Áî®ÊñπÊ≥ï Êñá‰ª∂Âü∫Êú¨Â±ûÊÄß Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé canExecute() ÂèØÊâßË°å canRead() ÂèØËØª canWrite() ÂèØÂÜô exists() Êñá‰ª∂ÂêçÊàñË∑ØÂæÑÊòØÂê¶Â≠òÂú® isHidden() ÊòØÂê¶ÈöêËóè isFile() Âà§Êñ≠ÂΩìÂâçfileÊòØÂê¶ÊòØ‰∏Ä‰∏™Êñá‰ª∂ isDirectory() Âà§Êñ≠ÂΩìÂâçfileÊòØÂê¶ÊòØ‰∏Ä‰∏™ÁõÆÂΩï isAbsolute() Âà§Êñ≠FileÂØπË±°ÊâÄÂØπÂ∫îÁöÑÊñá‰ª∂ÊàñÁõÆÂΩïÊòØÂê¶ÊòØÁªùÂØπË∑ØÂæÑ length() Ëé∑ÂèñÊñá‰ª∂‰∏≠Â≠óËäÇÁöÑ‰∏™Êï∞ lastModified() Ëé∑ÂèñÊñá‰ª∂ÊúÄÂêéÁöÑ‰øÆÊîπÊó∂Èó¥ÔºàlongÁ±ªÂûãÔºöÊØ´ÁßíÂÄºÔºâ Êñá‰ª∂Âêç Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé ËøîÂõûÂÄºÁ±ªÂûã getName() Ëé∑ÂèñÊñá‰ª∂ÂêçÂ≠óÔºàTest.txtÔºâ String name getAbsolutePath() Ëé∑ÂèñÊñá‰ª∂ÁöÑÁªùÂØπË∑ØÂæÑÔºàD://test//Test.txtÔºâ String path getPath() Ëé∑ÂèñÊñá‰ª∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ String path renameTo(File dest) ÈáçÂëΩÂêçÔºåÂëΩÂêçÊàêÂäüËøîÂõûtrue Boolean true ÂàõÂª∫ Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé ËøîÂõûÂÄºÁ±ªÂûã createNewFile() ÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂ÔºàÈúÄË¶ÅÊçïÊçâIOExceptionÔºâ boolean mkdir() ÂàõÂª∫‰∏Ä‰∏™ÁõÆÂΩï boolean mkdirs() ÂàõÂª∫ÊâÄÊúâÁõÆÂΩïÔºàÂêåÊó∂ÂàõÂª∫Â§öÂ±ÇÁõÆÂΩïÔºâ boolean createTempFile(String prefix, String suffix, File directory) Âú®ÊåáÂÆöÁõÆÂΩï‰∏≠ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÁ©∫Êñá‰ª∂Ôºå‰ΩøÁî®ÁªôÂÆöÁöÑÂâçÁºÄÂíåÂêéÁºÄÂ≠óÁ¨¶‰∏≤ÁîüÊàêÂÖ∂ÂêçÁß∞„ÄÇ File Ëé∑ÂèñÂØπË±° Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé ËøîÂõûÂÄºÁ±ªÂûã getParent() Ëé∑ÂèñÂΩìÂâçFileÁöÑÁà∂ÁõÆÂΩïÁöÑÂÆåÊï¥Ë∑ØÂæÑ String name getParentFile() Ëé∑ÂèñÂΩìÂâçFileÁöÑÁà∂‰∫≤fileÂØπË±° File file getAbsoluteFile() ËøîÂõûÊ≠§FileÂØπË±°ÊâÄÂØπÂ∫îÁöÑÁªùÂØπË∑ØÂæÑÊâÄÂØπÂ∫îÁöÑFileÂØπË±° File file list() Ëé∑ÂèñÂΩìÂâçFileÂØπË±°ÁöÑÊâÄÊúâÂÑøÂ≠êÂêçÂ≠ó String[] names listFiles() Ëé∑ÂèñÂΩìÂâçFileÂØπË±°ÁöÑÊâÄÊúâÂ≠êÂØπË±°ÔºàÁõÆÂΩïÊàñÊñá‰ª∂Ôºâ File[] files static listRoots() ÂàóÂá∫Á≥ªÁªüÊâÄÊúâÁöÑÊ†πË∑ØÂæÑ„ÄÇ File[] files Âà†Èô§ Â∏∏Áî®ÊñπÊ≥ï ËØ¥Êòé ËøîÂõûÂÄºÁ±ªÂûã delete() ÂΩªÂ∫ïÂà†Èô§Êñá‰ª∂ÊàñÁ©∫ÁõÆÂΩïÔºåÊó†Ê≥ïÂà†Èô§Â∏¶ÂÖÉÁ¥†ÁöÑÊñá‰ª∂Â§π boolean deleteOnExit() Âà†Èô§Êñá‰ª∂ÊàñÁõÆÂΩïÂπ∂ÂÖ≥Èó≠ÊµÅÊìç‰Ωú boolean - Demopackage com.equne;import java.io.File;import java.io.IOException;public class FileTest&#123; public static void main(String[] args) throws IOException &#123; // ‰ª•ÂΩìÂâçË∑ØÂæÑÊù•ÂàõÂª∫‰∏Ä‰∏™FileÂØπË±° File file=new File(&quot;.&quot;); // Áõ¥Êé•Ëé∑ÂèñÊñá‰ª∂ÂêçÔºåËæìÂá∫‰∏ÄÁÇπ System.out.println(file.getName()); // Ëé∑ÂèñÁõ∏ÂØπË∑ØÂæÑÁöÑÁà∂Ë∑ØÂæÑÂèØËÉΩÂá∫ÈîôÔºå‰∏ãÈù¢‰ª£Á†ÅËæìÂá∫null System.out.println(file.getParent()); // Ëé∑ÂèñÁªùÂØπË∑ØÂæÑ System.out.println(file.getAbsoluteFile()); // Ëé∑Âèñ‰∏ä‰∏ÄÁ∫ßË∑ØÂæÑ System.out.println(file.getAbsoluteFile().getParent()); // Âú®ÂΩìÂâçË∑ØÂæÑ‰∏ãÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂Êñá‰ª∂ File tmpFile=File.createTempFile(&quot;aaa&quot;, &quot;.txt&quot;, file); // ÊåáÂÆöÂΩìJVMÈÄÄÂá∫Êó∂Âà†Èô§ËØ•Êñá‰ª∂ tmpFile.deleteOnExit(); // ‰ª•Á≥ªÁªüÂΩìÂâçÊó∂Èó¥‰Ωú‰∏∫Êñ∞Êñá‰ª∂ÂêçÊù•ÂàõÂª∫Êñ∞Êñá‰ª∂ File newFile=new File(System.currentTimeMillis() + &quot;&quot;); System.out.println(&quot;newFileÂØπË±°ÊòØÂê¶Â≠òÂú®Ôºö&quot; + newFile.exists()); // ‰ª•ÊåáÂÆönewFileÂØπË±°Êù•ÂàõÂª∫‰∏Ä‰∏™Êñá‰ª∂ newFile.createNewFile(); // ‰ª•newFileÂØπË±°Êù•ÂàõÂª∫‰∏Ä‰∏™ÁõÆÂΩïÔºåÂõ†‰∏∫newFileÂ∑≤ÁªèÂ≠òÂú® // ÊâÄ‰ª•‰∏ãÈù¢ÊñπÊ≥ïËøîÂõûfalseÔºåÂç≥Êó†Ê≥ïÂàõÂª∫ËØ•ÁõÆÂΩï newFile.mkdir(); // ‰ΩøÁî®list()ÊñπÊ≥ïÂàóÂá∫ÂΩìÂâçË∑ØÂæÑ‰∏ãÁöÑÊâÄÊúâÊñá‰ª∂ÂíåË∑ØÂæÑ String[] fileList=file.list(); System.out.println(&quot;====ÂΩìÂâçË∑ØÂæÑ‰∏ãÊâÄÊúâÊñá‰ª∂ÂíåË∑ØÂæÑÂ¶Ç‰∏ã====&quot;); for (String fileName : fileList) &#123; System.out.println(fileName); &#125; // listRoots()ÈùôÊÄÅÊñπÊ≥ïÂàóÂá∫ÊâÄÊúâÁöÑÁ£ÅÁõòÊ†πË∑ØÂæÑ File[] roots=File.listRoots(); System.out.println(&quot;====Á≥ªÁªüÊâÄÊúâÊ†πË∑ØÂæÑÂ¶Ç‰∏ã====&quot;); for (File root : roots) &#123; System.out.println(root); &#125; &#125;&#125;/** * . * null * /Users/equne/Desktop/testJava/Test2/. * /Users/equne/Desktop/testJava/Test2 * newFileÂØπË±°ÊòØÂê¶Â≠òÂú®Ôºöfalse * ====ÂΩìÂâçË∑ØÂæÑ‰∏ãÊâÄÊúâÊñá‰ª∂ÂíåË∑ØÂæÑÂ¶Ç‰∏ã==== * Test2.iml * out * 1679734377738 * aaa5603141847215609264.txt * .idea * src * ====Á≥ªÁªüÊâÄÊúâÊ†πË∑ØÂæÑÂ¶Ç‰∏ã==== * / * */ (ÊëòËá™„ÄäÁñØÁãÇJavaËÆ≤‰πâ„Äã) Ôºà‰∫åÔºâFileFilter Âíå FilenameFilterÊé•Âè£ÔºöÂø´ÈÄüÂú∞ÊåâÁÖßÁâπÂÆöË¶ÅÊ±ÇÊâæÂá∫ÊâÄÊúâÊñá‰ª∂ FileFilter ‰∏é FilenameFilter Áî®‰∫éÊ£ÄÊµãÊñá‰ª∂ÊòØÂê¶Â≠òÂú®„ÄÇÂÆÉ‰ª¨ÈÉΩÊòØÊé•Âè£ÔºåÂè™ÈúÄÁºñÂÜôÁöÑÂÆûÁé∞Á±ªÂÆûÁé∞ÂÆÉ‰ª¨ÁöÑÂáΩÊï∞ accept() Âç≥ÂèØ „ÄÇ Êé•Âè£ Âå∫Âà´ ÊñπÊ≥ï FileFilter Êèê‰æõÊñá‰ª∂ÂØπË±°ÁöÑËÆøÈóÆÊñπÊ≥ï boolean accept(File file); FilenameFilter ÊåâÁÖßÁõÆÂΩïÂíåÊñá‰ª∂ÂêçÁöÑÊñπÂºèËøõË°å boolean accept(File directory, String name); ‚ë† FileFilterDemoÔºöÊêúÁ¥¢ÁâπÂÆöÁöÑÊñá‰ª∂Êâ©Â±ïÂêç ExtensionFilter /** * Êâ©Â±ïÂêçËøáÊª§Âô® */public class ExtensionFilter implements FileFilter &#123;// üî¥ ‰∏Ä„ÄÅÂÆö‰πâ‰∏Ä‰∏™Êâ©Â±ïÂêçËøáÊª§Âô®Á±ªÔºöÂÆûÁé∞Êé•Âè£ FileFilter private String extension; // Êâ©Â±ïÂêç // üî¥ ‰∫å„ÄÅÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÂàùÂßãÂåñÂèòÈáèextensionÔºöÂæÖÂåπÈÖçÁöÑÊñá‰ª∂Êâ©Â±ïÂêç public ExtensionFilter(String extension) &#123; this.extension = extension; &#125; // üî¥ ‰∫å„ÄÅÊé•Âè£ÂáΩÊï∞ÔºöÂÆûÁé∞Êâ©Â±ïÂêçËøáÊª§ public boolean accept(File file) &#123; // üîπ Ëã•‰∏∫ÁõÆÂΩïÔºöËøîÂõûfalse if (file.isDirectory()) &#123; return false; &#125; // ÂèñÂæóÊñá‰ª∂Âêç String name = file.getName(); // ÂèñÂæóÊâ©Â±ïÂêçÂâçÁöÑÁ¨¶Âè∑‚Äú.‚ÄùÁöÑ‰∏ãÊ†á‰ΩçÁΩÆ int index = name.lastIndexOf(&quot;.&quot;); // üîπ Âà§Êñ≠Êâ©Â±ïÂêç if(index == -1)&#123; // Ëã•Ê≤°ÊúâÊâ©Â±ïÂêçÔºöËøîÂõûfalse return false; &#125; else if(index == name.length() - 1)&#123; // Ëã•‰ª•ÁÇπÂè∑ÁªìÂ∞æÔºöËøîÂõûfalse return false; &#125; else&#123; // Ëã•Êâ©Â±ïÂêçÁõ∏ÂêåÔºöËøîÂõûtrue return this.extension.equals(name.substring(index + 1)); &#125; &#125;&#125; TestFile /** * ÊµãËØïÁ±ªÔºö‰ΩøÁî®‰∏äËø∞ÁöÑExtensionFilterÁ±ªÊù•Êü•Êâæ D:/demo ÁõÆÂΩï‰∏ã„ÄÅÊâ©Â±ïÂêç‰∏∫txtÁöÑÊñá‰ª∂ÂàóË°®„ÄÇ */public class TestFile &#123; public static void main(String[] args) &#123; File file = new File(&quot;D:/demo&quot;); // ÂàõÂª∫‰∏Ä‰∏™txtËøáÊª§Âô® ExtensionFilter txtFilter = new ExtensionFilter(&quot;txt&quot;); // ‰ΩøÁî®ËøáÊª§Âô®Êü•ÊâætxtÊñá‰ª∂ File[] files = file.listFiles(txtFilter); // ËæìÂá∫Êü•ÊâæÁöÑÊñá‰ª∂ÂàóË°® for (int i = 0; i Ôºú files.length; i++) &#123; System.out.println(files[i].getAbsolutePath()); &#125; &#125; &#125;// D:\\demo\\test.txt// D:\\demo\\test2.txt Ëã•‰ΩøÁî® FilenameFilterÔºåÁªìÊûú‰ºöËÆ©‰Ω†ÂæàÈöæÂà§Êñ≠Âà∞Â∫ïÊòØÁõÆÂΩïËøòÊòØÊñá‰ª∂„ÄÇ ‚ë° FilenameFilterFilenameFilter ÁöÑËøáÊª§ÂáΩÊï∞ accept() Áõ¥Êé•Ê†πÊçÆÁõÆÂΩïÂíåÊñá‰ª∂ÂêçËøõË°åËøáÊª§Ôºå‰∏é FileFilter Áõ∏ÊØîÔºåÂ§ö‰∫Ü‰∏Ä‰∏™Êñá‰ª∂ÂêçÂèÇÊï∞„ÄÇÈÄöÂ∏∏Êàë‰ª¨ÈÉΩÂª∫ËÆÆ‰ΩøÁî® FilenameFilter Á±ªËøõË°åÊñá‰ª∂ËøáÊª§„ÄÇ DemoÔºöÂõæÁâáËøáÊª§Âô® ImageFilter /** * ÂõæÁâáËøáÊª§Âô®ÔºöËøáÊª§Êâ©Â±ïÂêç‰∏∫.gif,.jpg,.pngÁöÑÊñá‰ª∂ */public class ImageFilter implements FilenameFilter &#123; // üîπ gifÁ±ªÂûãÊñá‰ª∂ public boolean isGif(String filename) &#123; if (filename.toLowerCase().endsWith(&quot;.gif&quot;)) &#123; return true; &#125; else &#123; return false; &#125; &#125; // üîπ jpgÁ±ªÂûãÊñá‰ª∂ public boolean isJpg(String filename) &#123; if (filename.toLowerCase().endsWith(&quot;.jpg&quot;)) &#123; return true; &#125; else &#123; return false; &#125; &#125; // üîπ pngÁ±ªÂûãÊñá‰ª∂ public boolean isPng(String filename) &#123; if (filename.toLowerCase().endsWith(&quot;.png&quot;)) &#123; return true; &#125; else &#123; return false; &#125; &#125; // üî¥ Êé•Âè£ÂáΩÊï∞ÔºöÂÆûÁé∞Êâ©Â±ïÂêçËøáÊª§ public boolean accept(File dir, String filename) &#123; return (isGif(filename) || isJpg(filename) || isPng(filename)); &#125;&#125; TestFile public class TestFile &#123; public static void main(String[] args) &#123; // ÁõÆÂΩïÂÆû‰æã File file = new File(&quot;D:/demo&quot;); // ---------- FileFilter ------------ // ÂàõÂª∫‰∏Ä‰∏™txtËøáÊª§Âô® ExtensionFilter txtFilter = new ExtensionFilter(&quot;txt&quot;); // ‰ΩøÁî®ËøáÊª§Âô®Êü•ÊâætxtÊñá‰ª∂ File[] files = file.listFiles(txtFilter); // ËæìÂá∫Êü•ÊâæÁöÑÊñá‰ª∂ÂàóË°® for (int i = 0; i Ôºú files.length; i++) &#123; System.out.println(files[i].getAbsolutePath()); &#125; // --------- FilenameFilter ----------- // ÂàõÂª∫‰∏Ä‰∏™ÂõæÁâáËøáÊª§Âô® ImageFilter imageFilter = new ImageFilter(); // ‰ΩøÁî®ËøáÊª§Âô®Êü•ÊâæÂõæÁâáÊñá‰ª∂ File[] images = file.listFiles(imageFilter); // ËæìÂá∫Êü•ÊâæÁöÑÊñá‰ª∂ÂàóË°® for (int i = 0; i Ôºú images.length; i++)&#123; System.out.println(images[i].getAbsolutePath()); &#125; &#125;&#125;// D:\\demo\\a.jpg// D:\\demo\\b.gif ÔºàÊëòËá™Ôºö„ÄäJavaÈ´òÊâãÁúüÁªèÔºàÁºñÁ®ãÂü∫Á°ÄÂç∑Ôºâ„ÄãÔºâ Ôºà‰∏âÔºâ*ÈÄíÂΩí - ÈÅçÂéÜÊñá‰ª∂Â§π‚ë† ÈÄíÂΩí Êú¨Ë¥®ÔºöÊñπÊ≥ïÁöÑË∞ÉÁî® ÔºàÂç≥Ëá™Â∑±Ë∞ÉÁî®Ëá™Â∑±Ôºå‰∏îÊØèÊ¨°‰º†ÁöÑÂèÇÊï∞ÈÉΩ‰∏ç‰∏ÄÊ†∑Ôºâ public class newTestFile&#123; public void buildTower(int floor)&#123; // ËÆæËÆ°‰∏Ä‰∏™ÊñπÊ≥ïÔºåÊèèËø∞ÁõñÂÆùÂ°î if(floor&gt;1)&#123; this.buildTower(floor-1); &#125; System.out.println(&quot;ÊîπÂà∞Á¨¨&quot;+ floor + &quot;Â±ÇÂï¶&quot;); // Ëá™Â∑±ÊâßË°å &#125;&#125; ÂÜÖÂ≠òÁªìÊûÑÂõæÔºö ‚ë° ÈÅçÂéÜÊñá‰ª∂Â§π/* * ÈÅçÂéÜÊñá‰ª∂Â§π„ÄÇÂèÇÊï∞ÔºöfileÔºà‰ª£Ë°®Êñá‰ª∂ÊàñÊñá‰ª∂Â§πÔºâ */import java.io.File;public class newTestFile&#123; public void showFile(File file)&#123; File[] files = File.listFiles(); // Â¶ÇÊûúÂú®Ë∞ÉÁî®ÂâçËæìÂá∫ÔºåÂàôÁõ∏ÂèçËæìÂá∫ if (files != null &amp;&amp; files.length != 0)&#123; // üîπ ÈùûÊñá‰ª∂ &amp;&amp; ÈùûÁ©∫Êñá‰ª∂Â§π for(File f : files)&#123; // ÈÅçÂéÜ this.showFile(); // üîπ ÈÄíÂΩí &#125; &#125; System.out.println(file.getAbsolutePath()); &#125;&#125; Âà†Èô§Êñá‰ª∂Â§πÔºöfile.delete(); // Â∞Ü‰∏äÈù¢ÁöÑ‰æãÂ≠êÊõøÊç¢ - end -","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"IO - Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫","slug":"note/Basics/IO/IO_StandardIO","date":"2023-05-06T15:10:06.697Z","updated":"2023-05-16T12:51:00.635Z","comments":true,"path":"note/Basics/IO/IO_StandardIO/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_StandardIO/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ ‰∏Ä„ÄÅÊ†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫Á±ª - SystemSystemÊòØJavaÁ≥ªÁªü‰∏≠‰∏Ä‰∏™ÊúÄÂ∏∏‰ΩøÁî®ÁöÑÁ±ªÔºöJavaÁöÑÁ≥ªÁªüÁ±ª„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR t((\"SystemÔºàÁ≥ªÁªüÁ±ªÔºâ\")):::p --> T subgraph ÈùôÊÄÅÊñπÊ≥ï T([ÈùôÊÄÅÊñπÊ≥ï]):::p T --> 1(\"Ê†áÂáÜËæìÂá∫ out Ê†áÂáÜËæìÂÖ• in Ê†áÂáÜÈîôËØØËæìÂá∫ err\"):::lp T -.- 2(\"ËÆøÈóÆÂ§ñÈÉ®ÂÆö‰πâÁöÑÂ±ûÊÄßÂíåÁéØÂ¢ÉÂèòÈáè\"):::info T -.- 3(\"Âä†ËΩΩÊñá‰ª∂ÂíåÂ∫ì\"):::info T -.- 4(\"Âø´ÈÄüÂ§çÂà∂Êï∞ÁªÑ\"):::info T -.- 5(\"ÂèñÂæóÁ≥ªÁªüÊó∂Èó¥ÔºöSystem.currentTimeMillis()\"):::info T -.- 6(\"Á≥ªÁªüÈÄÄÂá∫ÂëΩ‰ª§ÔºöSystem.exit()\"):::info end t --> T2([\"ÈùôÊÄÅÊàêÂëòÂèòÈáè\"]):::b subgraph \"ÈùôÊÄÅÊàêÂëòÂèòÈáè(Áî®‰∫éËøûÊé•Âà∞Ê†áÂáÜËæìÂÖ•/ËæìÂá∫ÊéßÂà∂ËÆæÂ§áÔºàÈîÆÁõòÂíåÊéßÂà∂Âè∞Ôºâ)\" T2 --> 7(\"Ê†áÂáÜËæìÂá∫ÊµÅÔºöstatic PrintStream out\"):::lb T2 --> 8(\"Ê†áÂáÜÈîôËØØËæìÂá∫ÊµÅÔºöstatic PrintStream err\"):::lb T2 --> 9(\"Ê†áÂáÜËæìÂÖ•ÊµÅÔºöstatic PrintStream in\"):::lb end 7 -.- 7t(\"System.out.print()System.out.println()\"):::lg 8 -.- 8t(\"System.err.print()\"):::lg 9 -.- 9t(\"System.in.read()System.in.read(b)\"):::lg classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info color:#4e4e52,stroke-dasharray: 3 3, stroke-width: 2px ‚ë† out Ê†áÂáÜËæìÂá∫ÊµÅËæìÂá∫Ê∂àÊÅØÂà∞ÊéßÂà∂Âè∞ // ------ * ÁºñÂÜô‰∏ÄË°åËæìÂá∫Êï∞ÊçÆ ----------------------------------System.out.println(data);// ------ ËæìÂá∫ÂêÑÁßçÁ±ªÂûãÁöÑÊï∞ÂÄº -----------------------------------void print(boolean b); // ÊâìÂç∞booleanÂÄºvoid print(char c); // ÊâìÂç∞Â≠óÁ¨¶void print(char[]s); // ÊâìÂç∞Â≠óÁ¨¶Êï∞ÁªÑvoid print(double d); // ÊâìÂç∞ÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞void print(float f); // ÊâìÂç∞ÊµÆÁÇπÊï∞void print(int i); // ÊâìÂç∞Êï¥Êï∞void print(long l); // ÊâìÂç∞longÊï¥Êï∞void print(Object obj); // ÊâìÂç∞ÂØπË±°void print(String s); // ÊâìÂç∞Â≠óÁ¨¶‰∏≤// ------ ËæìÂá∫ÂêÑÁßçÁ±ªÂûãÁöÑÊï∞ÂÄº + Êç¢Ë°å -------------------------------void println(boolean x); // ÊâìÂç∞booleanÂÄºÔºåÁÑ∂ÂêéÁªàÊ≠¢Ë°åvoid println(char x); // ÊâìÂç∞Â≠óÁ¨¶ÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(char[]x); // ÊâìÂç∞Â≠óÁ¨¶Êï∞ÁªÑÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(double x); // ÊâìÂç∞doubleÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(float x); // ÊâìÂç∞floatÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(int x); // ÊâìÂç∞Êï¥Êï∞ÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(long x); // ÊâìÂç∞longÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(Object x); // ÊâìÂç∞ObjectÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°åvoid println(String x); // ÊâìÂç∞StringÔºåÁÑ∂ÂêéÁªàÊ≠¢ËØ•Ë°å // ------ Áõ¥Êé•ËæìÂá∫Â≠óËäÇÊï∞ÊçÆÔºàÂ≠óËäÇÊµÅÔºâ --------------------------------void write(int b); // Â∞ÜÊåáÂÆöÁöÑÂ≠óËäÇÂÜôÂÖ•Ê≠§ÊµÅvoid write(byte[] buf, int off, int len); // Â∞ÜlenÂ≠óËäÇ‰ªéÊåáÂÆöÁöÑÂàùÂßãÂÅèÁßªÈáè‰∏∫offÁöÑbyteÊï∞ÁªÑÂÜôÂÖ•Ê≠§ÊµÅ ‚ë° err Ê†áÂáÜÈîôËØØËæìÂá∫ÊµÅËæìÂá∫ÈîôËØØÊ∂àÊÅØÂà∞ÊéßÂà∂Âè∞ System.err.println(data); /* Ê≠§ËæìÂá∫ÊµÅÁî®‰∫éÊòæÁ§∫ÈîôËØØÊ∂àÊÅØÔºåÊàñËÄÖÊòæÁ§∫ÈÇ£‰∫õÂç≥‰ΩøÁî®Êà∑ËæìÂá∫ÊµÅÔºàÂèòÈáèoutÁöÑÂÄºÔºâÂ∑≤ÁªèÈáçÂÆöÂêëÂà∞ÈÄöÂ∏∏‰∏çË¢´ËøûÁª≠ÁõëËßÜÁöÑÊüê‰∏ÄÊñá‰ª∂ÊàñÂÖ∂‰ªñÁõÆÊ†áÔºå‰πüÂ∫îËØ•Á´ãÂàªÂºïËµ∑Áî®Êà∑Ê≥®ÊÑèÁöÑÂÖ∂‰ªñ‰ø°ÊÅØ„ÄÇ */ ‚ë¢ in Ê†áÂáÜËæìÂÖ•ÊµÅÊé•Êî∂ÈîÆÁõòËæìÂÖ• read() // ËØªÂèñ‰∏Ä‰∏™Â≠óËäÇread(byte[] b) // ËØªÂèñ‰∏Ä‰∏™Â≠óËäÇÊï∞ÁªÑ 1. read()public class TestSystemInRead &#123; public static void main(String args[]) &#123; try &#123; int c; while((c=System.in.read())!=0)&#123; // ‰ªéÊéßÂà∂Âè∞ËØªÂÖ•‰∏Ä‰∏™Â≠óËäÇÔºà8bitÔºâ System.out.write(c); // ËæìÂá∫‰∏Ä‰∏™Â≠óËäÇ &#125; &#125; catch (Exception e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåÂú®ÊéßÂà∂Âè∞ËæìÂÖ•‰∏ÄÊÆµÂ≠óÁ¨¶ÂêéÊåâÂõûËΩ¶ÈîÆÔºåÂ∞±‰ºöË∞ÉÁî®read()ÂáΩÊï∞ÁöÑÂæ™ÁéØÔºå// ÊØèËØªÂà∞‰∏Ä‰∏™Â≠óËäÇÂ∞±‰ºöËæìÂá∫‰∏Ä‰∏™Â≠óËäÇÔºåÂõ†Ê≠§ÂõûËΩ¶ÂâçËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤Â∞±‰ºöÂéüÊ†∑ËæìÂá∫„ÄÇ 2. read(byte[] b)/** * È¶ñÂÖàÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫100ÁöÑÂ≠óËäÇÊï∞ÁªÑÔºåË°®Á§∫‰∏ÄÊ¨°ÂèØ‰ª•ËØªÂèñ100‰∏™Â≠óËäÇ„ÄÇ * ÁÑ∂Âêé‰ΩøÁî®read(byte[] b)ËØªÂèñ100‰∏™Â≠óËäÇÂà∞byte‰∏≠ÔºåÂÜçË∞ÉÁî®write()ÂáΩÊï∞ËæìÂá∫Ëøô‰∏™Â≠óËäÇÊï∞ÁªÑÂà∞ÊéßÂà∂Âè∞‰∏≠„ÄÇ */public class TestSystemInReadByte &#123; public static void main(String args[]) &#123; try &#123; byte[]b=new byte[100]; // ÂàõÂª∫Â≠óËäÇÊï∞ÁªÑ System.in.read(b); // ËØªÂèñÂà∞Êï∞ÁªÑ‰∏≠ System.out.write(b,0,100); // ËæìÂá∫Â≠óËäÇÊï∞ÁªÑ &#125; catch (Exception e) &#123; &#125; &#125;&#125;// ËøêË°åËØ•Á®ãÂ∫èÔºåËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÂõûËΩ¶ÂêéÂ∞±‰ºöËæìÂá∫ÂõûËΩ¶ÂâçÂ≠óÁ¨¶‰∏≤ÁöÑÂâç100‰∏™Â≠óÁ¨¶„ÄÇ// Â¶ÇÊûú‰Ω†ËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶Â∞è‰∫é100ÔºåÈÇ£‰πà‰∏∫‰∫ÜË°•ÂÖ®100‰∏™Â≠óËäÇÔºåÂâ©‰ΩôÁöÑÂ≠óËäÇÂ∞Ü‰ºö‰ΩøÁî®ÊñπÊ°Ü‚Äú‚ñ°‚ÄùË°®Á§∫ÔºåÂÆûÈôÖ‰∏äÊòØËøô‰∏™Â≠óËäÇÊ≤°ÊúâÊï∞ÊçÆ„ÄÇ// Â¶ÇÊûúËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶Â§ß‰∫é100ÔºåÂ§ö‰ΩôÁöÑÂ≠óËäÇÂ∞±‰ºöË¢´ÊäõÂºÉ„ÄÇ ‰∫å„ÄÅÊéßÂà∂Âè∞ËØªÂÜôÁ±ª - Console ConsoleÁ±ª‰ºòÁÇπÔºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR A([\"System Áº∫ÁÇπ\"]):::g B([\"Console ‰ºòÁÇπ\"]):::p A -.- 1(\"ËØªÂÖ•ÁöÑÂ≠óËäÇÊï∞ÁªÑÈïøÂ∫¶Êúâ100ÁöÑÈôêÂà∂ÔºöËã•Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶Â∞è‰∫é100Â∞Ü‰ºö‰ΩøÁî®ÊñπÊ°Ü‰ª£ÊõøÔºåËã•Â§ß‰∫é100Â∞Ü‰ºöË¢´ÊäõÂºÉ„ÄÇ\"):::lg B -.- 2(\"‰∏çÈúÄË¶ÅÊçïÊçâÂºÇÂ∏∏ÔºåËØ•ÂáΩÊï∞Ê≤°ÊúâÊäõÂá∫ÂºÇÂ∏∏\"):::lp B -.- 3(\"‰∏çÈúÄË¶ÅÂ∞ÜÂ≠óËäÇÊï∞ÁªÑËΩ¨Âåñ‰∏∫Â≠óÁ¨¶‰∏≤ÔºåÁõ¥Êé•ËØªÂÖ•Âç≥Â≠óÁ¨¶‰∏≤\"):::lp B -.- 4(\"ÂèØ‰ª•ÂÆåÊï¥ËØªÂèñ‰∏ÄË°åËæìÂÖ•Âπ∂ÂÆåÊï¥ËæìÂá∫ÔºåÊ≤°ÊúâÊäõÂºÉÂíåÂ°´ÂÖÖ\"):::lp classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ConsoleÁ±ªÊñπÊ≥ïÂèØËÆøÈóÆ‰∏éÂΩìÂâçJavaËôöÊãüÊú∫ÂÖ≥ËÅîÁöÑÂü∫‰∫éÂ≠óÁ¨¶ÁöÑÊéßÂà∂Âè∞ËÆæÂ§á(Ëã•Êúâ)ÔºåÂ∏∏ÊåáÈîÆÁõò„ÄÇ ËôöÊãüÊú∫ÊòØÂê¶ÂÖ∑ÊúâÊéßÂà∂Âè∞ÂèñÂÜ≥‰∫éÂ∫ïÂ±ÇÂπ≥Âè∞ÔºåËøòÂèñÂÜ≥‰∫éË∞ÉÁî®ËôöÊãüÊú∫ÁöÑÊñπÂºèÔºö %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph T([\"ËÆøÈóÆ‰∏éËôöÊãüÊú∫ÂÖ≥ËÅîÁöÑÊéßÂà∂Âè∞ËÆæÂ§á\"]):::p T --> A(\"‚ë† ËôöÊãüÊú∫‰ªé‰∫§‰∫íÂºèÂëΩ‰ª§Ë°åÂêØÂä®Ôºå‰∏îÊ≤°ÊúâÈáçÂÆöÂêëÊ†áÂáÜËæìÂÖ•ÂíåËæìÂá∫ÊµÅ\"):::lp T --> B(\"‚ë° ËôöÊãüÊú∫Ëá™Âä®ÂêØÂä® ÔºàÂ¶ÇÔºåÁî±ÂêéÂè∞‰Ωú‰∏öË∞ÉÂ∫¶Á®ãÂ∫èÂêØÂä®Ôºâ\"):::lg A -.- a([\"ÊéßÂà∂Âè∞Â≠òÂú®\"]):::p B -.- b([\"Êó†ÊéßÂà∂Âè∞\"]):::g a -.- |\"ËøûÊé•Âà∞ËÆæÂ§áÔºàÈîÆÁõòÔºâ\"|1(\"Áî±Ê≠§Á±ªÂîØ‰∏ÄÁöÑÂÆû‰æãË°®Á§∫ÔºàË∞ÉÁî® System.console() Ëé∑ÂæóÔºâ\"):::lp a -.- |\"Êó†ÂèØÁî®ËÆæÂ§á\"|2(\"ÂØπËØ•ÊñπÊ≥ïÁöÑË∞ÉÁî®ËøîÂõûnull\"):::info %% Â∞ÜÁî±Ê≠§Á±ªÂîØ‰∏ÄÁöÑÂÆû‰æãË°®Á§∫ÔºàÂèØÈÄöËøáË∞ÉÁî® System.console() Ëé∑ÂæóÔºâ\") classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ‚ë† ËØªÂèñ‰ø°ÊÅØ readLine()‰ªéÊéßÂà∂Âè∞ËØªÂèñËæìÂÖ•ÁöÑÂ≠óÁ¨¶‰∏≤ System.console().readLine(); /** * ‰ΩøÁî®‰∫ÜSystem.console()ÂáΩÊï∞ÂèñÂæó‰∫ÜConsoleÂØπË±°Ôºå * ÁÑ∂Âêé‰ΩøÁî®readLine()ÂáΩÊï∞Âç≥ÂèØËØªÂèñ‰∏ÄË°åÂ≠óÁ¨¶‰∏≤ÁöÑËæìÂÖ•„ÄÇËØ•ÂáΩÊï∞Âú®Áî®Êà∑ÊâßË°åÂõûËΩ¶Êó∂Ë∞ÉÁî®„ÄÇ */public class TestConsole &#123; public static void main(String args[]) &#123; while (true) &#123; String str = System.console().readLine(); // ÂèñÂæóËæìÂÖ•Â≠óÁ¨¶‰∏≤ System.out.println(str); // ËæìÂá∫Â≠óÁ¨¶‰∏≤ &#125; &#125;&#125; ‚ë° ËæìÂá∫‰ø°ÊÅØ printf()‰ªéÊéßÂà∂Âè∞ËæìÂá∫Ê∂àÊÅØ System.console().printf(str); Ê≥®ÔºöÂÖ∂ËØªÂÜôÊìç‰ΩúÊòØÂêåÊ≠•ÁöÑÔºå‰ª•‰øùËØÅÂÖ≥ÈîÆÊìç‰ΩúËÉΩÂÆåÊï¥ÂÆåÊàê„ÄÇÂõ†Ê≠§Ë∞ÉÁî®readLine()„ÄÅprintf()Êó∂ÂèØËÉΩÈòªÂ°û„ÄÇ ‚ë¢ ËØªÂèñÂØÜÁ†Å readPassword() Â∫îÁî®Á®ãÂ∫èÈúÄË¶ÅËØªÂèñÂØÜÁ†ÅÊàñÂÖ∂‰ªñÂÆâÂÖ®Êï∞ÊçÆÔºåÂàôÂ∫î‰ΩøÁî® readPassword() Êàñ readPassword(String, Object‚Ä¶)ÔºåÂπ∂Âú®ÊâßË°åÂêéÊâãÂ∑•Â∞ÜËøîÂõûÁöÑÂ≠óÁ¨¶Êï∞ÁªÑÂΩíÈõ∂Ôºå‰ª•ÊúÄÂ§ßÈôêÂ∫¶Âú∞Áº©Áü≠ÂÜÖÂ≠ò‰∏≠ÊïèÊÑüÊï∞ÊçÆÁöÑÁîüÂ≠òÊúü„ÄÇ ËØªÂèñÂØÜÁ†Å System.console().readPassword() public class TestConsolePassword &#123; public static void main(String args[]) &#123; while (true) &#123; char password[] = System.console().readPassword(); // ÂèñÂæóÂØÜÁ†Å System.out.println(password); // ËæìÂá∫Â≠óÁ¨¶‰∏≤ &#125; &#125;&#125;// ÂÆÉÁõ¥Êé•ÁõëÊéßÈîÆÁõòÁöÑËæìÂÖ•ÔºåÂõûËΩ¶ÂêéÂç≥ÂèØÂèñÂæóÂØÜÁ†ÅÂ≠óÁ¨¶‰∏≤„ÄÇ ËØªÂèñÂØÜÁ†ÅÊó∂Ê∑ªÂä†ÊèêÁ§∫‰ø°ÊÅØ System.console().readPassword(&quot;[%s]&quot;, &quot;ËØ∑ËæìÂÖ•ÂØÜÁ†ÅÔºö&quot;);// Â≠óÁ¨¶‰∏≤‚ÄúËØ∑ËæìÂÖ•ÂØÜÁ†ÅÔºö‚ÄùÂ∞Ü‰Ωú‰∏∫ÊèêÁ§∫‰ø°ÊÅØÊòæÁ§∫Âú®ÊéßÂà∂Âè∞Á™óÂè£‰∏≠„ÄÇ - end - üîñ Á¨îËÆ∞Êù•Ëá™Ôºö„ÄäJavaÈ´òÊâãÁúüÁªèÔºàÁºñÁ®ãÂü∫Á°ÄÂç∑Ôºâ„Äã","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"IO - Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ","slug":"note/Basics/IO/IO_Object_serialization","date":"2023-05-05T12:22:20.301Z","updated":"2023-05-19T16:43:55.984Z","comments":true,"path":"note/Basics/IO/IO_Object_serialization/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_Object_serialization/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ Â∫èÂàóÂåñÔºöÂ∞ÜÁ®ãÂ∫è‰∏≠ÁöÑÁªìÊûÑ‰Ωì„ÄÅÂØπË±°Á≠âÁªìÊûÑÂåñÂÜÖÂ≠òÂØπË±°ËΩ¨Êç¢‰∏∫ÊâÅÂπ≥ÁöÑ‰∫åËøõÂà∂ÊµÅÔºõÂèçÂ∫èÂàóÂåñÔºöÂ∞Ü‰∫åËøõÂà∂ÊµÅËøòÂéü‰∏∫ÁªìÊûÑÂåñÂÜÖÂ≠òÂØπË±°„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph LR subgraph \"Â∫îÁî®Â±Ç1\" A(\"ÁªìÊûÑ‰Ωì„ÄÅÂØπË±°ÔºàÂ≠óËäÇÊï∞ÁªÑÔºâ\"):::lb end subgraph \"Â∫îÁî®Â±Ç2\" B(\"ÁªìÊûÑ‰Ωì„ÄÅÂØπË±°ÔºàÂ≠óËäÇÊï∞ÁªÑÔºâ\"):::lb end subgraph ÁΩëÁªúÂçèËÆÆ C(\"‰∫åËøõÂà∂ÊµÅ\"):::p A -.-> |\"[ËΩ¨Êç¢]\"|C -.-> |\"[ËøòÂéü]\"|B end style ÁΩëÁªúÂçèËÆÆ fill:#f4e4e9, stroke-dasharray: 3 3, stroke-width: 2px classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ‰∏Ä„ÄÅÂÆûÁé∞ÊñπÂºèÔºà1ÔºâSerializable + ÈªòËÆ§Ëá™ÂÆö‰πâÁ±ªÂÆûÁé∞SerializableÔºå‰∏çÂåÖÂê´ readObject() Âíå writeObject()„ÄÇ‰ΩøÁî®ÈªòËÆ§ÁöÑÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑÊñπÂºèËøõË°åÊï∞ÊçÆÂÜôÂÖ•ÂíåËØªÂèñÊìç‰Ωú„ÄÇ * DemoÔºö public class Person implements Serializable &#123; private static final long serialVersionUID = 1L; private String name; private int age; public Person(String name, int age) &#123; this.name = name; this.age = age; &#125;&#125; Ôºà2ÔºâSerializable + Ëá™ÂÆö‰πâËá™ÂÆö‰πâÁ±ªÂÆûÁé∞SerializableÔºåÂåÖÂê´ readObject() Âíå writeObject()Ôºå‰ΩøÁî®Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÁöÑÊñπÂºèËøõË°åÊï∞ÊçÆÂÜôÂÖ•ÂíåËØªÂèñÊìç‰Ωú„ÄÇ * DemoÔºö public class Person implements Serializable &#123; private static final long serialVersionUID = 1L; private String name; private int age; public Person(String name, int age) &#123; this.name = name; this.age = age; &#125; // üîª readObject() Âíå writeObject() ÁöÑÂèØËßÅÊÄßÊ≤°ÊúâÈôêÂà∂Ôºöprivate„ÄÅprotected„ÄÅdefault„ÄÅpublic private void writeObject(ObjectOutputStream outputStream) throws Exception &#123; // ÁúÅÁï•ÂÆûÁé∞ &#125; private void readObject(ObjectIntputStream inputStream) throws Exception &#123; // ÁúÅÁï•ÂÆûÁé∞ &#125;&#125; Ôºà3ÔºâExternalizableËá™ÂÆö‰πâÁ±ªÂÆûÁé∞ ExternalizableÔºåÈáçÂÜô readExternal() Âíå writeExternal() ÂÆûÁé∞Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñÂäüËÉΩ„ÄÇ public class Person implements Externalizable &#123; private static final long serialVersionUID = 1L; private String name; private int age; // üîª Êó†ÂèÇÊûÑÈÄ†ÂáΩÊï∞ÔºöÂøÖ‰∏çÂèØÂ∞ëÁöÑÔºåÂê¶Âàô‰ºöÊäõÂºÇÂ∏∏ public Person() &#123;&#125; // üîª ÂèØËßÅÊÄßÊ≤°ÊúâÈôêÂà∂Ôºöprivate„ÄÅprotected„ÄÅdefault„ÄÅpublic private void readExternal(ObjectInput in) throws IOException, ClassNotFoundException &#123; // ÁúÅÁï•ÂÆûÁé∞ &#125; private void writeExternal(ObjectOutput out) throws IOException &#123; // ÁúÅÁï•ÂÆûÁé∞ &#125;&#125; ‰∫å„ÄÅÊ†∏ÂøÉÁ±ªgraph LR t([Â∫èÂàóÂåñÊ†∏ÂøÉÁ±ª]):::g t --> A(\"‚ë¥ Serializable\"):::lg t --> B(\"‚ëµ Externalizable\"):::lg t --> |\"[ Â∫èÂàóÂåñÂÖ≥ÈîÆÁ±ª ]\"|C(\"‚ë∂ ObjectOutputStreamÂ∞ÜÂØπË±°ËΩ¨Êç¢‰∏∫‰∫åËøõÂà∂ÊµÅ\"):::p t --> |\"[ ÂèçÂ∫èÂàóÂåñÂÖ≥ÈîÆÁ±ª ]\"|D(\"‚ë∑ ObjectInputStreamÂ∞Ü‰∫åËøõÂà∂ÊµÅËøòÂéü‰∏∫ÂØπË±°\"):::p C -.- c([ÂÜÖÈÉ®ÂÖ≥ÈîÆÁ±ª]):::info c -.-> c1([\"‚ë† BolckDataOutputStream - ÁºìÂÜ≤\"]):::lp c -.-> c2([\"‚ë° HandleTable - Èò≤Ê≠¢ÈáçÂ§ç\"]):::lp c -.-> c3([\"‚ë¢ ReplaceTable - Ëá™ÂÆö‰πâÂ∫èÂàóÂåñ\"]):::lp c -.-> c4([\"‚ë£ ObjecyStreamClass - ËÆ∞ÂΩïÂÖÉÊï∞ÊçÆ„ÄÅÂèçÂ∞Ñ\"]):::lp classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#56565b,stroke-dasharray: 3 3, stroke-width: 2px Ôºà1ÔºâSerializableSerializable ÊòØ‰∏Ä‰∏™Á©∫Êé•Âè£ÔºåË°®Êòé‰∫ÜÂÆûÁé∞Ëá™ËØ•Êé•Âè£ÁöÑÂ≠êÁ±ªÂÖ∑ÊúâÂ∫èÂàóÂåñË°å‰∏∫ÁâπÂæÅÔºåÊâÄÊúâË¶ÅÊîØÊåÅÂ∫èÂàóÂåñÁöÑÁ±ªÈÉΩÂ∫îËØ•ÂÆûÁé∞Ëøô‰∏™Êé•Âè£„ÄÇ * Ê∫êÁ†ÅÔºö public interface Serializable &#123;&#125; Ôºà2ÔºâExternalizablewriteExternalÁöÑÂèÇÊï∞ÔºöObjectOutputÔºåË°®Á§∫ËæìÂá∫ÂØπË±°ÁöÑÊäΩË±°ÔºàÂÆÉÁªßÊâøËá™DataOutputÔºåËÉΩÊîØÊåÅÂü∫Êú¨Á±ªÂûã„ÄÅString„ÄÅÊï∞ÁªÑ„ÄÅÂØπË±°ÁöÑËæìÂá∫„ÄÇÂÆûÈôÖÂ∫îÁî®‰ºö‰ΩøÁî®ÂÖ∂ÂÆûÁé∞Á±ª ObjectOutputStream„ÄÇ readExternalÁöÑÂèÇÊï∞ÔºöObjectInputÔºåË°®Á§∫ËæìÂÖ•ÂØπË±°ÁöÑÊäΩË±°ÔºàÂÆÉÁªßÊâøËá™DataInputÔºåËÉΩÊîØÊåÅÂü∫Êú¨Á±ªÂûã„ÄÅString„ÄÅÊï∞ÁªÑ„ÄÅÂØπË±°ÁöÑËæìÂÖ•„ÄÇÂÆûÈôÖÂ∫îÁî®‰ºö‰ΩøÁî®ÂÖ∂ÂÆûÁé∞Á±ª ObjectInputStream„ÄÇ * Ê∫êÁ†ÅÔºö public interface Externalizable extends Serializable &#123; // üîª Ëá™ÂÆö‰πâÁöÑÁ±ªÂøÖÈ°ªË¶ÜÁõñ writeExternal Âíå readExternal ÊñπÊ≥ï„ÄÇ void writeExternal(ObjectOutput out) throws IOException; void readExternal(ObjectInput in) throws IOException, ClassNotFoundException; // üîª Ëá™ÂÆö‰πâÁöÑÁ±ªÂøÖÈ°ªÂåÖÂê´Êó†ÂèÇÊûÑÈÄ†ÂáΩÊï∞„ÄÇ&#125; Ôºà3ÔºâObjectOutputStream‚ë† BlockDataOutputStreamObjectOutputStream ÂÜÖÁΩÆÁöÑÂÖ∑ÊúâÁºìÂÜ≤‰ΩúÁî®ÁöÑËæìÂá∫ÂäüËÉΩÁ±ªÔºåÂåÖÂê´ÈòªÂ°ûÂíåÈùûÈòªÂ°û‰∏§ÁßçÂ∑•‰ΩúÊ®°Âºè„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph LR T(\"BlockDataOutputStream - ÁºìÂÜ≤\"):::p T --> A(\"ÈòªÂ°ûÊ®°Âºè\"):::lp T --> B(\"ÈùûÈòªÂ°ûÊ®°Âºè\"):::lp A -.- t(\"ÊØèÊ¨°Â∞ÜÁºìÂÜ≤Âå∫Êï∞ÊçÆÂÜôÂÖ•Ââç‰ºöÂÜôÂÖ•‰∏Ä‰∏™ÈòªÂ°ûÊ†áËÆ∞Â§¥ÈÉ®ÔºàBlock Data HeaderÔºâ\"):::info classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#56565b,stroke-dasharray: 3 3, stroke-width: 2px * ‰∏§ÁßçÊ®°ÂºèÁöÑÂ∑•‰ΩúÊµÅÁ®ãÁõ∏ÂêåÔºåÈÉΩÊòØÂÖàÊääÂæÖÂÜôÁöÑÊï∞ÊçÆÂÜôÂà∞ÁºìÂÜ≤Âå∫ÔºåÁõ¥Âà∞ÁºìÂÜ≤Âå∫Êª°ÂêéÂÜçÊâßË°åÁúüÊ≠£ÁöÑÂÜôÂÖ•Êìç‰Ωú„ÄÇ ‚ë° HandleTableÂΩìÂâçÂæÖÂ∫èÂàóÂåñÁöÑÂØπË±°(A)ÔºåÂèØËÉΩÂåÖÂê´Â§ö‰∏™ÂÖ∂‰ªñÂØπË±°Á±ªÂûãÁöÑÊàêÂëòÂèòÈáèÔºåËÄåËøô‰∫õÊàêÂëòÂèòÈáèÂèØËÉΩÂºïÁî®Âêå‰∏Ä‰∏™ÂØπË±°TÔºö %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% classDiagram class A class B class C class TÂØπË±° A: b B A: c C B: t T C: t T A *-- B A *-- C C *-- TÂØπË±° B *-- TÂØπË±° ‰∏∫‰∫Ü‰ΩøÂæóÂú®Â∫èÂàóÂåñAÂØπË±°Êó∂Ôºå‰∏çÈáçÂ§çÂ∫èÂàóÂåñTÂØπË±°ÔºåÂºïÂÖ•‰∫ÜÂØπË±°ÂíåÂè•ÊüÑÁöÑÊò†Â∞ÑÂÖ≥Á≥ª„ÄÇ Âè•ÊüÑ‰ªé0ÂºÄÂßãÊåâÈÄíÂ¢ûÈ°∫Â∫èËá™Â¢û„ÄÇÊØèÂΩìË¶ÅÂÜôÂÖ•‰∏Ä‰∏™ObjectÁ±ªÂûãÂØπË±°Êó∂ÔºåÂéª HandleTable Êü•ËØ¢ÂÖ∂ÊòØÂê¶Â∑≤ÁªèÂ≠òÂú®Ôºö ‚ù∂ Â¶ÇÊûúÂ≠òÂú®ÔºåÂàôËØ¥ÊòéÂ∑≤ÁªèÂÜôÂÖ•ËøáÔºåÊú¨Ê¨°Âè™ÂÜôÂÖ•Âè•ÊüÑÂç≥ÂèØÔºõ‚ù∑ Â¶ÇÊûú‰∏çÂ≠òÂú®ÔºåÂàôËØ¥ÊòéÊ≤°ÊúâË¢´ÂÜôÂÖ•ËøáÔºåÈúÄË¶ÅÂÜôÂÖ•ËØ•ÂØπË±°„ÄÇ ‚ë¢ ReplaceTable‰∏∫‰∫ÜÊîØÊåÅÁî®Êà∑Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñË°å‰∏∫ÔºàJavaÂ∫èÂàóÂåñÊîØÊåÅÂØπÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñËøõË°åÊã¶Êà™Âπ∂ÊâßË°åËá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñË°å‰∏∫„ÄÇÔºâ ReplaceTable Áî®Êù•ÁÆ°ÁêÜÊ∫êÂØπË±°ÂíåÁõÆÊ†áÊõøÊç¢ÂØπË±°ÔºåÂú®Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñËøáÁ®ã‰∏≠ÔºåÈÄöËøáÊ∫êÂØπË±°Êü•ÊâæÁõÆÊ†áÊõøÊç¢ÂØπË±°Ôºö ‚ù∂ Â¶ÇÊûúÂ≠òÂú®ÁõÆÊ†áÊõøÊç¢ÂØπË±°ÔºåÂàô‰ΩøÁî®ÁõÆÊ†áÊõøÊç¢ÂØπË±°Ôºõ‚ù∑ Âê¶Âàô‰ΩøÁî®Ê∫êÂØπË±°„ÄÇ ‚ë£ ObjectStreamClassËÆ∞ÂΩï‰∫ÜÂíåÂ∫èÂàóÂåñÂØπË±°Áõ∏ÂÖ≥ÁöÑÂÖÉÊï∞ÊçÆ‰ø°ÊÅØÔºåÂπ∂Ë¥üË¥£Áõ∏ÂÖ≥ÊñπÊ≥ïÁöÑÂèçÂ∞ÑÂàùÂßãÂåñÂíåÊâßË°å„ÄÇ Â≠óÊÆµ Â≠óÊÆµÊÑè‰πâ name Â∫èÂàóÂåñÁ±ªÁöÑÂÆåÊï¥Á±ªÂêç cl Â∫èÂàóÂåñÁ±ªÁöÑClassÁ±ªÂûã suid Â∫èÂàóÂåñÁ±ªÁöÑserialVersionUID isProxy ÊòØÂê¶‰∏∫‰ª£ÁêÜÁ±ª isEnum ÊòØÂê¶‰∏∫Êûö‰∏æÁ±ª serializable ÊòØÂê¶ÂÆûÁé∞‰∫ÜSerializable externalizable ÊòØÂê¶ÂÆûÁé∞‰∫ÜExternalizable primDataSize Âü∫Êú¨Á±ªÂûãÁöÑÊàêÂëòÂ≠óÊÆµ‰∏™Êï∞Ôºå‰∏çÂåÖÂê´staticÂíåtransientÁ±ªÂûãÂ≠óÊÆµ numObjFileds ÈùûÂü∫Êú¨Á±ªÂûãÁöÑÊàêÂëòÂ≠óÊÆµ‰∏™Êï∞ dataLayout Á±ªÂ±ÇÊ¨°ÁªìÊûÑÔºöÂΩìÂâçÁ±ª„ÄÅÁà∂Á±ªÂèäÊâÄÊúâÁªßÊâøÁ±ªÁöÑÁ±ªÊèèËø∞ writeObjectMethod writeObjectÊñπÊ≥ïÔºåÈÄöËøáÂèçÂ∞ÑËé∑Âèñ readObjectMethod readObjectÊñπÊ≥ïÔºåÈÄöËøáÂèçÂ∞ÑËé∑Âèñ writeReplaceMethod writeReplaceÊñπÊ≥ïÔºåÈÄöËøáÂèçÂ∞ÑËé∑Âèñ readReplaceMethod readReplaceÊñπÊ≥ïÔºåÈÄöËøáÂèçÂ∞ÑËé∑Âèñ Ôºà4ÔºâObjectInputStreamjava.io.ObjectInputStream ÊòØÂÆûÁé∞JavaÂèçÂ∫èÂàóÂåñÁöÑÂÖ≥ÈîÆÁ±ªÔºåÂíå ObjectOutputStream ÊòØÂØπÂ∫îÁöÑÔºåÂÜÖÈÉ®ÂåÖÂê´‰∫Ü BlockDataInputStream„ÄÅHandleTable„ÄÅReplaceTable„ÄÅObjectStreamClassÁ≠â ‰∏â„ÄÅÂÜÖÈÉ®ÂéüÁêÜJavaÂ∫èÂàóÂåñÁöÑÊµÅÁ®ã„ÄÅÂéüÁêÜÔºå‰ª•ÂèäÂêÑÁßçÁ±ªÂûãÊï∞ÊçÆËøõË°åJavaÂ∫èÂàóÂåñÂêéÁöÑÊ†ºÂºèÂíåÂç†Áî®Á©∫Èó¥Â§ßÂ∞èÁ≠âÁªÜËäÇ„ÄÇ JavaÂ∫èÂàóÂåñÂØπÊï¥ÂûãÊï∞ÊçÆÈááÁî®Âõ∫ÂÆö4Â≠óËäÇÂ≠òÂÇ®ÔºåËÄåProtocol BufferÂØπÊï¥ÂûãÊï∞ÊçÆÈááÁî®ÂèòÈïøÂ≠òÂÇ®Ôºå‰ΩøÂæóÂ≠òÂÇ®Á©∫Èó¥Ëøõ‰∏ÄÊ≠•ÂáèÂ∞è„ÄÇ Ôºà1ÔºâÂü∫Êú¨Á±ªÂûãÁöÑÂ∫èÂàóÂåñÊµÅÁ®ãJavaÂ∫èÂàóÂåñÂØπÂü∫Êú¨Á±ªÂûãÊï∞ÊçÆÁöÑÂ§ÑÁêÜÔºå‰∏•Ê†ºÊåâÁÖßÂÖ∂ÂÜÖÂ≠òÂç†Áî®Â§ßÂ∞èÊù•ËøõË°å„ÄÇÊØîÂ¶ÇintÁ±ªÂûãÂç†Áî®4Â≠óËäÇÔºåJavaÂ∫èÂàóÂåñÊåâÁÖßÈ´ò‰ΩçÂà∞‰Ωé‰Ωç‰æùÊ¨°ÊîæÂà∞Â≠óËäÇÊï∞ÁªÑÔºåÂÜçÂÜôÂÖ•Âà∞Â∫èÂàóÂåñËæìÂá∫ÂØπË±°Ôºö ÂÜôÂÖ•intÁ±ªÂûãÊï∞ÊçÆÔºö graph TD subgraph \"ObjectOutputStream.java\" A([\"writeInt()\"]):::p end subgraph \"BlockDataOutputStreamÔºàÂÜÖÈÉ®Á±ªÔºâ\" A ==> |\"Ë∞ÉÁî®\"|B([\"writeInt()\"]):::p B --- b[\"1024Â≠óËäÇÂ§ßÂ∞èÁöÑÁºìÂÜ≤Âå∫\"]:::lb b -.-> |\"‚ë† ÁºìÂÜ≤Âå∫ËøòÂèØÂÆπÁ∫≥ÂæÖÂÜôÂÖ•ÁöÑintÁ±ªÂûãÊï∞ÊçÆ\"|b1(\"ÊääÂΩìÂâçÊï∞ÊçÆÊîæÂÖ•ÁºìÂÜ≤Âå∫\"):::lg B2([\"write()\"]):::p B2 --- 2b[\"ÁºìÂÜ≤Âå∫\"]:::lb 2b -.-> |\"‚ë† ÁºìÂÜ≤Âå∫ËÉΩÂÆπÁ∫≥ÂΩìÂâçÂæÖÂÜôÂÖ•Â≠óËäÇ\"|2b1(\"ÊääÂΩìÂâçÂ≠óËäÇÂÜôÂÖ•ÁºìÂÜ≤Âå∫\"):::lg 2b -.-> |\"‚ë° ÁºìÂÜ≤Âå∫Â∑≤Êª°\"|2b2(\"ÊääÁºìÂÜ≤Âå∫ÁöÑÊï∞ÊçÆËæìÂá∫ÔºåÂÜçÊääÂΩìÂâçÂæÖÂÜôÂÖ•Â≠óËäÇÊîæÂà∞ÁºìÂÜ≤Âå∫\"):::lg end b -.-> |\"‚ë° ÁºìÂÜ≤Âå∫‰∏çËÉΩÂÆπÁ∫≥ÂæÖÂÜôÂÖ•ÁöÑintÁ±ªÂûãÊï∞ÊçÆ\"|C subgraph \"DataOutputStream.java\" C([\"writeInt()\"]):::p C --> d(\"ÊåâÁÖß‰ªéÈ´òÂà∞‰ΩéÁöÑÂ≠óËäÇÈ°∫Â∫è‰æùÊ¨°ÂÜôÂÖ•4‰∏™Â≠óËäÇ\"):::lg d ==> |\"Ë∞ÉÁî®\"|B2 end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ObjectOutputStream ÁöÑ writeInt()Ôºö public void writeInt(int val) throws IOException &#123; // üîª ÁúüÊ≠£ÁöÑÂÜôÂÖ•ÊòØÈÄöËøáË∞ÉÁî® BlockDataOutputStreamÔºàboutÔºâ // ÁöÑ writeInt ÊñπÊ≥ïÂÆûÁé∞ÁöÑ bout.writeInt(val); &#125; BlockDataOutputStream ÁöÑ writeInt()Ôºö public void writeInt(int v) throws IOException &#123; // üîª BlockDataOutputStreamÂÜÖÈÉ®Áª¥Êä§‰∫Ü‰∏Ä‰∏™1024Â≠óËäÇÂ§ßÂ∞èÁöÑÁºìÂÜ≤Âå∫ if (pos + 4 &lt;= MAX_BLOCK_SIZE) &#123; // MAX_BLOCK_SIZE = 1024 // üîπ Ëã•ÁºìÂÜ≤Âå∫ËøòÂèØ‰ª•ÂÆπÁ∫≥ÂÜôÂÖ•ÁöÑintÁ±ªÂûãÊï∞ÊçÆÔºöÂ∞ÜÊï∞ÊçÆÊîæÂÖ•ÁºìÂÜ≤Âå∫ Bits.putInt(buf, pos, v); pos += 4; &#125; else &#123; // üîπ Ëã•ÁºìÂÜ≤Âå∫Êó†Ê≥ïÂÆπÁ∫≥ÔºöË∞ÉÁî® DataOutputStream ÁöÑ writeInt() dout.writeInt(v) &#125; &#125; DataOutputStream ÁöÑ writeInt()Ôºö // üîª intÁ±ªÂûãÊòØÊåâÁÖß‰ªéÈ´òÂà∞‰ΩéÁöÑÂ≠óËäÇÈ°∫Â∫è‰æùÊ¨°ÂÜôÂÖ•4‰∏™Â≠óËäÇÁöÑpublic final void writeInt(int v) throws IOException &#123; // outÔºöBlockDataOutputStream out.write((v &gt;&gt;&gt; 24) &amp; 0xFF); out.write((v &gt;&gt;&gt; 16) &amp; 0xFF); out.write((v &gt;&gt;&gt; 8) &amp; 0xFF); out.write((v &gt;&gt;&gt; 0) &amp; oxFF); incCount(4);&#125; BlockDataOutputStream ÁöÑ write() Ôºö public void write(int b) throws IOEception &#123; // üîπ Ëã•ÁºìÂÜ≤Âå∫Â∑≤Êª°ÔºöÂ∞ÜÁºìÂÜ≤Âå∫Êï∞ÊçÆÊé®Âá∫ if(pos &gt;= MAX_BLOCK_SIZE) &#123; drain(); &#125; // üîπ Â∞ÜÂæÖÂÜôÂÖ•Â≠óËäÇÂÜôÂÖ•ÁºìÂÜ≤Âå∫ buf[pos++] = (byte) b;&#125;void drain() throws IOException &#123; // .. // üî∏ Â∞ÜbufÁºìÂÜ≤Âå∫Â∑≤ÊúâÊï∞ÊçÆËæìÂá∫ out.write(buf, 0, pos); pos = 0;&#125; ÔºàÂÖ∂‰ªñÂü∫Êú¨Á±ªÂûãÊï∞ÊçÆÁöÑÂÜôÂÖ•ÊµÅÁ®ã‰∏éÊ≠§Á±ª‰ººÔºâ Ôºà2ÔºâÂü∫Êú¨Á±ªÂûãÁöÑÂ∫èÂàóÂåñÂ§ßÂ∞è Êï∞ÊçÆÁ±ªÂûã JavaÂÜÖÂ≠ò‰∏≠ÁöÑÂ§ßÂ∞è Â∫èÂàóÂåñÂêéÁöÑÂ§ßÂ∞è Â∫èÂàóÂåñÊìç‰ΩúÔºàÂÅáËÆæÂèòÈáè‰∏∫VÔºâ boolean 1 Êï¥Êï∞1Êàñ0ÁöÑÊúÄ‰Ωé‰∏Ä‰∏™Â≠óËäÇ write(v ? 1 : 0) byte 1 1 write(v) char 2 2 È´ò‰ΩçÂ≠óËäÇÂÖàÂÜôÂÖ•write((v&gt;&gt;&gt;8) &amp; 0xFF) write((v&gt;&gt;&gt;0) &amp; 0xFF) short 2 2 È´ò‰ΩçÂ≠óËäÇÂÖàÂÜôÂÖ• write((v&gt;&gt;&gt;8) &amp; 0xFF) write((v&gt;&gt;&gt;0) &amp; 0xFF) int 4 4 È´ò‰ΩçÂ≠óËäÇÂÖàÂÜôÂÖ• write((v&gt;&gt;&gt;24) &amp; 0xFF) write((v&gt;&gt;&gt;16) &amp; 0xFF) write((v&gt;&gt;&gt;8) &amp; 0xFF) write((v&gt;&gt;&gt;0) &amp; 0xFF) long 8 8 È´ò‰ΩçÂ≠óËäÇÂÖàÂÜôÂÖ• write((v&gt;&gt;&gt;56) &amp; 0xFF) write((v&gt;&gt;&gt;48) &amp; 0xFF) write((v&gt;&gt;&gt;40) &amp; 0xFF) write((v&gt;&gt;&gt;32) &amp; 0xFF) write((v&gt;&gt;&gt;24) &amp; 0xFF) write((v&gt;&gt;&gt;16) &amp; 0xFF) write((v&gt;&gt;&gt;8) &amp; 0xFF) write((v&gt;&gt;&gt;0) &amp; 0xFF) float 4 4 Á¨¶ÂêàIEEE754Ê†áÂáÜÁöÑ4Â≠óËäÇ double 8 8 Á¨¶ÂêàIEEE754Ê†áÂáÜÁöÑ8Â≠óËäÇ Ôºà3ÔºâÂØπË±°Á±ªÂûãÁöÑÂ∫èÂàóÂåñÊµÅÁ®ãJavaÂ∫èÂàóÂåñÂØπÈùûÂü∫Êú¨Á±ªÂûãÁöÑÊï∞ÊçÆÂ§ÑÁêÜÊØîÂü∫Êú¨Á±ªÂûãÁöÑÊï∞ÊçÆÂ§ÑÁêÜÊõ¥Â§çÊùÇÔºåËøôÈáåËØ¥ÁöÑÈùûÂü∫Êú¨Á±ªÂûãÂåÖÊã¨Object„ÄÅEnum„ÄÅArrayÁ≠â ‚Äî‚Äî ÈÄöËøá ObjectOutputStream ÁöÑ writeObject ÊñπÊ≥ïÂÆûÁé∞ÁöÑÔºö ‚ûä writeObject()graph TD %%subgraph \"ObjectOutputStream\" A([\"writeObject()\"]):::p subgraph \"ObjectOutputStream.java\" A --> |\"[ Ë∞ÉÁî® ]\"|B([\"writeObject0()\"]):::p B --> |\"Ê†∏ÂøÉÂÆûÁé∞\"|b(\"ifÂàÜÊîØÔºöÂà§Êñ≠objÁ±ªÂûã\"):::lb end subgraph \"String / Enum\" b -...- 1t([\"writeString()\"]):::lp b -...- 3t([\"writeEnum()\"]):::lp 1t -.-> 1a(\"ÂÆûÁé∞Ëá™SerializableÔºåÂÖ∑Â§áÊîØÊåÅÂ∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñÁöÑËÉΩÂäõ\"):::info 3t -.-> 1a end subgraph \"Array\" b -.- 2t([\"writeArray()\"]):::lp 2t -.-> |\"Âü∫Êú¨Á±ªÂûã\"|2a(\"Ë∞ÉÁî®Âü∫Êú¨Á±ªÂûãÁöÑÂ∫èÂàóÂåñÊñπÂºè\"):::lg 2t -.-> |\"ObjectÁ±ªÂûã\"|2b(\"ÈÄíÂΩíË∞ÉÁî®ÊâßË°åifÂàÜÊîØ\"):::lb %% 2a -.-> b end subgraph \"Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñÁ±ª\" b -.....- 4a([\"writeOrdinaryObject()\"]):::lp 4a -.-> |\"ExternalizableÁ±ªÂûã‰∏î‰∏çÊòØÂä®ÊÄÅ‰ª£ÁêÜÁ±ª\"|4a1([\"writeExternalData()\"]):::p 4a -.-> |\"SerializableÁ±ªÂûã\"|4a2([\"writeSerialData()\"]):::p end %%end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ObjectOutputStream ÁöÑ writeObject() ÂÜÖÈÉ®ÂÆûÁé∞Ê†∏ÂøÉÈÉ®ÂàÜÔºö public final void writeObject(Object obj) throws IOEXception &#123; // üîπ ÂΩìÂâçÁ±ªÊòØÂê¶ÊòØ ObjectOutputStream ÁöÑÂ≠êÁ±ª if(enableOverride) &#123; writeObjectOverride(obj); return; &#125; // üîπ ÊâßË°åÂØπË±°ÂÜôÂÖ•ÔºåfalseË°®Á§∫ÂÖ±‰∫´ÂÜôÂÖ• try &#123; writeObject0(obj, false); // üîª &#125; catch (IOEception ex) &#123;&#125; &#125; writeObject0() ÁöÑÂèÇÊï∞Ôºö objÔºöË°®Á§∫Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñÂØπË±°ÊàñËÄÖArray„ÄÅEnumÁ±ªÂûãÂØπË±°„ÄÇ Á¨¨2‰∏™ÂèÇÊï∞ÔºöË°®Á§∫‰∏Ä‰∏™ÂØπË±°Ë¢´Â§ö‰∏™ÂØπË±°ÂÖ±ÂêåÂºïÁî®Êó∂ÔºåÂú®Â∫èÂàóÂåñÁöÑÊó∂ÂÄôÊòØÂê¶Ë¶ÅÂÖ±‰∫´ÂÜôÂÖ• %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR B([\"writeObject0() ÂèÇÊï∞:\"]):::p B -.- b(\"‚ë† Ë¢´ÂºïÁî®ÁöÑÂØπË±°ÂÆû‰æãobj, ‚ë° ÊòØÂê¶ÂÖ±‰∫´ÂÜôÂÖ•\"):::lp subgraph \"[ false ]: ÂÖ±‰∫´ÂÜôÂÖ•\" b1 end subgraph \"[ true ]: ‰∏çÂÖ±‰∫´ÂÜôÂÖ•\" b2 end b --- |\"ÈªòËÆ§\"|b1(\"objÂè™‰ºöË¢´Â∫èÂàóÂåñ‰∏ÄÊ¨°ÔºåÂÖ∂‰ªñÂºïÁî®Âè™‰ºöÂÜôÂÖ•ÂºïÁî®ÂØπË±°Âè•ÊüÑ\"):::lg b -.- b2(\"obj‰ºöË¢´Â∫èÂàóÂåñÂ§öÊ¨°ÔºåÂ∫èÂàóÂåñÂêéÁöÑÊï∞ÊçÆÂ§ßÂ∞è‰ºöÂ¢ûÂä†\"):::lg classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px writeObject0() Ê†∏ÂøÉÂÆûÁé∞Ôºö if (obj instanceof String) &#123; // üîπ StringÁ±ªÔºöÂÆûÁé∞Ëá™SerializableÔºåÂÖ∑Â§áÊîØÊåÅÂ∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñËÉΩÂäõ writeString((String) obj, unshared); &#125; else if (cl.isArray()) &#123; // üîπ ArrayÁ±ªÔºö‚ë†Âü∫Êú¨Á±ªÂûãÔºöË∞ÉÁî®Âü∫Êú¨Á±ªÂûãÂ∫èÂàóÂåñÊñπÂºè ‚ë°ObjectÁ±ªÂûãÔºöÈÄíÂΩíif writeArray(obj, desc, unshared); &#125; else if (obj instanceof Enum) &#123; // üîπ EnumÁ±ªÔºöÂÆûÁé∞Ëá™SerializableÔºåÂÖ∑Â§áÊîØÊåÅÂ∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñËÉΩÂäõ writeEnum((Exum&lt;?&gt;) obj, desc, unshared); &#125; else if (obj instanceof Serializable) &#123; // üîª Ëá™ÂÆö‰πâÁöÑÁ±ªÂÆûÁé∞‰∫Ü SerializableÔºöÊâßË°åwriteOrdinaryObjectÊñπÊ≥ï writeOrdinaryObject(obj, desc, unshared); &#125; else &#123; if(extendedDebugInfo) &#123; throw new NotSerializableException(cl.getName() + &quot;\\n&quot; + debugInfoStack.toString()); &#125; else &#123; // ‚≠ïÔ∏è Ë¶ÅËÉΩÂ§üË¢´ObjectOutputStreamÁöÑwriteObjectÊñπÊ≥ïÂ∫èÂàóÂåñÔºåÂØπË±°ÂøÖÈ°ª // ÂÆûÁé∞Ëá™SerializableÔºåÂê¶Âàô‰ºöÊäõNotSerializableExceptionÂºÇÂ∏∏ throw new NotSerializableException(cl.getName()); &#125;&#125; writeOrdinaryObject() Ê†∏ÂøÉÂÆûÁé∞Ôºö // Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñÁ±ªÔºöwriteClassDesc(desc, false); // ÂÜôÂÖ•Á±ªÊèèËø∞‰ø°ÊÅØhandles.assign(unshared ? null : obj);// üîª Ëã•Ëá™ÂÆö‰πâÁöÑÁ±ªÊòØExternalizableÁ±ªÂûãÔºöË∞ÉÁî®writeExternalDataÊñπÊ≥ïif (desc.isExternalizable() &amp;&amp; !desc.isProxy()) &#123; writeExternalData((Externalizable) obj); // üîª Ëã•Ëá™ÂÆö‰πâÁöÑÁ±ªÊòØSerializableÁ±ªÂûãÔºöË∞ÉÁî®writeSerialDataÊñπÊ≥ï&#125; else &#123; writeSerialData(obj, desc);&#125; ‚ûã writeSerialData()writeOrdinaryObjectÊñπÊ≥ïÂÆûÁé∞‰∏≠ÔºåÂ¶ÇÊûúËá™ÂÆö‰πâÁ±ªÂÆûÁé∞SerializableÔºåÂàô‰ºöË∞ÉÁî® writSerialData() ÂÆûÁé∞Â∫èÂàóÂåñÔºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph subgraph \"writeSerialData()\" A([\"desc.getClassDataLayout()\"]):::lp A --> |\"ËøîÂõûÂÄº\"|b([\"ClassDataSlotÁ±ªÂûãÊï∞ÁªÑ\"]):::b %% Êï∞ÁªÑÂÖÉÁ¥†È°∫Â∫èÔºö‰ªéÊúÄÊ†πÈÉ®ÁöÑÁ•ñÂÖàÂà∞ÂΩìÂâçÁ±ª„ÄÇ b -.- 1(\"ÔºàObjectStreamClassÔºâdesc\"):::lb b -.- 2(\"ÔºàbooleanÔºâhasData\"):::lb b -.- 3(\"... ...\"):::lb 1 --> |\"Âà§Êñ≠Êï∞ÁªÑÂÖÉÁ¥†ÂØπÂ∫îÁöÑÁ±ªÊòØÂê¶ÂåÖÂê´ writeObject ÊñπÊ≥ï\"|t([\"desc.hasWriteObjectMethod()\"]):::lp end subgraph \"ObjectStreamClass.java\" t -.-> |\"[ ÂåÖÂê´ ]ÂèçÂ∞ÑË∞ÉÁî®\"|1a([\"invokeWriteObject()\"]):::p 1a --> 2a([\"writeObjectMethod.invoke() ‚úîÔ∏é\"]):::lp end t -.-> |\"[ Êú™ÂåÖÂê´ ]\"|1b([\"defaultWriteFields()\"]):::p subgraph \"defaultWriteFiled()\" 1b --> |\"‚ë† ÂÖàÂÜôÂÖ•Âü∫Êú¨Á±ªÂûãÁöÑÂ≠óÊÆµ\"|2b([\"bout.write()\"]):::lp 2b --> |\"‚ë° ÂÜôÂÖ•ÂØπË±°Á±ªÂûãÁöÑÂ≠óÊÆµ\"|3b([\"writeObject0() ‚úîÔ∏é\"]):::lp end classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ‚ë¥ Â≠óÊÆµ Â≠óÊÆµËØ¥ÊòéÔºö Â≠óÊÆµ Á±ªÂûã ËØ¥Êòé getClassDataLayout() ClassDataSlot[] Ëé∑ÂèñÂΩìÂâçÁ±ªÂèäÁªßÊâøÈìæË∑Ø‰∏äÊâÄÊúâÁõ¥Êé•ÊàñÈó¥Êé•ÂÆûÁé∞‰∫Ü Serializable ÁöÑÁ•ñÂÖàÁ±ªÂØπÂ∫îÁöÑÂ∫èÂàóÂåñÂÖÉÊï∞ÊçÆ‰ø°ÊÅØ„ÄÇ* Êï∞ÁªÑÂÖÉÁ¥†È°∫Â∫èÔºö‰ªéÊúÄÊ†πÈÉ®ÁöÑÁ•ñÂÖàÂà∞ÂΩìÂâçÁ±ª„ÄÇ desc ObjectStreamClass ËÆ∞ÂΩï‰∫ÜÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÂØπË±°Áõ∏ÂÖ≥ÁöÑÂÖÉÊï∞ÊçÆ‰ø°ÊÅØÔºåÂπ∂Ë¥üË¥£Áõ∏ÂÖ≥ÊñπÊ≥ïÁöÑÂèçÂ∞ÑÂàùÂßãÂåñÂíåÊâßË°å„ÄÇ hasData boolean Ë°®Á§∫descÂØπÂ∫îÁöÑJavaÂØπË±°ÊòØÂê¶ÊúâÊï∞ÊçÆË¢´Â∫èÂàóÂåñ„ÄÇ DemoÔºögetClassDataLayout() ÂΩìÂ∫èÂàóÂåñ MyPeople ÂØπË±°Êó∂ÔºågetClassDataLayout() ËøîÂõûÁöÑÊï∞ÁªÑÂ§ßÂ∞èÔºö1 ClassDataSlot[0] = MyPeople Á±ªÂØπÂ∫îÁöÑ ObjecStreamClass public class People &#123; // ... &#125;public class MyPeople extends People implements Serializable &#123; // ... &#125; ÂΩìÂ∫èÂàóÂåñ MyPeople ÂØπË±°Êó∂ÔºågetClassDataLayout() ËøîÂõûÁöÑÊï∞ÁªÑÂ§ßÂ∞èÔºö2 ClassDataSlot[0] = People Á±ªÂØπÂ∫îÁöÑ ObjectStreamClas ClassDataSlot[1] = MyPeople Á±ªÂØπÂ∫îÁöÑ ObjecStreamClass public class People implements Serializable &#123; // ... &#125;public class Mypeople extends Prople &#123; // ... &#125; ‚ëµ Ê∫êÁ†Å writeSerialData()Ôºö private void writeSerialData(Object obj, ObjectStreamCLass desc) throws IOException &#123; // üî¥ ÂØπ‰∫éClassDataSlotÊï∞ÁªÑÁöÑÊØè‰∏Ä‰∏™ÂÖÉÁ¥†Ôºå // Â¶ÇÊûúËØ•ÂÖÉÁ¥†ÂØπÂ∫îÁöÑÁ±ªÂåÖÂê´writeObjectÊñπÊ≥ïÔºåÂàôË∞ÉÁî®writeObjetÊñπÊ≥ï„ÄÇ ObjectStreamClass.ClassDataSlot[] slots = desc.getClassDataLayout(); // Ëé∑ÂèñÂΩìÂâçÂæÖÂÜôÂÖ•ObjectÁ±ªÊèèËø∞‰ø°ÊÅØ for (int i = 0; i &lt; slots.length; i++) &#123; ObjectStreamClass slotDesc = slots[i].desc; // üîπ ‚ë† Ëã•Êúâ writeObject ÊñπÊ≥ïÔºöÂèçÂ∞ÑË∞ÉÁî® if (slotDesc.hasWriteObjectMethod()) &#123; // ... try &#123; // ... // üîª ÂèçÂ∞ÑË∞ÉÁî®objÈáåÁöÑ writeObject ÊñπÊ≥ï slotDesc.invokeWriteObject(obj, this); &#125; finally &#123; // ... &#125; // üîπ ‚ë° Ëã•Êó† writeObject ÊñπÊ≥ïÔºöüîª Ë∞ÉÁî®ÈªòËÆ§ÊñπÊ≥ï &#125; else &#123; defaultWriteFileds(obj, slotDesc); &#125; &#125;&#125; ObjectStreamClass ÁöÑ invokeWriteObject() ÂÜÖÈÉ®ÂÆûÁé∞Ôºö // üî¥ wirteObject ÊñπÊ≥ï‰ª•ÂèçÂ∞ÑÊñπÂºèË¢´Ë∞ÉÁî®ÔºöwriteObjectMethod.invoke(obj, new Object[]&#123; out &#125;); // writeObjectMethod ÁöÑÂàùÂßãÂåñÈÄöËøáÂèçÂ∞ÑÊñπÂºèÂÆûÁé∞ÔºöÔºàObjectStreamClassÁöÑÊûÑÈÄ†ÊñπÊ≥ïÔºâwriteObjectMethod = getPrivateMethod(cl, &quot;writeObject&quot;, new Class&lt;?&gt;[] &#123; ObjectOutputStream.class &#125;, Void.TYPE); defaultWriteFileds()Ôºö // üî¥ Ëã•ÂΩìÂâçÂæÖÂ∫èÂàóÂåñÁöÑÁ±ªÊ≤°ÊúâwriteObjectÊñπÊ≥ïÔºåÂàôË∞ÉÁî®defaultWriteFieldsÊñπÊ≥ïÂÆûÁé∞Â∫èÂàóÂåñÔºö// üî∏ ÂÖàÂÜôÂÖ•Âü∫Êú¨Á±ªÂûãÂ≠óÊÆµint primDataSize = desc.getPrimDataSize();if (primVals == null || primVals.lengnth &lt; primDataSize) &#123; primVals = new byte[primDataSize];&#125;desc.getPrimFiledValues(obj, primVals);bout.write(primVals, 0, primDataSize, false); // BlockDataOutputStream// üî∏ ÂÜôÂÖ•ÂØπË±°Á±ªÂûãÁöÑÂ≠óÊÆµObjectStreamFiled[] fileds = desc.getFileds(false);Object[] objVals = new Object[desc.getNumObjFields()];int numPrimFileds = fields.length - objVals.length;desc.getObjectFiledValues(obj, objVals);for (intn i = 0; i &lt; objVals.length; i++) &#123; try &#123; // ‚≠ïÔ∏è ÂØπË±°Á±ªÂûãÂ≠óÊÆµÁªßÁª≠Ë∞ÉÁî®writeObject0ÊñπÊ≥ï writeObject0(objVals[i], fileds[numPrimFileds + i].isUnshared()); &#125; finally &#123; &#125;&#125; ü¶ã ‰ªéObjectOutputStream ÁöÑ writeObject ÊâßË°åÊµÅÁ®ãÊù•ÁúãÔºåJavaÂ∫èÂàóÂåñ‰ª•Ê∑±Â∫¶‰ºòÂÖàÈÅçÂéÜÊñπÂºè‰ΩøÊï¥‰∏™ÂØπË±°ÂÆûÁé∞Â∫èÂàóÂåñ„ÄÇÔºâ ‚ûå writeExternal()ÂõûÂà∞ writeOrdinaryObject ÊñπÊ≥ïÂÆûÁé∞ÔºåÂ¶ÇÊûúËá™ÂÆö‰πâÁ±ªÂÆûÁé∞‰∫Ü Externalizable ‰∏î‰∏çÊòØÂä®ÊÄÅ‰ª£ÁêÜÁ±ªÔºåÂàô‰ºöË∞ÉÁî® writeExternalData ÊñπÊ≥ïÂÆûÁé∞Â∫èÂàóÂåñÔºö writeExternalData // üîª ÊúÄÁªàË∞ÉÁî®Ëá™ÂÆö‰πâÁ±ªÂØπË±°ÁöÑ writeExternal ÊñπÊ≥ïÂÆûÁé∞ÂÜôÂÖ•if (protocol == PROTOCOL_VERSION_1) &#123; obj.writeExternal(this); &#125; else &#123; bout.setBlockDataMode(true); obj.writeExternal(this); bout.setBlockDataMode(false); bout.writeByte(TC_ENDBLOCKDATA);&#125; writeExternalData ÊñπÊ≥ïÁöÑÂÆûÁé∞ÁúãËµ∑Êù•ÊØî writeSerializable Á±ªÊõ¥ÁÆÄÊ¥ÅÔºåÂéüÂõ†Ôºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph T([\"Externalizable Êé•Âè£\"]):::p T -.- A(\"Êé•Âè£ÂåÖÂê´ÔºöreadExternal() Âíå writeExternal()\"):::info A --> |\"ÔºàÊúâËßÑËåÉÔºâ\"|A2(\"Externalizable ÁöÑÂ≠êÁ±ªÂøÖÈ°ªË¶ÜÁõñ readExternal() Âíå writeExternal()\"):::lp T2([\"Serializable Êé•Âè£\"]):::g T2 -.- B(\"Á©∫Êé•Âè£\"):::info B --> |\"ÔºàÊó†ËßÑËåÉÔºâ\"|B2(\"Êú¨Ë∫´ÊòØÁ©∫Êé•Âè£ÔºåÂú®ÂÖ∑‰ΩìË°å‰∏∫‰∏äÊ≤°ÊúâÂÅöÂº∫Âà∂ÊÄßÁöÑÁ∫¶ÊùüÂíåËßÑËåÉ„ÄÇ(‰ªÖÊòØ‰∏ÄÁßçÁâπÊÄßÔºâ\"):::lg classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà4ÔºâÂØπË±°Á±ªÂûãÁöÑÂ∫èÂàóÂåñÊï∞ÊçÆÊàêÂàÜÂ∫èÂàóÂåñËøáÁ®ã‰ºöÂÜôÂÖ•ÁöÑÊï∞ÊçÆÊàêÂàÜÔºöÔºàObjectOutputStream ÁöÑ writeObject ÊñπÊ≥ïÊâßË°åÊµÅÁ®ãÔºâ &#12288;1. ÂÜôÂÖ• TC_OBJECT &#12288;2. ÂÜôÂÖ•Á±ªÊèèËø∞ÔºàwriteClassDescÔºâ &#12288;3. ÂÜôÂÖ•Âü∫Êú¨Á±ªÂûãÂ≠óÊÆµ &#12288;4. Ëé∑Âèñ„ÄÅÈÅçÂéÜÊâÄÊúâÂØπË±°Á±ªÂûãÁöÑÂ≠óÊÆµÈÄíÂΩíË∞ÉÁî® writeObject0() ÂÆûÁé∞ÂÜôÂÖ• (1ÔºâÂÜôÂÖ• TC_OBJECTÔºåÂÄº‰∏∫0x73ÔºåbyteÁ±ªÂûã„ÄÇ (2ÔºâÂÜôÂÖ•Á±ªÊèèËø∞ÔºàwriteClassDescÔºâÔºåÁ±ªÊèèËø∞‰æùËµñÂæÖÂ∫èÂàóÂåñÁöÑÂØπË±°ÔºåÂç†Áî®Â≠óËäÇÔºö Á±ªÊèèËø∞Êï∞ÊçÆÊàêÂàÜÔºö Á±ªÊèèËø∞ÂèñÂÄº Tag Tag ValueÔºàbyteÔºâ Tag‰πãÂêéÁöÑÊï∞ÊçÆ Null TC_NULL 0x70 Êó† HandleÔºàÂ∑≤ÁªèÂÜôÂÖ•ËøáÁöÑObjectÁ±ªÂûãÂØπË±°Ôºâ TC_REFERENCE 0X71 4Â≠óËäÇÁöÑÂØπË±° Âä®ÊÄÅ‰ª£ÁêÜÁ±ª TC_PROXYCLASSDESC 0x7D 1Ôºâ4Â≠óËäÇÁöÑÊâÄÊúâÁà∂Êé•Âè£Á±ª‰∏™Êï∞2ÔºâÂæ™ÁéØÂÜôÂÖ•Áà∂Êé•Âè£ÁöÑÂêçÂ≠ó(UTF-8Ê†ºÂºè)„ÄÅÁà∂Êé•Âè£ÁöÑÁ±ªÊèèËø∞ Ëá™ÂÆö‰πâÁöÑ Serializable Êàñ Externalizable ÂÆûÁé∞Á±ª TC_CLASSDESC 0x72 1ÔºâÁ±ªÂêçÂ≠ó2ÔºâserialVersionUID3ÔºâÁ±ªÊ†áÁ≠æ4ÔºâÂ≠óÊÆµ‰∏™Êï∞5Ôºâ‰∏ÄÊ¨°Âæ™ÁéØÂÜôÂÖ•ÊØè‰∏™Â≠óÊÆµÁöÑÁ±ªÂûãÁ†Å„ÄÅÂ≠óÊÆµÂêç„ÄÅÂ≠óÊÆµÁ≠æÂêçÔºàÈùûÂü∫Êú¨Á±ªÂûãÔºâ Á±ªÊ†áÁ≠æÂèäÊÑè‰πâ Êûö‰∏æÂÄº Êï¥ÂûãÂÄº ÊÑè‰πâ SC_WRITE_METHOD 0x01 Serializable ÂÆûÁé∞Á±ªÂåÖÂê´ writeObject ÊñπÊ≥ï SC_SERIALIZABLE 0x02 Serializable ÂÆûÁé∞Á±ª SC_EXTERNALIZABLE 0x04 Externalizable ÂÆûÁé∞Á±ª SC_BLOCK_DATA 0x08 Externalizable ÂÆûÁé∞Á±ªÂÜôÂÖ•Êï∞ÊçÆ‰ΩøÁî® Block Ê®°Âºè SC_ENUM 0x10 Êûö‰∏æÁ±ª Á±ªÊ†áÁ≠æÂèØ‰ª•ÊòØ‰∏äËø∞ÂèñÂÄºÁöÑÁªÑÂêà„ÄÇ‰æãÂ¶ÇÔºåËá™ÂÆö‰πâÁ±ªÂÆûÁé∞Ëá™ Serializable ‰∏îÂåÖÂê´‰∫Ü writeObject ÊñπÊ≥ïÔºåÂàôÁ±ªÊ†áÁ≠æÁöÑÂèñÂÄº‰∏∫ÔºöSC_WRITE_METHOD | SC_SERIALIZABLE„ÄÇ Ôºà3ÔºâÂÜôÂÖ•Âü∫Êú¨Á±ªÂûãÂ≠óÊÆµ Â∞ÜÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµÊåâÂ≠óÊÆµÂêçÁöÑÂ≠óÂÖ∏È°∫Â∫èÂÜôÂÖ•‰∏Ä‰∏™Â≠óËäÇÊï∞ÁªÑÔºåÂÜçÊääÂ≠óËäÇÊï∞ÁªÑÊúÄÁªàÂÜôÂÖ•Âà∞ËæìÂá∫ÊµÅ„ÄÇÈÄöËøá ObjectStreamClass ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÂàùÂßãÂåñË∞ÉÁî®‰∫Ü getSerialFields ÊñπÊ≥ïÂæóÂà∞È™åËØÅÔºö private static ObjectStreamField[] getSerialFields(Class&lt;?&gt; cl) throws InvalidClassException&#123; ObjectStreamField[] fields; if (Serializable.class.isAssignableFrom(cl) &amp;&amp; !Externalizable.class.isAssignableFrom(cl) &amp;&amp; !Proxy.isProxyClass(cl) &amp;&amp; !cl.isInterface()) &#123; if ((fields = getDeclaredSerialFields(cl)) == null) &#123; fields = getDefaultSerialFields(cl); &#125; // üîª ObjectStreamField ÊéíÂ∫è Arrays.sort(fields); &#125; else &#123; fields = NO_FIELDS; &#125; return fields;&#125; ObjectStreamFiled ÁöÑ comparTo() Ê†∏ÂøÉÂÆûÁé∞Ôºö // üî∏ Ëé∑ÂèñÂ≠óÊÆµÂêé‰ºöÂØπÂ≠óÊÆµÊéíÂ∫èÔºåÊéíÂ∫èÈÄªËæëÔºöpublic int compareTo(Object obj)&#123; ObjectStreamField other = (ObjectStreamField) obj; boolean isPrim = isPrimitive(); if(isPrim != other.isPrimitive()) &#123; return isPrim ? -1 : 1; &#125; return name.compareTo(other.name);&#125; üìå ÊéíÂ∫èËßÑÂàôÊÄªÁªìÔºö ‰∏§‰∏™Â≠óÊÆµÁ±ªÂûãÁõ∏ÂêåÔºåÊåâÁÖßÂ≠óÊÆµÂêçÁöÑÂ≠óÂÖ∏È°∫Â∫èËøõË°åÊéíÂ∫èÔºõ ‰∏§‰∏™Â≠óÊÆµÁ±ªÂûã‰∏çÂêåÔºåÂü∫Êú¨Á±ªÂûãÊéíÂú®ÈùûÂü∫Êú¨Á±ªÂûã‰πãÂâç„ÄÇ ÂõûÂà∞ ObjectOutputStream ÁöÑ defaultWriteFields()ÔºåÂØπÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµÁöÑÂ§ÑÁêÜËøáÁ®ã‰∏∫ ‚Äî‚Äî ÂÖàËé∑ÂèñÊâÄÊúâÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµÂç†Áî®ÁöÑÂ≠óËäÇÊï∞ÔºåÂÜçÂ∞ÜÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµÁöÑÂÄº‰æùÊ¨°ÊîæÂÖ•‰∏Ä‰∏™Â≠óËäÇÊï∞ÁªÑÔºö // üîπ Ëé∑ÂèñÊâÄÊúâÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµÁöÑÂ≠óËäÇÊï∞int primDataSize = desc.getPrimDataSize();if (primVals == null || primVals.length &lt; primDataSize) &#123; primVals = new byte[primDataSize];&#125;// üîπ Â∞ÜÂü∫Êú¨Á±ªÂûãÂ≠óÊÆµ‰æùÊ¨°ÂÜôÂÖ•Â≠óËäÇÊï∞ÁªÑdesc.getPrimFieldValues(obj, primVals);// üî∏ Â∞ÜÂ≠óËäÇÊï∞ÁªÑËæìÂá∫bout.write(primVals, 0, primDataSize, false); Ôºà4ÔºâËé∑ÂèñÊâÄÊúâÂØπË±°Á±ªÂûãÁöÑÂ≠óÊÆµÔºåÂæ™ÁéØÈÅçÂéÜÊØè‰∏Ä‰∏™Â≠óÊÆµÔºåÈÄíÂΩíË∞ÉÁî® writeObject0() ÂÆûÁé∞ÂÜôÂÖ•„ÄÇ ÔºàÁï•Ôºå‰∏äËø∞ writeObject ÊµÅÁ®ãÈáåÂ∑≤Ê∂âÂèäÔºâ Âõõ„ÄÅÈ´òÁ∫ßÁâπÊÄßÔºà1Ôºâtransient ÂÖ≥ÈîÆÂ≠ótransient ÂÖ≥ÈîÆÂ≠óÂú®JavaÂ∫èÂàóÂåñ‰∏≠Áî®Êù•ÊéßÂà∂Â≠óÊÆµ‰∏çË¢´Â∫èÂàóÂåñ„ÄÇ ObjectStreamClass ÁöÑ getDefaultFields() ÂÜÖÈÉ®ÂÆûÁé∞Ôºö private static ObjectStreamField[] getDefaultFields(Class&lt;?&gt; cl) &#123; Field[] clFields = cl.getDeclaredFields(); ArrayList&lt;ObjectStreamField&gt; list = new ArrayList&lt;&gt;(); // üîª Â∫èÂàóÂåñÂ≠óÊÆµ‰∏çËÉΩ‰∏∫ static ‰∏î‰∏çËÉΩ‰∏∫ transient int mask = Modifier.STATIC | Modifier.TRANSIENT; for (int i = 0; i &lt; clFields.length; i++) &#123; if ((clFields[i].getModifiers() &amp; mask) == 0) &#123; list.add(new ObjectStreamField(clFields[i], false, true)); &#125; &#125; int size = list.size(); return (size == 0) ? NO_FIELDS : list.toArray(new ObjectStreamField[size]);&#125; Ôºà2Ôºâstatic ÂÖ≥ÈîÆÂ≠óstatic Â≠óÊÆµÂ±û‰∫éÁ±ªÂÖ®Â±ÄÂÖ±ÊúâÔºå‰∏ç‰ºöË¢´Â∫èÂàóÂåñ„ÄÇ Âú®ÂèçÂ∫èÂàóÂåñÂæóÂà∞ÁöÑÁªìÊûúÈáåÔºåÈùôÊÄÅÂèòÈáèÁöÑÂÄº‰æùËµñÁ±ªÂØπËØ•ÈùôÊÄÅÂ≠óÊÆµÁöÑ ‚ë†ÂàùÂßãÂåñÊìç‰Ωú‰ª•Âèä ‚ë°ÊòØÂê¶Âú®Âêå‰∏Ä‰∏™JVMËøõÁ®ãÂÜÖ„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR subgraph ÈùôÊÄÅÂèòÈáè t(\"a = 0\"):::p end t --> |\"ËµãÂÄº\"|1(\"a = 10\"):::lp 1 -.-> |\"ÂèçÂ∫èÂàóÂåñÊìç‰Ωú 1\"|A(\"a = 10\"):::lp 1 -.-> |\"ÂèçÂ∫èÂàóÂåñÊìç‰Ωú 2\"|B(\"a = 0\"):::g subgraph \"JVMËøõÁ®ã 2\" B end subgraph \"JVMËøõÁ®ã 1(Âêå‰∏™)\" A end B -.-> info(\"Âõ†‰∏∫Á±ªÂú®JVMËøõÁ®ãÂÜÖÂè™‰ºöË¢´Âä†ËΩΩ‰∏ÄÊ¨°Ôºå‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶‚Ä¶Áõ∏ÂêåÁöÑÁ±ªÂú®‰∏çÂêåJVMÈÉΩ‰ºöË¢´ÂàùÂßãÂåñ‰∏ÄÈÅç„ÄÇ\"):::lg classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà3ÔºâserialVersionUIDserialVersionUID Áî®Êù•ÂÆûÁé∞Á±ªÁâàÊú¨ÂÖºÂÆπÔºåÂú®ÂÆûÈôÖÂºÄÂèë‰∏≠ËÉΩÊª°Ë∂≥Á±ªÂ≠óÊÆµÂèòÂåñÁöÑÈúÄÊ±Ç„ÄÇ ÂøÖÈ°ªÂÆö‰πâ serialVersionUID Â≠óÊÆµÔºö Â¶ÇÊûú‰∏çÂÆö‰πâserialVersionUIDÂ≠óÊÆµÔºåJavaÂ∫èÂàóÂåñ‰ºöÊ†πÊçÆÁ±ªÂ≠óÊÆµÂíåÂÖ∂‰ªñ‰∏ä‰∏ãÊñáËÆ°ÁÆó‰∏Ä‰∏™ÈªòËÆ§ÂÄº„ÄÇ ÂΩìÁ±ªÂ≠óÊÆµÂèëÁîüÂèòÂåñÊó∂ÔºåserialVersionUID ÂÄº‰πü‰ºöË∑üÁùÄÂèòÂåñÔºåÂ∞±‰ºöÂá∫Áé∞Âõ†Á±ªÂ≠óÊÆµÂèòÂåñÂØºËá¥ÂèçÂ∫èÂàóÂåñÂ§±Ë¥•ÁöÑÈóÆÈ¢ò„ÄÇÊØîÂ¶ÇÂ¢ûÂä†Êñ∞Â≠óÊÆµÂêéÔºåÊó†Ê≥ïÂÜçËØªÂèñÂ¢ûÂä†Â≠óÊÆµ‰πãÂâçÁöÑÂ∫èÂàóÂåñÊï∞ÊçÆ„ÄÇÂèçÂ∫èÂàóÂåñ‰ºöÊä•InvalidCastException ÂºÇÂ∏∏„ÄÇ serialVersionUID Â≠óÊÆµÂøÖÈ°ªÊòØ static + final Á±ªÂûãÔºåÊâçËÉΩË¢´Â∫èÂàóÂåñ„ÄÇ ObjectStreamClass ÁöÑ getDeclaredSUID()Ôºö private static Long getDeclaredSUID(Class&lt;?&gt; cl) &#123; try &#123; Field f = cl.getDeclaredField(&quot;serialVersionUID&quot;); // üîª serialVersionUID Â≠óÊÆµÂøÖÈ°ªÊòØ static + final Á±ªÂûã int mask = Modifier.STATIC | Modifier.FINAL; if ((f.getModifiers() &amp; mask) == mask) &#123; f.setAccessible(true); return Long.valueOf(f.getLong(null)); &#125; &#125; catch (Exception ex) &#123; &#125; return null;&#125; Ôºà4ÔºâÂ∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñhookwriteReplace() Âíå readResolve() Áî®‰∫éÂ∫èÂàóÂåñÂÜôÂÖ• / ÂèçÂ∫èÂàóÂåñÊó∂Êã¶Êà™Âπ∂ÊõøÊç¢Êàê‰∏Ä‰∏™Ëá™ÂÆö‰πâÁöÑÂØπË±°„ÄÇ ‚ûä writeReplaceÊñπÊ≥ï ÊñπÊ≥ïÁöÑÂÆåÊï¥ÂÆö‰πâÔºö private/default/protected/public Object writeReplace() throws ObjectStreamException;// Áî±‰∫éÂü∫‰∫éÂèçÂ∞ÑÊâßË°åÔºåÂõ†Ê≠§‰ΩúÁî®ÂüüÈôêÂÆöÁ¨¶‰∏çÂèóÈôêÂà∂„ÄÇ Ëã•ÂÆö‰πâ‰∫Ü wirteReplace()ÔºåÂ∞±Ê≤°ÂøÖË¶ÅÂÜçÂÆö‰πâ ‚ùå writeObject() ‰∫Ü„ÄÇÂÜÖÈÉ®‰ºöÂÖàË∞ÉÁî®writeReplaceÊñπÊ≥ïÂ∞ÜÂΩìÂâçÂ∫èÂàóÂåñÂØπË±°ÊõøÊç¢ÊàêËá™ÂÆö‰πâÁõÆÊ†áÂØπË±°„ÄÇÔºàreadObject ÂêåÁêÜÔºâ Â∑•‰ΩúÂéüÁêÜÔºö ObjectOutputStream ÁöÑ writeObject0()Ôºö // check for replacement objectObject orig = obj;Class&lt;?&gt; cl = obj.getClass();ObjectStreamClass desc;for(;;) &#123; // REMIND: skip this check for strings/arrays? Class&lt;?&gt; repCL; // üîª Ë∞ÉÁî® obj Â∫èÂàóÂåñÂÜôÂÖ• if (!desc.hasWriteReplaceMethod() || (obj = desc.invokeWriteReplace(obj)) == null || (repCl = obj.getCLass()) == cl) &#123; break; &#125; cl = repCl;&#125; ‚ûã readResolveÊñπÊ≥ï ÊñπÊ≥ïÁöÑÂÆåÊï¥ÂÆö‰πâÔºö private/default/protected/public Object readResolve() throws ObjectStreamException;// Áî±‰∫éÂü∫‰∫éÂèçÂ∞ÑÊâßË°åÔºåÂõ†Ê≠§‰ΩúÁî®ÂüüÈôêÂÆöÁ¨¶‰∏çÂèóÈôêÂà∂„ÄÇ Ëã•ÂÆö‰πâ‰∫Ü readResolve ÊñπÊ≥ïÔºå‚úÖ readObject ÊñπÊ≥ïÊòØÂÖÅËÆ∏Âá∫Áé∞ÁöÑ„ÄÇ Â∑•‰ΩúÂéüÁêÜÔºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR subgraph \"ObjectInputStream.java\" A([\"readObject0()\"]):::p A --> |\"üî∏ ËøîÂõûÂèçÂ∫èÂàóÂåñÁªìÊûú\"|x(\"Âà§Êñ≠ÊòØÂê¶Â≠òÂú® readResolve()\"):::lg x -.-> |\"[ Â≠òÂú® ]\"|B B([\"Ë∞ÉÁî® readResolve()\"]):::g B -.-> |\"üîπ ËøîÂõûËá™ÂÆö‰πâÁöÑÂØπË±°\"|C([\"readObject\"]):::p C end x --> |\"[ ‰∏çÂ≠òÂú® ]üî∏ Áõ¥Êé•ËøîÂõûÂØπË±°ÁªìÊûú\"|C classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px È¶ñÂÖàË∞ÉÁî® readObject0 ÊñπÊ≥ïÂæóÂà∞ÂèçÂ∫èÂàóÂåñÁªìÊûú Ëã• readResolve ÊñπÊ≥ïÂ≠òÂú®ÔºåÂàô‰ºöË∞ÉÁî®ËØ•ÊñπÊ≥ïËøîÂõûËá™ÂÆö‰πâÁöÑÂØπË±°„ÄÇ Â∞ÜËá™ÂÆö‰πâÁöÑÂØπË±°‰Ωú‰∏∫ ObjectInputStream ÁöÑ readObject ÁöÑËøîÂõûÂÄº„ÄÇ ‰ΩøÁî®Âú∫ÊôØÔºö ‰ΩøÁî® readResolve() Âú®ÂèçÂ∫èÂàóÂåñÁöÑËøáÁ®ã‰∏≠ÂØπÊûö‰∏æÂØπË±°ËøõË°åÊÅ¢Â§çÊÄß‰øùÊä§„ÄÇ /** * ÂØπ‰∫éÁ±ªÂÆûÁé∞ÁöÑÊûö‰∏æÁ±ªÂûãÔºåÂèçÂ∫èÂàóÂåñÂá∫Êù•ÁöÑÊûö‰∏æÂØπË±°ÊúüÊúõÊòØÂÆö‰πâÁöÑÊûö‰∏æÂØπË±°Ôºå * Ëøô‰πü‰ΩìÁé∞‰∫ÜÊûö‰∏æÁöÑÊÑè‰πâ„ÄÇ * * ‰ΩÜ‰ªé‰ª£Á†ÅÊâßË°åÊÉÖÂÜµÁúãÔºåÂèçÂ∫èÂàóÂåñÂá∫Êù•ÁöÑÁöÑÊûö‰∏æÂØπË±°ÊòØ‰∏Ä‰∏™Êñ∞Âª∫Âá∫Êù•ÁöÑÊûö‰∏æÂØπË±°Ôºå * ËôΩÁÑ∂ÂÄºÂíåÊûö‰∏æÂÄºÂÆö‰πâÁöÑ‰∏ÄÊ†∑Ôºå‰ΩÜ‰∏çÊòØÂêå‰∏Ä‰∏™ÂØπË±°„ÄÇ */public class Brand implements Serializable &#123; private int val; private Brand(int val) &#123; this.val = val; &#125; public static final Brand NIKE = new Brand(0); public static final Brand ADDIDAS = new Brand(1); public static void main(String[] args) throws Exception &#123; ObjectOutputStream outputStream = new ObjectOutputStream( new FileOutputStream(new File(&quot;out1&quot;))); outputStream.writeObject(Brand.ADDIDAS); outputStream.close(); ObjectInputStream inputStream = new ObjectInputStream( new FileInputSrteam(new File(&quot;out1&quot;))); Brand brand = (Brand) inputStream.readObject(); System.out.println(brand == Brand.ADDIDAS); // ‚ùå false &#125; &#125; Âä†‰∏ä readResolve() ÂêéÔºö /** * ‰ΩøÁî® readResolve() Âú®ÂèçÂ∫èÂàóÂåñÁöÑËøáÁ®ã‰∏≠ÂØπÊûö‰∏æÂØπË±°ËøõË°åÊÅ¢Â§çÊÄß‰øùÊä§„ÄÇ */public class Brand implements Serializable &#123; private int val; private Brand(int val) &#123; this.val = val; &#125; public static final Brand NIKE = new Brand(0); public static final Brand ADDIDAS = new Brand(1); // üîª public Object readResolve() throws ObjectStreamException &#123; if (val == 0) &#123; return NIKE; &#125; if (val == 1) &#123; return ADDIDAS; &#125; return null &#125; public static void main(String[] args) throws Exception &#123; ObjectOutputStream outputStream = new ObjectOutputStream( new FileOutputStream(new File(&quot;out1&quot;))); outputStream.writeObject(Brand.ADDIDAS); outputStream.close(); ObjectInputStream inputStream = new ObjectInputStream( new FileInputSrteam(new File(&quot;out1&quot;))); Brand brand = (Brand) inputStream.readObject(); System.out.println(brand == Brand.ADDIDAS); // ‚≠ïÔ∏è true &#125; &#125; Ôºà5ÔºâÊï∞ÊçÆÊ†°È™åJavaÂ∫èÂàóÂåñÊú∫Âà∂Âú®ÂèçÂ∫èÂàóÂåñÊó∂ÊîØÊåÅÂØπËØªÂèñÂà∞ÁöÑÊï∞ÊçÆËøõË°åÊ†°È™åÔºàÈªòËÆ§‰∏çÊ†°È™åÔºâ„ÄÇËøôÊòØÂõ†‰∏∫JavaÂ∫èÂàóÂåñÂêéÁöÑÊï∞ÊçÆÊòØÊòéÊñáÂΩ¢ÂºèÔºåÊúâÂèØËÉΩË¢´‰øÆÊîπ„ÄÇ ‰ΩøÁî®Êï∞ÊçÆÊ†°È™åÁâπÊÄßÈúÄË¶ÅËÆ©Ëá™ÂÆö‰πâÁöÑÂ∫èÂàóÂåñÁ±ªÂÆûÁé∞java.io.ObjectInputValidationÊé•Âè£ public class Person implements Serializable, ObjectInputValidation ÈÄöËøáË∞ÉÁî®ÂõûË∞ÉÂáΩÊï∞ validateObject Êù•ÂÆûÁé∞Êï∞ÊçÆÈ™åËØÅ„ÄÇ @Overridepublic void validateObject() throws InvalidObjectException &#123; if (age &lt;= 0) &#123; throw new InvalidObjectException(&quot;age invalid&quot;) &#125;&#125; ‰∫î„ÄÅÂ∫èÂàóÂåñÊñπÂºèÂØπÊØîÈÄâÊã© Serializable ËøòÊòØ Externalizable Ôºü * ÂØπÊØîÔºö Serializable (üü¢‰ºòÂÖàÈÄâÊã©) Externalizable ÂäüËÉΩ javaÂ∫èÂàóÂåñÂ∑≤ÊîØÊåÅ javaÂ∫èÂàóÂåñÂ∑≤ÊîØÊåÅ ÊòìÁî®ÊÄß ÊòìÁî®ÊÄßÊõ¥Â•ΩÔºöSerializable Êèê‰æõ‰∫ÜÈªòËÆ§ÁöÑÂ∫èÂàóÂåñ‰∏éÂèçÂ∫èÂàóÂåñË°å‰∏∫ÔºåÁî®Êà∑Êó†ÈúÄÂÖ≥Ê≥®Â∫èÂàóÂåñÁöÑÂÆûÁé∞ÁªÜËäÇÂç≥ÂèØÊãøÊù•‰ΩøÁî®„ÄÇ Externalizable ÂøÖÈ°ªÂÆûÁé∞ÂÆûÁé∞ readExternal Âíå writeExternal Êé•Âè£Ôºå‰∏îË¶ÅÊèê‰æõÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞„ÄÇ Ëá™ÂÆö‰πâÂ∫èÂàóÂåñ ‰πüÂèØÈÄöËøá readObject Âíå writeObject Êù•ÊîØÊåÅ * ÁªàÊ≠¢Â∫èÂàóÂåñÁâπÊÄßÔºö Âú®ÁªßÊâøÈìæË∑Ø‰∏äÔºåÂ¶ÇÊûúË¶ÅÁªàÊ≠¢‰∏Ä‰∏™Â≠êÁ±ªÁöÑ Serializable ÊàñËÄÖ Externaizable ÁâπÊÄßÔºö Âú® readObject / writeObject ÊñπÊ≥ïÊàñ readExternal / writeExternal ÊñπÊ≥ïÊé•Âè£ÈáåÊäõÂá∫ UnsupportedOperation-Exception ÂºÇÂ∏∏ÔºåË°®Á§∫‰∏çÊîØÊåÅÂ∫èÂàóÂåñÂíåÂèçÂ∫èÂàóÂåñÂäüËÉΩ„ÄÇ ÂÖ≠„ÄÅÂ∞èÁªìJavaÂ∫èÂàóÂåñÊñπÊ°àÊàêÁÜüÂ∫¶È´òÔºå‰ΩÜÊÄßËÉΩÂíåÂéãÁº©ÊïàÊûúÂùá‰∏ÄËà¨ÔºåÂè™ÈÄÇÂêàJVMÁ≥ªÂàóËØ≠Ë®ÄÂÖ±‰∫´Êï∞ÊçÆÔºå‰∏çÂÖ∑Â§áÂÆåÂÖ®ÁöÑË∑®ËØ≠Ë®ÄËÉΩÂäõ„ÄÇÂè¶Â§ñÔºåÂÆÉ‰ºöÂ∏¶Êù•‰∏Ä‰∫õÊï∞ÊçÆÂÆâÂÖ®ÊÄßÂíåÂÆåÊï¥ÊÄßÈóÆÈ¢ò„ÄÇ Âú®ÂÆûÈôÖÈ°πÁõÆ‰∏≠ÔºåÂæÄÂæÄ‰ºöÈÄâÊã©ÂÖ∑ÊúâË∑®ËØ≠Ë®ÄËÉΩÂäõ„ÄÅÊÄßËÉΩÈ´òÊïà„ÄÅÂéãÁº©ÊïàÊûúÊòæËëóÁöÑÊñπÊ°àÔºå‰æãÂ¶Ç Thrift„ÄÅProtocol BufferÁ≠â„ÄÇ - end - üîñ Á¨îËÆ∞Êù•Ëá™Ôºö„ÄäÊ∑±ÂÖ•ÁêÜËß£Â∫èÂàóÂåñ‰∏éÂèçÂ∫èÂàóÂåñ„Äã üìö Êâ©Â±ïÈòÖËØªÔºö„ÄäFastSerializerÂ∫èÂàóÂåñÁâπÊÄß‰ªãÁªç - ÂèçÂ∫èÂàóÂåñÂéüÁêÜ„Äã","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"IO - RandomAccessFile ‰ªªÊÑèËÆøÈóÆÊñá‰ª∂","slug":"note/Basics/IO/IO_RandomAccessFile","date":"2023-05-04T09:09:58.497Z","updated":"2023-05-16T12:50:53.213Z","comments":true,"path":"note/Basics/IO/IO_RandomAccessFile/","link":"","permalink":"https://equnee.github.io/note/Basics/IO/IO_RandomAccessFile/","excerpt":"","text":"java.io - ÁõÆÂΩï Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ Ê†áÂáÜËÆæÂ§áËæìÂÖ•/ËæìÂá∫ÔºöSystem ÊéßÂà∂Âè∞ËØªÂÜôÁ±ªÔºöConsole Êñá‰ª∂Âü∫Êú¨Â§ÑÁêÜ Êñá‰ª∂Êìç‰ΩúÁ±ªÔºöFile Êñá‰ª∂ÊêúÁ¥¢Á±ªÔºöFileFilter„ÄÅFilenameFilter Êñá‰ª∂‰ªªÊÑèËØªÂÜôÁ±ªÔºöRandomAccessFile ËæìÂÖ•/ËæìÂá∫ÊµÅ ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂàÜÁ±ª ËæìÂÖ•/ËæìÂá∫ÊµÅ - ÂÆûÁé∞Á±ª Â∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ ‰∏Ä„ÄÅ‰ΩøÁî®Âú∫ÊôØ üìå RandomAccessFile Êó¢ÂèØ‰ª•ËØªÂèñÊñá‰ª∂ÂÜÖÂÆπÔºå‰πüÂèØ‰ª•ÂêëÊñá‰ª∂ËæìÂá∫Êï∞ÊçÆÔºåÊòØ‰∏Ä‰∏™Êõ¥Êé•Ëøë‰∫éÊìç‰ΩúÁ≥ªÁªüAPIÁöÑÂ∞ÅË£ÖÁ±ª„ÄÇ ‰∏éÊôÆÈÄöÁöÑËæìÂÖ•/ËæìÂá∫ÊµÅ‰∏çÂêåÁöÑÊòØÔºå ÂÆÉÊîØÊåÅ‚ÄúÈöèÊú∫ËÆøÈóÆ‚ÄùÁöÑÊñπÂºèÔºåÁ®ãÂ∫èÂèØ‰ª•Áõ¥Êé•Ë∑≥ËΩ¨Âà∞Êñá‰ª∂ÁöÑ‰ªªÊÑèÂú∞ÊñπÊù•ËØªÂÜôÊï∞ÊçÆ„ÄÇÔºà‰∏éInputStream„ÄÅReaderÈúÄË¶Å‰æùÊ¨°ÂêëÂêéËØªÂèñÁõ∏Âå∫ÂàÜÔºâ ÂÆÉÂ∞ÜÊñá‰ª∂ÂÜÖÂÆπÂ≠òÂÇ®Âú®‰∏Ä‰∏™Â§ßÂûãbyteÊï∞ÁªÑ‰∏≠„ÄÇÂÆÉÂ≠òÂú®ÁùÄÊåáÂêëËØ•ÈöêÂê´byteÊï∞ÁªÑÁöÑÂÖâÊ†áÊàñÁ¥¢ÂºïÔºåÁß∞‰∏∫Êñá‰ª∂ÊåáÈíàÔºåËØ•ÊåáÈíà‰ΩçÁΩÆÂèØ‰ª•ÈÄöËøáseekÊñπÊ≥ïËÆæÁΩÆ ‰ΩøÁî®Âú∫ÊôØÔºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR T([\"RandomAccessFile ÁöÑ‰ΩøÁî®Âú∫ÊôØ\"]):::p T --> A(\"‰ªÖËÆøÈóÆÊñá‰ª∂ÈÉ®ÂàÜÂÜÖÂÆπ\"):::lp T --> B(\"ÂêëÂ∑≤Â≠òÂú®ÁöÑÊñá‰ª∂ÂêéËøΩÂä†ÂÜÖÂÆπ\"):::lp classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Âè™ËÆøÈóÆÊñá‰ª∂ÈÉ®ÂàÜÂÜÖÂÆπÔºåËÄå‰∏çÊòØÊääÊñá‰ª∂‰ªéÂ§¥ËØªÂà∞Â∞æÔºå‰ΩøÁî®RandomAccessFileÊõ¥Â•Ω„ÄÇ ÂêëÂ∑≤Â≠òÂú®ÁöÑÊñá‰ª∂ÂêéËøΩÂä†ÂÜÖÂÆπÔºö‰∏éOutputStream„ÄÅWriterÁ≠âËæìÂá∫ÊµÅ‰∏çÂêåÁöÑÊòØÔºåRandomAccessFileÂÖÅËÆ∏Ëá™Áî±ÂÆö‰ΩçÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÔºåÊâÄ‰ª•RandomAccessFileÂèØ‰ª•‰∏ç‰ªéÂºÄÂßãÁöÑÂú∞ÊñπÂºÄÂßãËæìÂá∫ÔºåÊâÄ‰ª•RandomAccessFileÂèØ‰ª•ÂêëÂ∑≤Â≠òÂú®ÁöÑÊñá‰ª∂ÂêéËøΩÂä†ÂÜÖÂÆπ„ÄÇ ‰∫å„ÄÅÊñπÊ≥ïjava.io.RandomAccessFile ‚ë† ÊûÑÈÄ†ÊñπÊ≥ï ÊñπÊ≥ï ËØ¥Êòé RandomAccessFile(File file, String mode) ‰ΩøÁî®FileÂèÇÊï∞Êù•ÊåáÂÆöÊñá‰ª∂Êú¨Ë∫´ÔºàÊâìÂºÄÊñá‰ª∂Ôºâ RandomAccessFile(String name, String mode) ‰ΩøÁî®StringÂèÇÊï∞Êù•ÊåáÂÆöÊñá‰ª∂ÂêçÔºàÊâìÂºÄÊñá‰ª∂Ôºâ RandomAccessFileÁöÑ4ÁßçËÆøÈóÆÊ®°ÂºèÔºö ÂèÇÊï∞ÂÄº ËØ¥Êòé r ‰ª•Âè™ËØªÊñπÂºèÊâìÂºÄÊåáÂÆöÊñá‰ª∂„ÄÇËã•ËØïÂõæÂØπËØ•RamdomAceessFileÊâßË°åÂÜôÂÖ•ÊñπÊ≥ïÔºåÈÉΩÂ∞ÜÊâßË°åIOExceptionÂºÇÂ∏∏ rw ‰ª•ËØª„ÄÅÂÜôÊñπÂºèÊâìÂºÄÊåáÂÆöÊñá‰ª∂„ÄÇÂ¶ÇÊûúËØ•Êñá‰ª∂Â∞ö‰∏çÂ≠òÂú®ÔºåÂàôÂ∞ùËØïÂàõÂª∫ËØ•Êñá‰ª∂„ÄÇ rws ‰ª•ËØª„ÄÅÂÜôÊñπÂºèÊâìÂºÄÊåáÂÆöÊñá‰ª∂„ÄÇÁõ∏ÂØπ‰∫é‚Äùrw‚ÄùÊ®°ÂºèÔºåËøòË¶ÅÊ±ÇÂØπÊñá‰ª∂ÁöÑÂÜÖÂÆπÊàñÂÖÉÊï∞ÊçÆÁöÑÊØè‰∏™Êõ¥Êñ∞ÈÉΩÂêåÊ≠•ÂÜôÂÖ•Âà∞Â∫ïÂ±ÇÂ≠òÂÇ®ËÆæÂ§á„ÄÇ rwd ‰ª•ËØª„ÄÅÂÜôÊñπÂºèÊâìÂºÄÊåáÂÆöÊñá‰ª∂„ÄÇÁõ∏ÂØπ‰∫é‚Äùrw‚ÄùÊ®°ÂºèÔºåËøòË¶ÅÊ±ÇÂØπÊñá‰ª∂ÂÜÖÂÆπÁöÑÊØè‰∏™Êõ¥Êñ∞ÈÉΩÂêåÊ≠•ÂÜôÂÖ•Âà∞Â∫ïÂ±ÇÂ≠òÂÇ®ËÆæÂ§á„ÄÇ* rwdÊ®°ÂºèÂèØÁî®‰∫éÂáèÂ∞ëÊâßË°åÁöÑI/OÊìç‰ΩúÊï∞Èáè„ÄÇ ‚ë° Êìç‰ΩúÊñá‰ª∂ÊåáÈíàRandomAccessFileÂØπË±°ÁöÑËÆ∞ÂΩïÊåáÈíàÔºöÊåáÂêëÂΩìÂâçËØªÂÜôÁöÑ‰ΩçÁΩÆÔºåÂêÑÁßçread/writeÊìç‰ΩúÈÉΩ‰ºöËá™Âä®Êõ¥Êñ∞ËØ•ÊåáÈíàÔºàÁßªÂä®Âçï‰ΩçÔºöÂ≠óËäÇÔºâ„ÄÇ ÊñπÊ≥ï ËØ¥Êòé long getFilePointer() ËøîÂõûÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÁöÑÂΩìÂâç‰ΩçÁΩÆ„ÄÇ void seek(long pos) Â∞ÜÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÂÆö‰ΩçÂà∞pos‰ΩçÁΩÆ„ÄÇ void skipBytes(int n) ‰ΩøÊñá‰ª∂ÊåáÈíàÂêëÂâçÁßªÂä®ÊåáÂÆöÁöÑn‰∏™Â≠óËäÇ„ÄÇ * ÂΩìÁ®ãÂ∫èÊñ∞ÂàõÂª∫‰∏Ä‰∏™RandomAccessFileÂØπË±°Êó∂ÔºåËØ•ÂØπË±°ÁöÑÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíà‰Ωç‰∫éÊñá‰ª∂Â§¥Ôºà‰πüÂ∞±ÊòØ0Â§ÑÔºâÔºåÂΩìËØª/ÂÜô‰∫Ün‰∏™Â≠óËäÇÂêéÔºåÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÂ∞Ü‰ºöÂêëÂêéÁßªÂä®n‰∏™Â≠óËäÇ„ÄÇ ‚ë¢ ËØªÂÜôÊñπÊ≥ïRandomAccessFileÂÆûÁé∞‰∫ÜDataInput/DataOutputÊé•Âè£Ôºö * ËØªÂèñÔºö// ------ Âü∫Êú¨ËØªÂèñ --------------------------------------------int read(); // ‰ªéËØ•Êñá‰ª∂ËØªÂèñ‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆ„ÄÇint read(byte[] b); // ‰ªéÊñá‰ª∂‰∏≠ÊúÄÂ§öËØªÂèñb.length‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆÔºåÂπ∂Â∞ÜÂÖ∂Â≠òÂÇ®Âú®Â≠óËäÇÊï∞ÁªÑb‰∏≠„ÄÇint read(byte[] b, int off, int len); // ‰ªéÊåáÂÆöÁöÑoff‰ΩçÁΩÆÂºÄÂßãÔºå‰ªéÊñá‰ª∂‰∏≠ÊúÄÂ§öËØªÂèñlen‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆ„ÄÇ// ------ ËØªÂèñÊåáÂÆöÁ±ªÂûãÁöÑÊï∞ÂÄº -----------------------------------boolean readBoolean(); // ËØªÂèñ‰∏Ä‰∏™booleanbyte readByte(); // ËØªÂèñ‰∏Ä‰∏™ÊúâÁ¨¶Âè∑ÁöÑ8‰ΩçÂÄºchar readChar(); // ËØªÂèñ‰∏Ä‰∏™Â≠óÁ¨¶double readDouble(); // ËØªÂèñ‰∏Ä‰∏™doublefloat readFloat(); // ËØªÂèñ‰∏Ä‰∏™floatint readInt(); // ËØªÂèñ‰∏Ä‰∏™ÊúâÁ¨¶Âè∑ÁöÑ32‰ΩçÊï¥Êï∞long readLong(); // ËØªÂèñ‰∏Ä‰∏™ÊúâÁ¨¶Âè∑ÁöÑ64‰ΩçÊï¥Êï∞short readShort(); // ËØªÂèñ‰∏Ä‰∏™ÊúâÁ¨¶Âè∑ÁöÑ16‰ΩçÊï∞int readUnsignedByte(); // ËØªÂèñ‰∏Ä‰∏™Êó†Á¨¶Âè∑ÁöÑ8‰ΩçÊï∞int readUnsignedShort(); // ËØªÂèñ‰∏Ä‰∏™Êó†Á¨¶Âè∑ÁöÑ16‰ΩçÊï∞// ------ ËØªÂèñ‰∏ÄË°åÂ≠óÁ¨¶‰∏≤ ---------------------------------------String readLine() // ------ ËØªÂèñ‰∏≠ÊñáÂ≠óÁ¨¶‰∏≤ ---------------------------------------String readUTF() // ‰ª•‰∏äÂáΩÊï∞ÂùáÊåâÁÖßÂ≠óËäÇÁ†ÅËØªÂèñÁöÑÔºåËã•Êúâ‰∏≠ÊñáÂá∫Áé∞ÔºåreadLine()‰ºöÊòæÁ§∫‰π±Á†ÅÔºåÂèØ‰ΩøÁî®readUTF()ËØªÂèñ„ÄÇ // ÂÆÉ‰ªéÂΩìÂâçÊñá‰ª∂ÊåáÈíàÂºÄÂßãËØªÂèñÂâç‰∏§‰∏™Â≠óËäÇÔºåÁ±ª‰ºº‰∫é‰ΩøÁî®readUnsignedShort„ÄÇ * ÂÜôÂÖ•Ôºö// ------ Âü∫Êú¨ËØªÂèñ --------------------------------------------void write() // Âú®ËØ•Êñá‰ª∂ÁöÑÂΩìÂâçÊåáÈíà‰ΩçÁΩÆÂÜôÂÖ•‰∏Ä‰∏™Â≠óËäÇÔºåÂπ∂Ë¶ÜÁõñÂéüÊúâÁöÑÂ≠óËäÇ„ÄÇvoid write(byte[] b) // Â∞Üb.lengthÂ≠óËäÇ‰ªéÊåáÂÆöÁöÑÂ≠óËäÇÊï∞ÁªÑÂÜôÂÖ•Êñá‰ª∂Ôºà‰ªéÂΩìÂâçÊñá‰ª∂ÊåáÈíàÂºÄÂßãÔºâvoid write(byte[] b, int off, int len) // ‰ªéÂèÇÊï∞offÊåáÂÆöÁöÑËµ∑Âßã‰ΩçÁΩÆÔºåÂ∞ÜÊåáÂÆöÂ≠óËäÇÊï∞ÁªÑ‰∏≠ÁöÑlen‰∏™Â≠óËäÇÂÜôÂÖ•Êñá‰ª∂„ÄÇ // ------ ÂÜôÂÖ•Âõ∫ÂÆöÁ±ªÂûãÁöÑÊï∞ÂÄº -----------------------------------void writeBoolean(boolean v); // ÊåâÂçïÂ≠óËäÇÂÄºÂ∞ÜbooleanÂÜôÂÖ•ËØ•Êñá‰ª∂void writeByte(int v); // ÊåâÂçïÂ≠óËäÇÂÄºÂ∞ÜbyteÂÜôÂÖ•ËØ•Êñá‰ª∂void writeBytes(String s); // ÊåâÂ≠óËäÇÂ∫èÂàóÂ∞ÜËØ•Â≠óÁ¨¶‰∏≤ÂÜôÂÖ•ËØ•Êñá‰ª∂void writeChar(int v); // ÊåâÂèåÂ≠óËäÇÂÄºÂ∞ÜcharÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇvoid writeChars(String s); // ÊåâÂ≠óÁ¨¶Â∫èÂàóÂ∞Ü‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÂÜôÂÖ•ËØ•Êñá‰ª∂void writeDouble(double v); /* ‰ΩøÁî®DoubleÁ±ª‰∏≠ÁöÑdoubleToLongBitsÊñπÊ≥ïÂ∞ÜÂèåÁ≤æÂ∫¶ÂèÇÊï∞ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™longÔºå ÁÑ∂ÂêéÊåâ8Â≠óËäÇÊï∞ÈáèÂ∞ÜËØ•longÂÄºÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇ */void writeFloat(float v); /* ‰ΩøÁî®FloatÁ±ª‰∏≠ÁöÑfloatToIntBitsÊñπÊ≥ïÂ∞ÜÊµÆÁÇπÂèÇÊï∞ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™intÔºå ÁÑ∂ÂêéÊåâ4Â≠óËäÇÊï∞ÈáèÂ∞ÜËØ•intÂÄºÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇ */void writeInt(int v); // Êåâ4‰∏™Â≠óËäÇÂ∞ÜintÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇvoid writeLong(long v); // Êåâ8‰∏™Â≠óËäÇÂ∞ÜlongÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇvoid writeShort(int v); // Êåâ2‰∏™Â≠óËäÇÂ∞ÜshortÂÜôÂÖ•ËØ•Êñá‰ª∂ÔºåÂÖàÂÜôÈ´òÂ≠óËäÇ// ------ ÂÜôÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºàÊåâÂ≠óËäÇÂÜôÂÖ•ÔºåËã•‰∏≠Êñá‰ºö‰π±Á†ÅÔºâ----------------writeBytes() writeChars() // ÊåâÁÖßÂèåÂ≠óËäÇÂÜôÂÖ•ÔºåÂç≥‰∏Ä‰∏™Â≠óÁ¨¶Âç†Áî®2‰∏™Â≠óËäÇ„ÄÇ // ------ ÂÜôÂÖ•‰∏≠ÊñáÂ≠óÁ¨¶‰∏≤ ---------------------------------------String writeUTF() /* ÂÆÉÊää2‰∏™Â≠óËäÇ‰ªéÊñá‰ª∂ÁöÑÂΩìÂâçÊñá‰ª∂ÊåáÈíàÂÜôÂÖ•Âà∞Ê≠§Êñá‰ª∂ÔºåÁ±ª‰ºº‰∫é‰ΩøÁî®writeShortÊñπÊ≥ï Âπ∂ÁªôÂÆöË¶ÅË∑üÈöèÁöÑÂ≠óËäÇÊï∞„ÄÇÊ≠§ÂÄºÊòØÂÆûÈôÖÂÜôÂá∫ÁöÑÂ≠óËäÇÊï∞ÔºåËÄå‰∏çÊòØËØ•Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶„ÄÇ */ ‰∏â„ÄÅÂÆû‰æã‚ë† ËÆøÈóÆÊåáÂÆöÁöÑ‰∏≠Èó¥ÈÉ®ÂàÜÊï∞ÊçÆpublic class RandomAccessFileTest &#123; public static void main(String[] args) &#123; try( RandomAccessFile raf = new RandomAccessFile( &quot;RandomAccessFileTest.java&quot; , &quot;r&quot;)) // ‰ª•Âè™ËØªÊñπÂºèÊâìÂºÄÔºåÂè™ËÉΩËØªÂèñ &#123; // üîπ Ëé∑ÂèñRandomAccessFileÂØπË±°Êñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÔºåÂàùÂßã‰ΩçÁΩÆÊòØ0 System.out.println(&quot;RandomAccessFileÁöÑÊñá‰ª∂ÊåáÈíàÁöÑÂàùÂßã‰ΩçÁΩÆÔºö&quot; + raf.getFilePointer()); // üîπ ÁßªÂä®rafÁöÑÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÁöÑ‰ΩçÁΩÆÔºàÂ∞Ü‰ªé300Â≠óËäÇÂ§ÑÂºÄÂßãËØª„ÄÅÂÜôÔºâ raf.seek(300); byte[] bbuf = new byte[1024]; // Áî®‰∫é‰øùÂ≠òÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞ int hasRead = 0; // üîπ ‰ΩøÁî®Âæ™ÁéØÊù•ÈáçÂ§ç‚ÄúÂèñÊ∞¥‚ÄùËøáÁ®ã while ((hasRead = raf.read(bbuf)) &gt; 0 ) &#123; // ÂèñÂá∫‚ÄúÁ´πÁ≠í‚Äù‰∏≠ÁöÑÊ∞¥Êª¥ÔºàÂ≠óËäÇÔºâÔºåÂ∞ÜÂ≠óËäÇÊï∞ÁªÑËΩ¨Êç¢ÊàêÂ≠óÁ¨¶‰∏≤ËæìÂÖ• System.out.print(new String(bbuf , 0 , hasRead )); &#125; &#125; catch (IOException ex) &#123; ex.printStackTrace(); &#125; &#125;&#125;// ËøêË°å‰∏äÈù¢Á®ãÂ∫èÔºåÂ∞ÜÁúãÂà∞Á®ãÂ∫èÂè™ËØªÂèñÂêéÈù¢ÈÉ®ÂàÜÁöÑÊïàÊûú„ÄÇ ‚ë° ÂêëÊåáÂÆöÊñá‰ª∂ÂêéËøΩÂä†ÂÜÖÂÆπpublic class AppendContent &#123; public static void main(String[] args) &#123; try( // üîπ ‰ª•ËØª„ÄÅÂÜôÊñπÂºèÊâìÂºÄ‰∏Ä‰∏™ RandomAccessFile ÂØπË±° RandomAccessFile raf=new RandomAccessFile(&quot;out.txt&quot; , &quot;rw&quot;)) &#123; // üîπ Â∞Ü RandomAccessFile ÂØπË±°ÁöÑËÆ∞ÂΩïÊåáÈíà ÁßªÂä®Âà∞out.txtÊñá‰ª∂ÁöÑÊúÄÂêé raf.seek(raf.length()); // üîπ ‰ΩøÁî® RandomAccessFile ÊâßË°åËæìÂá∫ raf.write(&quot;ËøΩÂä†ÁöÑÂÜÖÂÆπÔºÅ\\r\\n&quot;.getBytes()); &#125; catch (IOException ex) &#123; ex.printStackTrace(); &#125; &#125;&#125;// ÊØèËøêË°å‰∏äÈù¢Á®ãÂ∫è‰∏ÄÊ¨°ÔºåÈÉΩÂèØ‰ª•ÁúãÂà∞out.txtÊñá‰ª∂‰∏≠Â§ö‰∏ÄË°å‚ÄúËøΩÂä†ÁöÑÂÜÖÂÆπÔºÅ‚ÄùÂ≠óÁ¨¶‰∏≤„ÄÇ ‚ë¢ ÂêëÊåáÂÆöÊñá‰ª∂„ÄÅÊåáÂÆö‰ΩçÁΩÆÊèíÂÖ•ÂÜÖÂÆπ/** * Á®ãÂ∫èÂÖàÂ∞ÜÊñá‰ª∂‰∏≠ÊèíÂÖ•ÁÇπÂêéÁöÑÂÜÖÂÆπËØªÂÖ•‰∏¥Êó∂Êñá‰ª∂‰∏≠ÔºåÁÑ∂ÂêéÈáçÊñ∞ÂÆö‰ΩçÂà∞ÊèíÂÖ•ÁÇπÔºåÂ∞ÜÈúÄË¶ÅÊèíÂÖ•ÁöÑÂÜÖÂÆπÊ∑ªÂä†Âà∞Êñá‰ª∂ÂêéÈù¢Ôºå * ÊúÄÂêéÂ∞Ü‰∏¥Êó∂Êñá‰ª∂ÁöÑÂÜÖÂÆπÊ∑ªÂä†Âà∞Êñá‰ª∂ÂêéÈù¢ÔºåÈÄöËøáËøô‰∏™ËøáÁ®ãÂ∞±ÂèØ‰ª•ÂêëÊåáÂÆöÊñá‰ª∂„ÄÅÊåáÂÆö‰ΩçÁΩÆÊèíÂÖ•ÂÜÖÂÆπ„ÄÇ */public class InsertContent &#123; public static void insert(String fileName, long pos, String insertContent) throws IOException &#123; // üîπ ÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂Êñá‰ª∂Êù•‰øùÂ≠òÊèíÂÖ•ÁÇπÂêéÁöÑÊï∞ÊçÆÔºàËØ•‰∏¥Êó∂Êñá‰ª∂Â∞ÜÂú®JVMÈÄÄÂá∫Êó∂Ë¢´Âà†Èô§Ôºâ File tmp = File.createTempFile(&quot;tmp&quot; , null); tmp.deleteOnExit(); try( RandomAccessFile raf = new RandomAccessFile(fileName , &quot;rw&quot;); FileOutputStream tmpOut=new FileOutputStream(tmp); FileInputStream tmpIn=new FileInputStream(tmp)) &#123; raf.seek(pos); // ------üîπ ‰∏ãÈù¢‰ª£Á†ÅÂ∞ÜÊèíÂÖ•ÁÇπÂêéÁöÑÂÜÖÂÆπËØªÂÖ•‰∏¥Êó∂Êñá‰ª∂‰∏≠‰øùÂ≠ò------ byte[] bbuf=new byte[64]; // Áî®‰∫é‰øùÂ≠òÂÆûÈôÖËØªÂèñÁöÑÂ≠óËäÇÊï∞ int hasRead=0; // ‰ΩøÁî®Âæ™ÁéØÊñπÂºèËØªÂèñÊèíÂÖ•ÁÇπÂêéÁöÑÊï∞ÊçÆ while ((hasRead=raf.read(bbuf)) &gt; 0 )&#123; // Â∞ÜËØªÂèñÁöÑÊï∞ÊçÆÂÜôÂÖ•‰∏¥Êó∂Êñá‰ª∂ tmpOut.write(bbuf , 0 , hasRead); &#125; // ----------üîπ ‰∏ãÈù¢‰ª£Á†ÅÁî®‰∫éÊèíÂÖ•ÂÜÖÂÆπ---------- // ÊääÊñá‰ª∂ËÆ∞ÂΩïÊåáÈíàÈáçÊñ∞ÂÆö‰ΩçÂà∞pos‰ΩçÁΩÆ raf.seek(pos); // ËøΩÂä†ÈúÄË¶ÅÊèíÂÖ•ÁöÑÂÜÖÂÆπ raf.write(insertContent.getBytes()); // ËøΩÂä†‰∏¥Êó∂Êñá‰ª∂‰∏≠ÁöÑÂÜÖÂÆπ while ((hasRead=tmpIn.read(bbuf)) &gt; 0 )&#123; raf.write(bbuf , 0 , hasRead); &#125; &#125; &#125; public static void main(String[] args) throws IOException &#123; insert(&quot;InsertContent.java&quot; , 45 , &quot;ÊèíÂÖ•ÁöÑÂÜÖÂÆπ\\r\\n&quot;); &#125;&#125;// ÊØèÊ¨°ËøêË°å‰∏äÈù¢Á®ãÂ∫èÔºåÈÉΩ‰ºöÁúãÂà∞ÂêëInsertContent.java‰∏≠ÊèíÂÖ•‰∫Ü‰∏ÄË°åÂ≠óÁ¨¶‰∏≤ Âõõ„ÄÅÂ∫îÁî® Â§öÁ∫øÁ®ãÊñ≠ÁÇπÁöÑÁΩëÁªú‰∏ãËΩΩÂ∑•ÂÖ∑ÔºàÂ¶ÇFlashGetÁ≠âÔºâÂ∞±ÂèØÈÄöËøáRandomAccessFileÁ±ªÊù•ÂÆûÁé∞Ôºö %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR subgraph \"[ Â§öÁ∫øÁ®ãÊñ≠ÁÇπÁöÑÁΩëÁªú‰∏ãËΩΩÂ∑•ÂÖ∑ ]\" A[[\"‰∏éË¢´‰∏ãËΩΩÊñá‰ª∂Â§ßÂ∞èÁõ∏ÂêåÁöÑÁ©∫Êñá‰ª∂\"]]:::lp B[[\"ËÆ∞ÂΩïÊñá‰ª∂ÊåáÈíàÁöÑ‰ΩçÁΩÆÊñá‰ª∂\"]]:::lb end net(\"ÁΩëÁªúÊï∞ÊçÆ\"):::info -.->|\"ÂÜôÂÖ•\"| A A --> |\"ÊØèÂÜô‰∏Ä‰∫õÊï∞ÊçÆÔºöËÆ∞‰∏ãÊñá‰ª∂ÊåáÈíà‰ΩçÁΩÆ\"|B B -.-> |\"Êñ≠ÁΩëÂêéÂÜçÊ¨°‰∏ãËΩΩÔºöÊ†πÊçÆËÆ∞ÂΩïÁöÑ‰ΩçÁΩÆÁªßÁª≠Âêë‰∏ãÂÜôÊï∞ÊçÆ\"|A classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,stroke-dasharray: 3 3, stroke-width: 2px, stroke: #676666 ‰∏ãËΩΩÂ∑•ÂÖ∑Áî®Â§öÊù°Á∫øÁ®ãÂêØÂä®ËæìÂÖ•ÊµÅÊù•ËØªÂèñÁΩëÁªúÊï∞ÊçÆÔºåÂπ∂‰ΩøÁî®RandomAccessFileÂ∞Ü‰ªéÁΩëÁªú‰∏äËØªÂèñÁöÑÊï∞ÊçÆÂÜôÂÖ•ÂâçÈù¢Âª∫Á´ãÁöÑÁ©∫Êñá‰ª∂‰∏≠ÔºåÊØèÂÜô‰∏Ä‰∫õÊï∞ÊçÆÂêéÔºåËÆ∞ÂΩïÊñá‰ª∂ÊåáÈíàÁöÑÊñá‰ª∂Â∞±ÂàÜÂà´ËÆ∞‰∏ãÊØè‰∏™RandomAccessFileÂΩìÂâçÁöÑÊñá‰ª∂ÊåáÈíà‰ΩçÁΩÆ„ÄÇ - end - üîñ Á¨îËÆ∞Êù•Ëá™Ôºö „ÄäJavaÁºñÁ®ãÁöÑÈÄªËæë„Äã „ÄäÁñØÁãÇJavaËÆ≤‰πâ„Äã „ÄäJavaÈ´òÊâãÁúüÁªèÔºàÁºñÁ®ãÂü∫Á°ÄÂç∑Ôºâ„Äã","categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"}]},{"title":"ü¶ã HashMap - Ê∫êÁ†ÅÂàÜÊûê","slug":"note/Data-Structure/HashMap_2","date":"2023-03-09T15:11:32.969Z","updated":"2023-05-19T17:23:20.644Z","comments":true,"path":"note/Data-Structure/HashMap_2/","link":"","permalink":"https://equnee.github.io/note/Data-Structure/HashMap_2/","excerpt":"","text":"- ÁõÆÂΩï HashMap HashMap ÂéüÁêÜ HashMap Ê∫êÁ†Å Ê≥®ÔºöÊú¨ÊñáÊ∫êÁ†ÅÁâàÊú¨Âùá‰∏∫ÔºöJDK 8 ‰∏Ä„ÄÅÂ±ûÊÄß// üîπ Â∏∏Èáè// ÈªòËÆ§ÁöÑÂàùÂßãÂÆπÈáèÂÄºÔºà16Ôºâ- ÂøÖÈ°ªÊòØ2ÁöÑnÊ¨°ÂπÇstatic final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4;// ÊúÄÂ§ßÂÆπÈáè‰∏äÈôêÔºà2ÁöÑ30Ê¨°ÊñπÔºâstatic final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;// ÈªòËÆ§ÁöÑË¥üËΩΩÂõ†Êï∞Ôºà0.75Ôºâstatic final float DEFAULT_LOAD_FACTOR = 0.75f;// Ê†ëÂåñÈòàÂÄºÔºöÂΩì‰∏Ä‰∏™Ê°∂‰∏≠ÁöÑÂÖÉÁ¥†‰∏™Êï∞Â§ß‰∫éÁ≠â‰∫é8Êó∂ËøõË°åÊ†ëÂåñstatic final int TREEIFY_THRESHOLD = 8;// Ê†ëÈôçÁ∫ß‰∏∫ÈìæË°®ÁöÑ‰ªì‰ΩçËÆ°Êï∞ÈòàÂÄºÔºåÂΩì‰∏Ä‰∏™Ê°∂‰∏≠ÁöÑÂÖÉÁ¥†‰∏™Êï∞Â∞è‰∫éÁ≠â‰∫é6Êó∂ÊääÊ†ëËΩ¨Âåñ‰∏∫ÈìæË°®„ÄÇstatic final int UNTREEIFY_THRESHOLD = 6;// Â∞ÜtableÊ†ëÂåñÁöÑÊúÄÂ∞èÂÆπÈáèÂÄºÔºà64ÔºâÔºöÂΩìÊ°∂ÁöÑ‰∏™Êï∞ËææÂà∞64ÁöÑÊó∂ÂÄôÊâçËøõË°åÊ†ëÂåñÔºàËá≥Â∞ëÂ∫î‰∏∫4*TREEIFY_THRESHOLDÔºå‰ª•ÈÅøÂÖçË∞ÉÊï¥Â§ßÂ∞èÂíåÊ†ëÂåñÈòàÂÄº‰πãÈó¥ÁöÑÂÜ≤Á™Å„ÄÇÔºâstatic final int MIN_TREEIFY_CAPACITY = 64;// üîπ ÂèòÈáè// NodeÊï∞ÁªÑÔºåÂèàÂè´‰ΩúÊ°∂ÔºàbucketÔºâtransient Node&lt;K,V&gt;[] table;// ‰Ωú‰∏∫entrySet()ÁöÑÁºìÂ≠òtransient Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;// ÂÖÉÁ¥†ÁöÑÊï∞Èáètransient int size;// ËÆ∞ÂΩïhashMapÁöÑ‰øÆÊîπÊ¨°Êï∞ÔºàÊØèÊ¨°Êâ©ÂÆπÂíåÊõ¥Êîπ map ÁªìÊûÑÁöÑËÆ°Êï∞Âô®Ôºâtransient int modCount;// Êâ©ÂÆπÈòàÂÄº = table.length * loadFactorÔºàÂΩìsizeÂ§ß‰∫éÈòàÂÄºÊó∂Êâ©ÂÆπÔºâint threshold;// Ë¥üËΩΩÂõ†Êï∞ÔºöË°®Á§∫Êï¥‰Ωì‰∏ätableË¢´Âç†Áî®ÁöÑÁ®ãÂ∫¶final float loadFactor; ‰∫å„ÄÅÊûÑÈÄ†ÊñπÊ≥ïgraph LR T((\"HashMapÊûÑÈÄ†ÊñπÊ≥ï\")):::p T --> A([\"HashMap map1 = new HashMap();\"]):::lp T --> B([\"HashMap map2 = new HashMap(30);\"]):::lp T --> C([\"HashMap map3 = new HashMap(30, 0.5f);\"]):::lp T --> D([\"HashMap map4 = new HashMap(map);\"]):::lp A --- |\"Êó†ÂèÇÊûÑÈÄ†ÊñπÊ≥ï\"|a(\"‰∏çÊåáÂÆöÂÆπÈáèÔºåÈªòËÆ§:16\") B --- |\"initialCapacoty\"| b(\"ÊåáÂÆöÂàùÂßãÂåñÂÆπÈáèÔºö30\") C --- |\"initialCapacotyloadFactor\"| c(\"ÊåáÂÆöÂàùÂßãÂåñÂÆπÈáè„ÄÅË¥üËΩΩÂõ†Êï∞\") D --- |\"Map map\"| d(\"‰ª•ÊåáÂÆömapÊûÑÈÄ†Êñ∞map\") D -.- ci(\"* Ê≥®ÊÑèÔºö‰∏é‰∏äËø∞‰ªÖÂàõÂª∫Á©∫HashMap‰∏çÂêåÔºåÊ≠§ÊñπÊ≥ïÂÜÖÈÉ®Ë∞ÉÁî®‰∫Üput()Â≠òÂÄºtableÊâçÁúüÊ≠£ËøõË°å‰∫ÜÂàùÂßãÂåñ„ÄÇ\"):::info classDef p fill:#ddaebd classDef lp fill: #f4e4e9 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px Ôºà1ÔºâHashMap() Êó†ÂèÇÊï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ï/** * Constructs an empty HashMap with the default initial capacity(16) and the default load factor (0.75). * ‰ª•ÈªòËÆ§ÂàùÂßãÂÆπÈáè(16)ÂíåÈªòËÆ§Ë¥üËΩΩÂõ†Êï∞(0.75)ÔºåÊûÑÈÄ†‰∏Ä‰∏™Á©∫ÁöÑHashMap„ÄÇ */public HashMap() &#123; // üîª Â∞ÜË¥üËΩΩÂõ†Êï∞Ëµã‰∏∫ÈªòËÆ§ÂÄº„ÄÇ this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted&#125; Ôºà2ÔºâHashMap(20) Â∏¶ÂàùÂßãÂÆπÈáèÁöÑÊûÑÈÄ†ÊñπÊ≥ïÔºö/** * Constructs an empty HashMap with the specified initial capacity and the default load factor (0.75). * ‰ª•ÁâπÂÆöÁöÑÂàùÂßãÂÆπÈáèÂíåÈªòËÆ§ÁöÑË¥üËΩΩÂõ†Êï∞(0.75)ÔºåÊûÑÈÄ†‰∏Ä‰∏™Á©∫ÁöÑHashMap * * @param initialCapacity ÂàùÂßãÂÆπÈáè * @throws IllegalArgumentException ÂàùÂßãÂÆπÈáè‰∏∫Ë¥üÂÄºÊó∂ÊäõÂá∫ÈùûÊ≥ïÊï∞ÊçÆÂºÇÂ∏∏„ÄÇ */ public HashMap(int initialCapacity) &#123; // üîª Ë∞ÉÁî®‰∫ÜÂ∏¶ÂàùÂßãÂÆπÈáè„ÄÅË¥üËΩΩÂõ†Êï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ïÔºàËØ¶ËßÅ‰∏ãÊñá(3)Ôºâ this(initialCapacity, DEFAULT_LOAD_FACTOR); &#125; Ôºà3ÔºâHashMap(20, 0.5f) Â∏¶ÂàùÂßãÂÆπÈáè„ÄÅË¥üËΩΩÂõ†Êï∞ÁöÑÊûÑÈÄ†ÊñπÊ≥ï/** * Constructs an empty HashMap with the specified initial capacity and load factor. * ‰ª•ÁâπÂÆöÁöÑÂàùÂßãÂÆπÈáèÂíåË¥üËΩΩÂõ†Êï∞ÊûÑÈÄ†‰∏Ä‰∏™Á©∫ÁöÑHashMap„ÄÇ * * @param initialCapacity ÂàùÂßãÂåñÂÆπÈáè * @param loadFactor Ë¥üËΩΩÂõ†Êï∞ * @throws IllegalArgumentException if the initial capacity is negative * or the load factor is nonpositive * ÂΩìÂàùÂßãÂÆπÈáè‰∏∫Ë¥üÂÄº„ÄÅÊàñË¥üËΩΩÂõ†Êï∞‰∏∫ÈùûÊ≠£Êó∂ÊäõÂá∫ÈùûÊ≥ïÊï∞ÊçÆÂºÇÂ∏∏„ÄÇ */public HashMap(int initialCapacity, float loadFactor) &#123; // üî¥ ‰∏Ä„ÄÅÂà§Êñ≠‰º†ÂÖ•ÂèÇÊï∞ÁöÑÂêàÊ≥ïÊÄß // üîπ ÂàùÂßãÂÆπÈáèÂÄºÈùûË¥üÊï∞ if (initialCapacity &lt; 0) throw new IllegalArgumentException(&quot;Illegal initial capacity: &quot; + initialCapacity); // üîπ ÂàùÂßãÂÆπÈáèÂÄº‰∏çË∂ÖËøáÊúÄÂ§ßÂÆπÈáè if (initialCapacity &gt; MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; // üîπ Ë¥üËΩΩÂõ†Êï∞Â§ß‰∫é0‰∏î‰∏∫Êï∞Â≠ó if (loadFactor &lt;= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(&quot;Illegal load factor: &quot; + loadFactor); // üî¥ ‰∫å„ÄÅ‰∏∫ÈÖçÁΩÆÂèÇÊï∞ËµãÂÄº // üîπ ‰∏∫Ë¥üËΩΩÂõ†Êï∞ËµãÂÄº this.loadFactor = loadFactor; // üîπ ‰∏∫Êâ©ÂÆπÈòàÂÄºËµãÂÄºÔºö‰ΩøÁî®tableSizeFor()Â∞ÜÁªôÂÆöÊï∞ÂÄºË∞ÉÊï¥‰∏∫2ÁöÑÊ¨°ÂπÇÊï∞„ÄÇ this.threshold = tableSizeFor(initialCapacity);&#125; Ôºà4ÔºâHashMap(map)- HashMap() Â∏¶mapÁöÑÊûÑÈÄ†ÊñπÊ≥ï /** * Constructs a new HashMap with the same mappings as the specified Map. * The HashMap is created with default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified Map. * ‰ΩøÁî®‰∏éÊåáÂÆöMapÁõ∏ÂêåÁöÑÊò†Â∞ÑÊûÑÈÄ†Êñ∞ÁöÑHashMap„ÄÇ * Ê≠§HashMapÁî±ÔºöÈªòËÆ§Ë¥üËΩΩÂõ†Êï∞(0.75)„ÄÅË∂≥Â§üÁöÑÂàùÂßãÂÆπÈáèÔºàË∂≥‰ª•Â≠ò‰∏ãÊåáÂÆöMapÔºâÂàõÂª∫„ÄÇ * * @param m the map whose mappings are to be placed in this map * @ÂèÇÊï∞Ôºö mÔºåÂéümap * @throws NullPointerException if the specified map is null * @ÂºÇÂ∏∏Ôºö ÂΩìÂéümap‰∏∫Á©∫Êó∂ÊäõÂá∫Á©∫ÊåáÈíàÂºÇÂ∏∏„ÄÇ */public HashMap(Map&lt;? extends K, ? extends V&gt; m) &#123; // üîª Â∞ÜË¥üËΩΩÂõ†Êï∞Ëµã‰∏∫ÈªòËÆ§ÂÄº„ÄÇ this.loadFactor = DEFAULT_LOAD_FACTOR; // üîª Ë∞ÉÁî®putMapEntries()ÔºåÂ∞ÜÂéüÊúâmapÂ≠òÂÖ•Êñ∞map„ÄÇ putMapEntries(m, false);&#125; - putMapEntries() ËµãÂÄºÂπ∂ÂàùÂßãÂåñÂáΩÊï∞/** * Implements Map.putAll and Map constructor. * ËµãÂÄºÂπ∂ÊûÑÈÄ†ÂáΩÊï∞„ÄÇ * * @param m the map * @ÂèÇÊï∞Ôºö mÔºå‰º†ÂÖ•ÁöÑmap * @param evict false when initially constructing this map, else true (relayed to method afterNodeInsertion). * @ÂèÇÊï∞Ôºö evictÔºåÈ¶ñÊ¨°ÂàõÂª∫Ê≠§mapÊó∂ËøîÂõûfalseÔºåÈùûÈ¶ñÊ¨°ÂàõÂª∫ËøîÂõûtrue„ÄÇ */final void putMapEntries(Map&lt;? extends K, ? extends V&gt; m, boolean evict) &#123; int s = m.size(); // mÁöÑÂÖÉÁ¥†‰∏™Êï∞ // üî¥ ‰∏Ä„ÄÅËã•m‰∏≠ÊúâÂÖÉÁ¥†ÔºåÈúÄË¶ÅÊ†πÊçÆÊñ∞MapÁöÑÂàùÂßãÂåñÊÉÖÂÜµ‰∏∫ÂÖ∂Êâ©ÂÆπÈòàÂÄºËµãÂÄº„ÄÇ ÔºàËã•mÊó†ÂÖÉÁ¥†ÂàôÊó†ÈúÄËµãÂÄºÔºåÁõ¥Êé•‰ΩøÁî®ÁªôÂÆöÁöÑË¥üËΩΩÂõ†Êï∞ÂíåÊâ©ÂÆπÈòàÂÄº(lf*cap)ÂÆåÊàêÊûÑÈÄ†„ÄÇÔºâ if (s &gt; 0) &#123; // üîπ Ëã•Êï∞ÁªÑÊú™ÂàùÂßãÂåñÔºöÊ†πÊçÆm‰∏≠ÂÖÉÁ¥†Êï∞ÈáèÂíåË¥üËΩΩÂõ†Êï∞ËÆ°ÁÆóÊñ∞MapÁöÑÊâ©ÂÆπÈòàÂÄº„ÄÇ if (table == null) &#123; // pre-size // mÁöÑÊâ©ÂÆπÈòàÂÄº = ÂÖÉÁ¥†Êï∞Èáè / Ë¥üËΩΩÂõ†Êï∞Ôºàüî∏+1.0FÔºöÂØπÂ∞èÊï∞ÂÅöÂêë‰∏äÂèñÊï¥‰ª•Â∞ΩÂèØËÉΩ‰øùËØÅÊõ¥Â§ßÂÆπÈáèÔºâ float ft = ((float)s / loadFactor) + 1.0F; // Â∞ÜmÊâ©ÂÆπÈòàÂÄºÁöÑÊï∞ÊçÆÁ±ªÂûãËΩ¨‰∏∫Êï¥ÂûãÔºåÂπ∂ÈôêÂÆöÂú®ÈªòËÆ§ÂÆπÈáè‰∏äÈôêÂÜÖ int t = ((ft &lt; (float)MAXIMUM_CAPACITY) ? (int)ft : MAXIMUM_CAPACITY); // Ëã•ËÆ°ÁÆóÂá∫mÁöÑÊâ©ÂÆπÈòàÂÄº &gt; Êñ∞MapÊâ©ÂÆπÈòàÂÄºÔºåË∞ÉÁî®tableSizeForÊñπÊ≥ïÔºåÂ∞ÜÊñ∞MapÊâ©ÂÆπÈòàÂÄºËÆæÁΩÆ‰∏∫ÔºöËØ•ÂÄºÊúÄÊé•ËøëÂÆπÈáèÁöÑ2Ê¨°ÂπÇÊï∞„ÄÇ if (t &gt; threshold) threshold = tableSizeFor(t); &#125; // üîπ Ëã•Êï∞ÁªÑÂ∑≤ÂàùÂßãÂåñ„ÄÅ‰∏îMap‰∏≠ÁöÑÂÖÉÁ¥†Êï∞ÈáèË∂ÖËøá‰∫ÜÂÖ∂Êâ©ÂÆπÈòàÂÄºÔºöÊâ©ÂÆπ„ÄÇ else if (s &gt; threshold) resize(); // üî¥ ‰∫å„ÄÅËµãÂÄºÔºöÈÅçÂéÜmÁöÑentryÔºåÈÄê‰∏™ËµãÂÄºÂà∞Êñ∞Map‰∏ä„ÄÇ for (Map.Entry&lt;? extends K, ? extends V&gt; e : m.entrySet()) &#123; K key = e.getKey(); V value = e.getValue(); // üîπ Ë∞ÉÁî®putVal()‰∏∫ÊØè‰∏™ËäÇÁÇπËµãÂÄºÔºàÊ≠§Êó∂Êñ∞MapÊâçÁúüÊ≠£ÂàùÂßãÂåñÂÆåÊàêÔºâ putVal(hash(key), key, value, false, evict); &#125; &#125;&#125; ((float)s / loadFactor) + 1.0F + 1.0FÔºö‰∏∫‰∫ÜËÆ©ÊµÆÁÇπÊï∞ËøõË°åÈô§Ê≥ïËÆ°ÁÆóÂêéÂêë‰∏äÂèñÊï¥Ôºå‰ª•Â∞ΩÂèØËÉΩ‰øùËØÅË∂≥Â§üÂÆπÈáè„ÄÇ ‰∏â„ÄÅÈùôÊÄÅÂÆûÁî®Á®ãÂ∫è- hash() ËÆ°ÁÆókey.hashCode()/* ---------------- Static utilities -------------- *//** * Computes key.hashCode() and spreads (XORs) higher bits of hash to lower. * ËÆ°ÁÆókey.hashCode()Âπ∂Â∞ÜÂìàÂ∏åÁöÑÈ´ò‰ΩçÊâ©Â±ïÔºàÂºÇÊàñËøêÁÆóÔºâÂà∞‰Ωé‰Ωç„ÄÇ */static final int hash(Object key) &#123; int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);&#125; (h=key.hashCode()) ^ (h &gt;&gt;&gt;16) hash(Object) ÊñπÊ≥ïÈÄöËøá‰ª•‰∏äË°®ËææÂºèÂæóÂà∞ÊåáÂÆöÂØπË±°ÁöÑHashÂÄº„ÄÇËøôÈáåÊòØÂèñÂæóÂΩìÂâçÂØπË±°ÁöÑHashÂÄºÔºåÈ¶ñÂÖàËøõË°åÂ∏¶Á¨¶Âè∑‰ΩçÁöÑÂè≥Áßª16‰ΩçÊìç‰ΩúÔºàËøôÊó∂ÂÄôÂØπË±°HashÂÄºÁöÑÈ´ò‰ΩçÊÆµÂ∞±ÂèòÊàê‰∫Ü‰Ωé‰ΩçÊÆµÔºâÔºåÁÑ∂Âêé‰∏éÂØπË±°ÂéüÊù•ÁöÑHashÂÄºËøõË°åÂºÇÊàñËøêÁÆó„ÄÇ ÂºÇÊàñÁöÑÂéüÂõ†Ôºö Âõ†‰∏∫Êï∞ÁªÑÂÆπÈáèÊÄªÊòØ2ÁöÑnÊ¨°ÂπÇÊï∞ÔºåËÆ°ÁÆóÁ¥¢Âºï‰ΩçÁΩÆÊó∂ÔºåÊï£ÂàóÁúüÊ≠£ÁîüÊïàÁöÑÂè™ÊòØ‰ΩénbitÁöÑÊúâÊïà‰ΩçÔºåÂæàÂÆπÊòìÂèëÁîüÁ¢∞Êíû„ÄÇÂõ†Ê≠§ÔºåÊääÈ´ò16bitÂíå‰Ωé16bitÂºÇÊàñ‰∏Ä‰∏ãÔºåÊó¢ÂáèÂ∞ë‰∫ÜÁ≥ªÁªüÁöÑÂºÄÈîÄÔºå‰πü‰∏ç‰ºöÈÄ†ÊàêÂõ†‰∏∫È´ò‰ΩçÊ≤°ÊúâÂèÇ‰∏é‰∏ãÊ†áÁöÑËÆ°ÁÆó(tableÈïøÂ∫¶ÊØîËæÉÂ∞è)Êó∂ÔºåÂºïËµ∑Á¢∞Êíû„ÄÇ - tableSizeFor() ËøîÂõûÊúÄÊé•ËøëÁªôÂÆöÁõÆÊ†áÂÆπÈáèÁöÑ‰∫åÊ¨°ÂπÇÊï∞ÂÄº/** * Returns a power of two size for the given target capacity. * ËøîÂõûÁªôÂÆöÁõÆÊ†áÂÆπÈáèÁöÑ‰∫åÊ¨°ÂπÇÊï∞„ÄÇ */static final int tableSizeFor(int cap) &#123; int n = cap - 1; n |= n &gt;&gt;&gt; 1; n |= n &gt;&gt;&gt; 2; n |= n &gt;&gt;&gt; 4; n |= n &gt;&gt;&gt; 8; n |= n &gt;&gt;&gt; 16; return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;&#125;/* ‰ª•‰∏ã‰∏∫Â§áÊ≥®Ôºö ------------------------------------------------- * ËØ•‰ΩçËøêÁÆóÁî®‰∫éÊ±ÇÂá∫È´ò‰Ωç1‰πãÂêéÊØè‰ΩçÈÉΩ‰∏∫1ÁöÑÁªìÊûú„ÄÇ Âõ†‰∏∫Â∞ÜÊØè‰ΩçÂèò‰∏∫1ÔºåÂàôÂä†‰∏ä1ÂêéÂàöÂ•ΩÊòØ‰∏Ä‰∏™‰∫åÊ¨°ÂπÇÊï∞„ÄÇ Â¶Ç(0000 1000)Ôºå‰ΩøÂÖ∂Á¨¨‰∏Ä‰Ωç1ÂêéÈù¢ÈÉΩ‰∏∫1ÔºåÂç≥(0000 1111) ------------------------------------------------- */ // Â¶ÇÔºåinitialCapacity = 9 // üî¥ Â∞Ü n - 1 int n = cap -1; // n = 8 // üî¥ ‰Ωú‰ΩçËøêÁÆóÔºö1. Êó†Á¨¶Âè∑‰ΩçÁßª 2. ‰∏én‰ΩúÊàñÁöÑ‰ΩçËøêÁÆó„ÄÇ n |= n &gt;&gt;&gt; 1; n = 0000 1000 n = 0000 0100 n = 0000 1100 n |= n &gt;&gt;&gt; 2; n = 0000 1100 n = 0000 0011 n = 0000 1111 // =15 n |= n &gt;&gt;&gt; 4; n = 0000 1111 n = 0000 0000 n = 0000 1111 n |= n &gt;&gt;&gt; 8; n = 0000 1111 n = 0000 0000 n = 0000 1111 n |= n &gt;&gt;&gt; 16; // üî∏ Âõ†‰∏∫intÊòØ32‰ΩçÁöÑÔºåÊâÄ‰ª•ÊâßË°åÂà∞16Âç≥ÂèØ. // üî¥ ËøîÂõû‰ΩçÁßªÁªìÊûún + 1 return (n &lt; 0) ? 1 : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUN_CAPACITY : n + 1; n &lt; 0, ÂàôËøîÂõû n = 1 n &gt;= 0, ‰∏î n &gt;= ÊúÄÂ§ßÂÆπÈáè, ÂàôËøîÂõûÊúÄÂ§ßÂÆπÈáè n &gt;= 0, ‰∏î n &lt; ÊúÄÂ§ßÂÆπÈáè, ÂàôËøîÂõû n + 1 Ôºà=16Ôºâ ‰∏∫‰ªÄ‰πàÂÖàËøõË°ån-1Êìç‰ΩúÔºö‰∏∫‰∫ÜÂ§ÑÁêÜnÂàöÂ•ΩÊòØ‰∫åÊ¨°ÂπÇÊï∞ÁöÑÊÉÖÂÜµ„ÄÇ ü¶ã Ëã•nÂ∑≤ÁªèÊòØ2ÁöÑnÊ¨°ÂπÇ‰∫ÜÔºåÊåâÁÖßÈÄªËæëÂèò1‰πãÂêéÂÜçÂä†1ÔºåÁªìÊûúÂ∞±‰ºöÂèòÊàênÁöÑ2ÂÄç‰∫ÜÔºå‰∏éÂ∫îÊúâÁöÑÁªìÊûú‰∏ç‰∏ÄËá¥„ÄÇÂ¶ÇÔºån=16Ôºà0001 0000ÔºâÔºå‰ΩçËøêÁÆóÂêé n=31Ôºà0001 1111Ôºâ„ÄÇ - Comparable /** * Returns x&#x27;s Class if it is of the form &quot;class C implements * Comparable&lt;C&gt;&quot;, else null. */static Class&lt;?&gt; comparableClassFor(Object x) &#123; if (x instanceof Comparable) &#123; Class&lt;?&gt; c; Type[] ts, as; Type t; ParameterizedType p; if ((c = x.getClass()) == String.class) // bypass checks return c; if ((ts = c.getGenericInterfaces()) != null) &#123; for (int i = 0; i &lt; ts.length; ++i) &#123; if (((t = ts[i]) instanceof ParameterizedType) &amp;&amp; ((p = (ParameterizedType)t).getRawType() == Comparable.class) &amp;&amp; (as = p.getActualTypeArguments()) != null &amp;&amp; as.length == 1 &amp;&amp; as[0] == c) // type arg is c return c; &#125; &#125; &#125; return null;&#125;/** * Returns k.compareTo(x) if x matches kc (k&#x27;s screened comparable * class), else 0. */@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;) // for cast to Comparablestatic int compareComparables(Class&lt;?&gt; kc, Object k, Object x) &#123; return (x == null || x.getClass() != kc ? 0 : ((Comparable)k).compareTo(x));&#125; Âõõ„ÄÅÂÆûÁé∞ÊñπÊ≥ïÔºà1ÔºâGet() - Ëé∑Âèñ%%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph TD T([\"Â¶Ç‰Ωï‰ªéHashMapËé∑ÂèñÂÖÉÁ¥†Ôºü\"]):::p T --> B(\"ÂÖàÊ†πÊçÆkeyÊâæÂà∞Ê°∂‰Ωç\") B --> A([\"Âà§Êñ≠ÂΩìÂâç‰ΩçÁΩÆÁöÑÂÖÉÁ¥†ÊòØÂê¶Â∞±Ë¶ÅÊâæÁöÑÂÄº\"]):::lp A --> |\"ÊòØ\"| C2[\"Ê†∏ÂØπk-vÂÄºÂêéËøîÂõû\"]:::b A --> |\"Âê¶ÔºàÊúâhashÂÜ≤Á™ÅÔºâ\"| C([\"Âà§Êñ≠‰∏∫ÈìæË°®ÊàñÁ∫¢ÈªëÊ†ë\"]):::lp C -.-> |\"ÈìæË°®\"|a[\"ÈÅçÂéÜÈìæË°®„ÄÅÊ†∏ÂØπk-vÂÄºÂêéËøîÂõû\"]:::b C -.-> |\"Á∫¢ÈªëÊ†ë\"|b[\"‰ªéÊ†ëÁöÑÊ†πËäÇÁÇπÊü•Êâæ„ÄÅÊ†∏ÂØπk-vÂÄºÂêéËøîÂõû\"]:::b classDef p fill:#ddaebd classDef b fill:#d9dfeb classDef lp fill: #f4e4e9 - get() ÈÄöËøákeyËé∑Âèñvalue/** * Returns the value to which the specified key is mapped, * or null if this map contains no mapping for the key. * ËøîÂõûÊåáÂÆökeyÊâÄÊò†Â∞ÑÁöÑvalueÂÄº„ÄÇËã•Êâæ‰∏çÂà∞ÂØπÂ∫îvalueÊó∂ËøîÂõûnull„ÄÇ * * ‰ΩÜËøîÂõûnull‰∏ç‰∏ÄÂÆö‰ª£Ë°®‰∏çÂ≠òÂú®ËØ•keyÊò†Â∞ÑÁöÑÂÄºÔºåÊúâÂèØËÉΩÊòØËØ•key‰øùÂ≠òÁöÑvalueÂÄºÊ≠£ÊòØ&quot;null&quot;„ÄÇ * ÂèØ‰ª•‰ΩøÁî®containsKey()Êù•ËØÜÂà´„ÄÇ */public V get(Object key) &#123; // Node Node&lt;K,V&gt; e; // üîª ‰ΩøÁî®keyÂíåÂÖ∂hashÂÄºË∞ÉÁî®getNode()ÊñπÊ≥ïÔºåËøîÂõûNodeÁöÑvalueÂÄº„ÄÇ return (e = getNode(hash(key), key)) == null ? null : e.value;&#125; null ? null : e.valueÔºöËã•ËØ•ÂÄº‰∏∫nullÔºåËøîÂõûnullÔºõËã•ËØ•ÂÄº‰∏ç‰∏∫nullÔºåËøîÂõûe.value - getNode() Ëé∑ÂèñNode/** * Implements Map.get and related methods. * ÂÆûÁé∞‰∫ÜMap.get()ÂíåÁõ∏ÂÖ≥ÊñπÊ≥ï * * @param hash keyÁöÑhashÂÄº * @param key key * @return ËøîÂõûËØ•keyÂØπÂ∫îÁöÑNodeÔºåËã•Êó†ËøîÂõûnull */final Node&lt;K,V&gt; getNode(int hash, Object key) &#123; Node&lt;K,V&gt;[] tab; // NodeÊï∞ÁªÑ Node&lt;K,V&gt; first, e; // Node int n; // Êï∞ÁªÑÈïøÂ∫¶ K k; // key // üîª Âà§Êñ≠ËØ•Êï∞ÁªÑÈùûÁ©∫ // Âπ∂Ê†πÊçÆ‰º†ÂÖ•keyÁöÑhashÂÄºËÆ°ÁÆóÂá∫ËØ•hashÂÄºÂØπÂ∫îÁöÑNodeÁöÑ‰∏ãÊ†áÔºåÂ∞ÜËØ•Êï∞ÁªÑ‰∏ãÊ†áÂØπÂ∫îÁöÑÂÄºËµãÂÄºÁªôfirst-NodeÔºàÊÑè‰∏∫hashÂÜ≤Á™ÅÊó∂Á¨¨‰∏Ä‰∏™ËäÇÁÇπÔºâ if ((tab = table) != null &amp;&amp; (n = tab.length) &gt; 0 &amp;&amp; (first = tab[(n - 1) &amp; hash]) != null) &#123; // üîπ ÂÖàÂà§Êñ≠Ëã•firstÂàöÂ•ΩÊòØÊàë‰ª¨Ë¶ÅÊâæÁöÑNodeÊó∂ÔºöÁõ¥Êé•ËøîÂõûfirst if (first.hash == hash &amp;&amp; // always check first node ((k = first.key) == key || (key != null &amp;&amp; key.equals(k)))) return first; // üîπ ÂΩìfirstÂ∞æÈÉ®ËøòÊúâÂÖÉÁ¥†ÔºàÂç≥ÊúâhashÂÜ≤Á™ÅÔºâÊó∂ÔºåÊ†πÊçÆNodeÁöÑÁªìÊûÑÂèñÂÄº„ÄÇ if ((e = first.next) != null) &#123; // üî∏ Á∫¢ÈªëÊ†ëÔºöÂ∞ÜNodeËΩ¨‰∏∫TreeNodeÁ±ªÂûãÔºåÂπ∂Ë∞ÉÁî®getTreeNode()ÂèñÂÄº„ÄÇ if (first instanceof TreeNode) return ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key); // üî∏ ÈìæË°®ÔºöÈÅçÂéÜÂèñÂÄº„ÄÇ do &#123; if (e.hash == hash &amp;&amp; // Âà§Êñ≠hashÂÄºÂíåkeyÂÄºÈÉΩÁõ∏Âêå ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) return e; &#125; while ((e = e.next) != null); &#125; &#125; // üîª Êï∞ÁªÑ‰∏∫Á©∫ÔºåËøîÂõûnull return null;&#125; Ôºà2ÔºâRemove() - Âà†Èô§%%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph TD T([\"Â¶Ç‰Ωï‰ªéHashMapÂà†Èô§ÂÖÉÁ¥†Ôºü\"]):::p T --> B(\"ÂÖàÊ†πÊçÆkeyÊâæÂà∞Ê°∂‰Ωç\") B --> A([\"Âà§Êñ≠ÂΩìÂâç‰ΩçÁΩÆÁöÑÂÖÉÁ¥†ÊòØÂê¶Â∞±Ë¶ÅÂà†Èô§ÁöÑÂÄº\"]):::lp A --> |\"ÊòØ\"| C2[\"Áõ¥Êé•Âà†Èô§ËØ•ÂÖÉÁ¥†\"]:::b A --> |\"Âê¶ÔºàÊúâhashÂÜ≤Á™ÅÔºâ\"| C([\"Âà§Êñ≠‰∏∫ÈìæË°®ÊàñÁ∫¢ÈªëÊ†ë\"]):::lp C --> |\"ÈìæË°®\"|a[\"Â∞Ü‰∏ä‰∏™‰ΩçÁΩÆÁöÑÊåáÈíàÔºàË∑≥ËøáËØ•ÂÄºÔºâÊåáÂêë‰∏ã‰∏™‰ΩçÁΩÆ\"]:::b C --> |\"Á∫¢ÈªëÊ†ë\"|b[\"ÂéªÊéâÂΩìÂâçËäÇÁÇπÂêéËá™Âπ≥Ë°°\"]:::b b -.- bt[\"ÔºàÊ†ëÈïøÂ∫¶Â∞è‰∫é6Êó∂ËΩ¨‰∏∫ÈìæË°®Ôºâ\"]:::info classDef info fill:#f6f6f7,color:#737379stroke-width: 3px, stroke-dasharray: 3 3 classDef p fill:#ddaebd classDef b fill:#d9dfeb classDef lp fill: #f4e4e9 - remove() Âà†Èô§ÂÖÉÁ¥† /** * Removes the mapping for the specified key from this map if present. * Ê†πÊçÆÊåáÂÆökeyÂà†Èô§Êò†Â∞Ñ„ÄÇ * * @param key Ë¶Å‰ªémap‰∏≠Âà†Èô§Êò†Â∞ÑÁöÑÈîÆ * @return ËøîÂõû‰∏éÈîÆÂÖ≥ËÅîÁöÑÂâçÂÄºÔºåËã•ÂâçÂÄº‰∏∫Á©∫ËøîÂõûnull */public V remove(Object key) &#123; Node&lt;K,V&gt; e; // üîª Ë∞ÉÁî®removeNode()Âà†Èô§ËØ•ÈîÆÊò†Â∞ÑÔºåËã•ÂâçÂÄº‰∏∫Á©∫ËøîÂõûnullÔºåËã•ÂâçÂÄºÈùûÁ©∫ËøîÂõûÂâçÂÄº„ÄÇ return (e = removeNode(hash(key), key, null, false, true)) == null ? null : e.value;&#125; - removeNode() Âà†Èô§Node /** * Implements Map.remove and related methods. * ÂÆûÁé∞Âà†Èô§ÂíåÁõ∏ÂÖ≥ÊñπÊ≥ï„ÄÇ * * @param hash keyÁöÑhashÂÄº * @param key key * @param value Ëã•ÊúâÂÄºÊó∂ÂåπÈÖçËØ•ÂÄº * @param matchValue Ëã•‰∏∫ÁúüÔºö‰ªÖÂÄºÁõ∏Á≠âÊó∂Âà†Èô§ * @param movable ‰∏∫false:Âà†Èô§Êó∂‰∏çÁßªÂä®ÂÖ∂‰ªñÂÄº * @return ËøîÂõûNodeÔºåËã•Êó†ËØ•NodeËøîÂõûnull */final Node&lt;K,V&gt; removeNode(int hash, Object key, Object value, boolean matchValue, boolean movable) &#123; Node&lt;K,V&gt;[] tab; // NodeÊï∞ÁªÑÔºàÂºïÁî®ÂΩìÂâçhashMapÁöÑÊï£ÂàóË°®Ôºâ Node&lt;K,V&gt; p; // ÂΩìÂâçNodeÂÖÉÁ¥†Ôºöp int n, index; // nÔºöÊï∞ÁªÑÈïøÂ∫¶ÔºåindexÔºöÊï∞ÁªÑ‰∏ãÊ†á // Êï∞ÁªÑÈùûÁ©∫„ÄÅÂΩìÂâçÁ¥¢Âºï‰ΩçÁΩÆÁöÑNodeÂÖÉÁ¥†pÈùûÁ©∫ if ((tab = table) != null &amp;&amp; (n = tab.length) &gt; 0 &amp;&amp; (p = tab[index = (n - 1) &amp; hash]) != null) &#123; Node&lt;K,V&gt; node = null, e; // Ë¶ÅÂà†Èô§ÁöÑNodeÂÖÉÁ¥†ÔºönodeÔºõÂΩìÂâçËäÇÁÇπÁöÑ‰∏ã‰∏™ËäÇÁÇπÔºöe(=p.next) K k; V v; // ÂΩìÂâçÂÖÉÁ¥†pÁöÑkeyÂíåvalueÂÄº // üîπ Á¨¨‰∏Ä‰∏™‰ΩçÁΩÆÂàöÂ•ΩÊòØË¶ÅÂà†Èô§ÁöÑÂÖÉÁ¥†ÔºöËµãÂÄºÁªônodeÔºåÊâßË°å‰∏ãÊñπ‰øÆÊîπÊåáÈíàÁöÑ‰ª£Á†Å if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) node = p; // üîπ Â≠òÂú®ÂìàÂ∏åÂÜ≤Á™ÅÊó∂ÔºöÊ†πÊçÆÈìæË°®ÊàñÁ∫¢ÈªëÊ†ëÁªìÊûÑËé∑ÂèñË¶ÅÂà†Èô§ÁöÑÂÖÉÁ¥†node else if ((e = p.next) != null) &#123; // üî∏ Á∫¢ÈªëÊ†ëÔºö‰ΩøÁî®getTreeNode()Ëé∑ÂèñÂÖÉÁ¥†ÔºåËµãÂÄºÁªônode„ÄÇ if (p instanceof TreeNode) node = ((TreeNode&lt;K,V&gt;)p).getTreeNode(hash, key); // üî∏ ÈìæË°®ÔºöÁî®hashÂÄºÂíåÈîÆÂÄºÂØπÈÅçÂéÜÔºöËµãÂÄºÁªônode„ÄÇ else &#123; do &#123; if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) &#123; node = e; break; &#125; p = e; &#125; while ((e = e.next) != null); &#125; &#125; // üî¥ Ê†πÊçÆÂÖÉÁ¥†(node)ÁöÑÁªìÊûÑÂà†Èô§ if (node != null &amp;&amp; (!matchValue || (v = node.value) == value || (value != null &amp;&amp; value.equals(v)))) &#123; // üîπ Ëã•Ë¶ÅÂà†Èô§Ê†ëÁªìÊûÑËäÇÁÇπÔºö‰ΩøÁî®removeTreeNode()ÁßªÈô§Ê†ëËäÇÁÇπ if (node instanceof TreeNode) ((TreeNode&lt;K,V&gt;)node).removeTreeNode(this, tab, movable); // üîπ Ëã•Ë¶ÅÂà†Èô§NodeËäÇÁÇπ‰∏äÁöÑÂÖÉÁ¥†ÔºàÂàöÂ•ΩÊòØÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÔºâÔºöÂ∞ÜËØ•ËäÇÁÇπËµãÂÄº‰∏∫‰∏ã‰∏™ÂÖÉÁ¥† else if (node == p) tab[index] = node.next; // üîπ Ëã•Ë¶ÅÂà†Èô§ÈìæË°®ËäÇÁÇπÔºöÊåáÂêëÂÖ∂‰∏ã‰∏™ÂÖÉÁ¥†ÁöÑnextÔºåÂ∞ÜÈìæË°®ÈìæÊé•Ëµ∑Êù•„ÄÇ else p.next = node.next; ++modCount; // ËÆ∞ÂΩï‰øÆÊîπÊ¨°Êï∞ÔºàÂèØ‰ª•Âà§Êñ≠ÊòØÂê¶‰øÆÊîπÊàêÂäüÔºâ --size; // Êï∞ÁªÑÈïøÂ∫¶Ëá™Âáè afterNodeRemoval(node); return node; &#125; &#125; return null;&#125; Ôºà3ÔºâPut() - Ê∑ªÂä†%%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph TD T([\"Â¶Ç‰ΩïÂêëHashMapÊ∑ªÂä†ÂÖÉÁ¥†Ôºü\"]):::p T --> B(\"ÂÖàÊ†πÊçÆkeyÊâæÂà∞Ê°∂‰Ωç\") B --> A([\"Âà§Êñ≠ÂΩìÂâçÁ¥¢ÂºïÊòØÂê¶Â∞±ÊòØË¶ÅÊ∑ªÂä†ÂÖÉÁ¥†ÁöÑ‰ΩçÁΩÆ\"]):::lp A --> |\"Êó†ÂÖÉÁ¥†\"| C2[\"Áõ¥Êé•Â∞ÜÂÖÉÁ¥†Ê∑ªÂä†Âà∞ËØ•‰ΩçÁΩÆ\"]:::b A --> |\"ÊúâÂÖÉÁ¥†ÔºàÊúâhashÂÜ≤Á™ÅÔºâ\"| C([\"Âà§Êñ≠‰∏∫ÈìæË°®ÊàñÁ∫¢ÈªëÊ†ë\"]):::lp C --> |\"ÈìæË°®\"|a[\"Â∞ÜÂÖÉÁ¥†Ê∑ªÂä†Âà∞ÈìæË°®Â∞æÈÉ®\"]:::b C --> |\"Á∫¢ÈªëÊ†ë\"|b[\"Â∞ÜÂÖÉÁ¥†Ê∑ªÂä†Âà∞Ê†ëÂ∞æÈÉ®\"]:::b a -.- at[\"ÈìæË°®ÈïøÂ∫¶Ë∂ÖËøá8„ÄÅ‰∏îÊ°∂Êï∞ÈáèÂ§ß‰∫é64Êó∂ËΩ¨‰∏∫Ê†ëÔºà*Ê°∂Êï∞Â∞è‰∫é64Êó∂‰∏ç‰ºöÊ†ëÂåñÔºåÂè™‰ºöÊâ©ÂÆπÔºâ\"]:::info classDef info fill:#f6f6f7,color:#737379stroke-width: 3px, stroke-dasharray: 3 3 classDef p fill:#ddaebd classDef b fill:#d9dfeb classDef lp fill: #f4e4e9 + put() Ê∑ªÂä†ÂÖÉÁ¥†/** * Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced. * Â≠òÂÄºÔºöÂ∞ÜÊåáÂÆöÂÄº‰∏éÊ≠§Êò†Â∞Ñ‰∏≠ÁöÑÊåáÂÆöÈîÆÁõ∏ÂÖ≥ËÅî„ÄÇÂ¶ÇÊûúÊò†Â∞ÑÂÖàÂâçÂåÖÂê´ÈîÆÁöÑÊò†Â∞ÑÔºåÂàôÂ∞ÜÊõøÊç¢ÊóßÂÄº„ÄÇ * * @param key * @param value * @return ËøîÂõûË¢´ÊõøÊç¢ÁöÑÂéüÂÄº */public V put(K key, V value) &#123; // Ë∞ÉÁî®putVal()ÊñπÊ≥ïÂ≠òÂÄº return putVal(hash(key), key, value, false, true);&#125; - putVal() ËµãÂÄºÊñπÊ≥ïÔºàËã•keyÂ∑≤ÊúâÂÄºÊó∂ÈªòËÆ§ÊõøÊç¢Ôºâ/** * Implements Map.put and related methods. * ÂÆûÁé∞‰∫ÜMapËµãÂÄº‰ª•ÂèäÁõ∏ÂÖ≥ÊñπÊ≥ï„ÄÇ * * @param hash keyÁöÑhashÂÄº * @param key keyÂÄº * @param value ÈúÄË¶ÅËµãÁöÑÂÄº * @param onlyIfAbsent ÊòØÂê¶‰øùÁïôÂéüÂÄºÔºàÈªòËÆ§‰∏∫falseÔºö‰ºöÊõøÊç¢ÂéüÂÄºÔºâ * @param evict false:Ë°®Â§Ñ‰∫éÂàõÂª∫Áä∂ÊÄÅ * @return ËøîÂõûÂâçÂÄºÔºåÂ¶ÇÊûúÊ≤°ÊúâÂàô‰∏∫Á©∫ */final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) &#123; Node&lt;K,V&gt;[] tab; // NodeÊï∞ÁªÑ Node&lt;K,V&gt; p; // Node int n, i; // nÔºöÊï∞ÁªÑÈïøÂ∫¶Ôºå iÔºöÊï∞ÁªÑÁ¥¢Âºï // üî¥ ‰∏Ä„ÄÅËã•Á©∫Êï∞ÁªÑÔºöÂàùÂßãÂåñ // ÂΩìÊï∞ÁªÑ‰∏∫Á©∫„ÄÅÈïøÂ∫¶‰∏∫0Êó∂ÔºöÊâ©ÂÆπÔºåÂπ∂Ëé∑ÂæóNodeÊï∞ÁªÑÈïøÂ∫¶nÔºàÂÆπÈáèÔºâ if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; // üî¥ ‰∫å„ÄÅËã•Á©∫Á¥¢ÂºïÔºöÁõ¥Êé•Â≠ò // Ëã•‰º†ÂÖ•ÁöÑkeyËÆ°ÁÆóÂá∫ÁöÑÁ¥¢Âºï‰ΩçÁΩÆÊó†ÂÖÉÁ¥†ÔºåÂàô‰ΩøÁî®ÈîÆÂÄºÂØπÂú®ËØ•‰ΩçÁΩÆ‰∏äÂàõÂª∫NodeÔºåputVal()ÂÆåÊàê„ÄÇ if ((p = tab[i = (n - 1) &amp; hash]) == null) tab[i] = newNode(hash, key, value, null); // üî¥ ‰∏â„ÄÅËã•Á¥¢ÂºïÈùûÁ©∫ÔºöÊ†πÊçÆÊÉÖÂÜµÂ≠òÂÄº // ÂèØËÉΩÊúâhashÂÜ≤Á™ÅÔºåÂà§Êñ≠ËØ•NodeÊòØÂê¶‰∏∫ÈìæË°®ÊàñÁ∫¢ÈªëÊ†ëËøõË°åÂ≠òÂÄº„ÄÇ else &#123; Node&lt;K,V&gt; e; // node K k; // key // üîπ Ëã•pÂàöÂ•ΩÂú®ÂΩìÂâçÁ¥¢Âºï‰ΩçÁΩÆÁöÑÁ¨¨‰∏Ä‰∏™ËäÇÁÇπ‰∏äÔºàÊú™Ê∂âÂèäÂà∞ÈìæË°®ÊàñÁ∫¢ÈªëÊ†ëÔºâÔºåÂ∞ÜËØ•NodeËµãÂÄºÁªôe‰ª•Â§áÂ≠òÂÄºÔºàÂΩìÂâçNodeÁöÑkeyÂÄºÂíå‰º†ÂÖ•ÁöÑkeyÂÄºÁõ∏Á≠âÔºâ if (p.hash == hash &amp;&amp; ((k = p.key) == key || (key != null &amp;&amp; key.equals(k)))) e = p; // üîπ TreeNodeÁ±ªÂûãÔºöÈÄöËøáputTreeVal()ÊñπÊ≥ïÂú®Á∫¢ÈªëÊ†ë‰∏äÊèíÂÖ•ÈîÆÂÄºÂØπÔºåËµãÂÄºÁªôe‰ª•Â§áÂ≠òÂÄº„ÄÇ else if (p instanceof TreeNode) e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value); // üîπ ÈìæË°®Á±ªÂûãÔºöÂæ™ÁéØÁõ¥Âà∞Â∞ÜÂÖÉÁ¥†ÊèíÂÖ•ÈìæË°®Â∞æÈÉ®ÔºåËµãÂÄºÁªôe‰ª•Â§áÂ≠òÂÄº„ÄÇ else &#123; for (int binCount = 0; ; ++binCount) &#123; // binCountÔºöÈìæË°®ËäÇÁÇπ‰∏™Êï∞ // üî∏ Ëã•Â∑≤ÈÅçÂéÜÂà∞ÈìæË°®Â∞æÈÉ®Ôºö‰ΩøÁî®newNode()Âú®Â∞æÈÉ®ÂÜçÊ∑ªÂä†‰∏Ä‰∏™Êñ∞ËäÇÁÇπÂπ∂Â≠òÂÄº„ÄÇ if ((e = p.next) == null) &#123; p.next = newNode(hash, key, value, null); // * Ëã•Ê∑ªÂä†ËäÇÁÇπÂêéÈìæË°®ÁöÑÈïøÂ∫¶Ë∂ÖËøáÊ†ëÂåñÈòàÂÄºÔºö // ÈÄöËøátreeifyBin()Â∞ÜÈìæË°®ËΩ¨Âåñ‰∏∫Á∫¢ÈªëÊ†ëÔºåË∑≥Âá∫Âæ™ÁéØÔºåputVal()ÂÆåÊàê„ÄÇ if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); break; &#125; // üî∏ Ëã•ËøòÊú™ÈÅçÂéÜÂà∞Â∞æÈÉ®„ÄÅ‰∏îËØ•ËäÇÁÇπÁöÑkeyÂÄº‰∏é‰º†ÂÖ•keyÂÄºÁõ∏Á≠âÔºö // ÂàôË∑≥Âá∫Âæ™ÁéØÔºåÊâßË°å‰∏ãÊñπÊõøÊç¢ÂéüÂÄºÁöÑÂà§Êñ≠„ÄÇ if (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != null &amp;&amp; key.equals(k)))) break; // üî∏ ÁªßÁª≠Âæ™ÁéØÈÅçÂéÜÈìæË°® p = e; &#125; &#125; // üîª ÊõøÊç¢Âπ∂ËæìÂá∫ÂéüÂÄºÔºàkeyÂ∑≤ÊúâÂÄºÊó∂Ôºâ if (e != null) &#123; // existing mapping for key V oldValue = e.value; // Ëã•ËÆæÁΩÆ‰∫ÜÊõøÊç¢ÂéüÂÄº„ÄÅÊàñÂéüÂÄº‰∏∫Á©∫Êó∂ÔºöÂ≠òÂÄº if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); // ËÆøÈóÆÂêéÂõûË∞ÉÔºà‚ùì return oldValue; &#125; &#125; ++modCount; // ËÆ∞ÂΩï‰øÆÊîπÊ¨°Êï∞ÔºàÊñπ‰æøÂú®Ëø≠‰ª£‰∏≠Ê£ÄÊµãÁªìÊûÑÊÄßÂèòÂåñÔºâ // üîª Ëã•Â≠òÂÄºÂêéÂÖÉÁ¥†Êï∞ÈáèÂ§ß‰∫éÊâ©ÂÆπÈòàÂÄºÔºåÂàôÊâ©ÂÆπ„ÄÇ if (++size &gt; threshold) resize(); afterNodeInsertion(evict); // ÊèíÂÖ•ÂêéÂõûË∞ÉÔºà‚ùì return null;&#125; ÊØîËæÉÊó∂ÂÖàÊØîËæÉhashÂÄºÔºåhashÁõ∏ÂêåÁöÑÊó∂ÂÄôÔºåÂÜç‰ΩøÁî®equalsÊñπÊ≥ïËøõË°åÊØîËæÉÔºöif(e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) Âõ†‰∏∫hashÊòØÊï¥Êï∞ÔºåÊØîËæÉÁöÑÊÄßËÉΩ‰∏ÄËà¨Ë¶ÅÊØîequals()È´òÂæàÂ§öÔºå‰ΩøÁî®Áü≠Ë∑Ø‰∏éÔºöhash‰∏çÂêåÔºåÂ∞±Ê≤°ÊúâÂøÖË¶ÅË∞ÉÁî®equalsÊñπÊ≥ï‰∫ÜÔºåËøôÊ†∑Êï¥‰Ωì‰∏äÂèØ‰ª•ÊèêÈ´òÊØîËæÉÊÄßËÉΩ„ÄÇ + putIfAbsent() ËµãÂÄºÔºå‰∏îÂ∑≤ÊúâÂÄºÊó∂‰∏çËøõË°åË¶ÜÁõñ@Overridepublic V putIfAbsent(K key, V value) &#123; // üîª ‰∏éÈªòËÆ§ÁöÑput()Âå∫Âà´Âú®‰∫éÁ¨¨Âõõ‰∏™ÂèÇÊï∞ÔºöonlyIfAbsentÔºà‰∏∫trueÊó∂‰∏çË¶ÜÁõñÂéüÂÄºÔºâ return putVal(hash(key), key, value, true, true);&#125; Ôºà4Ôºâ*Resize() - Êâ©ÂÆπ‚ë† ‰ΩïÊó∂Êâ©ÂÆπ%%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph TD T([\"HashMap‰ΩïÊó∂ÈúÄË¶ÅÊâ©ÂÆπÔºü\"]):::p T --> |\"1. ÂàùÂßãÂåñ\"| A(\"1. table‰∏∫null ÊàñÈïøÂ∫¶‰∏∫0Êó∂\"):::lp T --> |\"2. Â≠òÂÄº\"| B(\"2. Ê∑ªÂä†ÂÖÉÁ¥†‰∏îÂÖÉÁ¥†Êï∞ÈáèÂç≥Â∞ÜË∂ÖËøáÊâ©ÂÆπÈòàÂÄºÔºàthresholdÔºâÊó∂\"):::lp B -.- |\"hreshold ÂèØ‰ª•Áî± tableSizeFor() ËÆ°ÁÆóÂæóÂà∞\"| b[\"tableSizeFor()ÔºöÂèØ‰ª•ËÆ°ÁÆóÂá∫Â§ß‰∫éÂΩìÂâçÊñπÊ≥ïÂÖ•ÂèÇÂÄºÔºåÂπ∂‰∏îÂíåÂΩìÂâçÊñπÊ≥ïÂÖ•ÂèÇÂÄºÊúÄÊé•ËøëÁöÑ2ÁöÑÂπÇÊï∞„ÄÇ\"]:::info classDef p fill: #ddaebd classDef lp fill: #f4e4e9 classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 ‚ë° Â¶Ç‰ΩïÊâ©ÂÆπ %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph TD T([\"HashMapÂ¶Ç‰ΩïÊâ©ÂÆπÔºü\"]):::p T --> A(\"2ÂÄçÊâ©ÂÆπÔºåÂàõÂª∫Êñ∞Êï∞ÁªÑ\") A --> B(\"ÁßªÂä®ÂÖÉÁ¥†Âà∞Êñ∞Êï∞ÁªÑÔºàÈáçÊñ∞ËÆ°ÁÆóhashÔºâ\") B --> b([\"Âà§Êñ≠ÂÖÉÁ¥†Á±ªÂûãË∞ÉÊï¥‰ΩçÁΩÆ\"]):::lp b -.-|\"Âçï‰∏™ÂÄº\"| b1[\"‚ë†Âéü‰ΩçÁΩÆ‚ë° Âéü‰ΩçÁΩÆ + ÂéüÂÆπÈáè\"]:::lb b -.-|\"Á∫¢ÈªëÊ†ë\"| b2[\"split()ÂàÜÂâ≤Ê†ë‚ë†‰∏ÄÊ£µÔºöÂéü‰ΩçÁΩÆ‚ë°Âè¶‰∏ÄÊ£µÔºöÂéü‰ΩçÁΩÆ + ÂéüÂÆπÈáè\"]:::lb b -.-|\"ÈìæË°®\"| b3[\"‚ë†‰Ωé‰ΩçÈìæË°®ÔºöÂéü‰ΩçÁΩÆ‚ë°È´ò‰ΩçÈìæË°®ÔºöÂéü‰ΩçÁΩÆ + ÂéüÂÆπÈáè\"]:::lb b2 -.- b2t[\"Ëã•Ê†ëËäÇÁÇπÊï∞Èáè‚â§6ÔºöËΩ¨ÈìæË°®\"]:::info classDef p fill: #ddaebd classDef lp fill: #f4e4e9 classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 Ë∞ÉÊï¥‰ΩçÁΩÆÁöÑÂéüÂõ†Ôºö Âõ†‰∏∫HashMapËÆ°ÁÆóÁ¥¢Âºï‰ΩçÁΩÆÊòØÊ†πÊçÆhashÂÄº &amp; (ÂΩìÂâçÂÆπÈáè -1)ÔºåÂõ†Ê≠§ÂΩìÂÆπÈáèÊîπÂèòÊó∂Ôºå‰∏Ä‰∫õÂéüÊú¨ÁöÑÁ¥¢Âºï‰ΩçÁΩÆ‰πü‰ºöÂèëÁîüÊîπÂèò„ÄÇÊâ©ÂÆπÁöÑÂêåÊó∂ÈáçÊñ∞Ë∞ÉÊï¥ÂÖÉÁ¥†‰ΩçÁΩÆÔºåÂèñÂÄºÊó∂ÊâçËÉΩÊ≠£Á°ÆÂåπÈÖçÂà∞Áõ∏Â∫îÁöÑÈîÆÂÄºÂØπ„ÄÇ ‚ë¢ Â¶Ç‰ΩïË∞ÉÊï¥‰ΩçÁΩÆ ÂÖÉÁ¥†‰ΩçÁΩÆÂ¶Ç‰ΩïÊîπÂèòÔºü %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph TD T([\"ÂÖÉÁ¥†‰ΩçÁΩÆÂ¶Ç‰ΩïÊîπÂèòÔºü\"]):::p T --> A(\"hashÂÄº & ÂéüÈïøÂ∫¶\"):::lb A --> a[\"ÁªìÊûú‰∏∫0Ôºå‰ΩçÁΩÆ‰∏çÂèò\"]:::lp A --> b[\"ÁªìÊûú‰∏∫1ÔºåÂú®Êñ∞‰ΩçÁΩÆ\"]:::lp a -.- at[\"Â¶ÇÔºåÂéühashÂÄº=3ÔºàÂéü‰ΩçÁΩÆ=3ÔºâÔºåÊï∞ÁªÑÈïøÂ∫¶16Ôºå hash & 16Ôºö 0000 0011 // 3 0001 0000 // 16 0000 0000 // =0ÂàôÔºåÊñ∞‰ΩçÁΩÆ = Âéü‰ΩçÁΩÆ = 3\"]:::info b -.- bt[\"Â¶ÇÔºåÂéühashÂÄº=19ÔºàÂéü‰ΩçÁΩÆ=3ÔºâÔºåÊï∞ÁªÑÈïøÂ∫¶16Ôºåhash & 16Ôºö 0001 0011 // 19 0001 0000 // 16 0001 0000 // =1ÂàôÔºåÊñ∞‰ΩçÁΩÆ = Âéü‰ΩçÁΩÆ + ÂéüÂÆπÈáè = 19\"]:::info classDef p fill: #ddaebd classDef lp fill: #f4e4e9 classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 Êª°Ë∂≥‚Äú(e.hash &amp; oldCap)==0‚ÄùÊù°‰ª∂ÁöÑËäÇÁÇπÂèØ‰ª•ÁªßÁª≠Âú®ÂéüÁ¥¢Âºï‰Ωç‰∏äÂ≠òÂÇ®Ôºå‰∏çÊª°Ë∂≥ËØ•Êù°‰ª∂ÁöÑËäÇÁÇπÂàôÈúÄË¶ÅËøõË°åÁßªÂä®Êìç‰Ωú„ÄÇ HashMap‰∏≠ÔºåtableÊï∞ÁªÑÈÉΩÊòØ‰ª•2ÁöÑÂπÇÊï∞ËøõË°åÊâ©ÂÆπÊìç‰ΩúÁöÑÔºåÂ∞±ÊòØÂ∞ÜÂéüÂÆπÈáèÂÄºÂ∑¶Áßª1‰Ωç„ÄÇ Âõ†Ê≠§ËøõË°åÊâ©ÂÆπÊìç‰ΩúÂêéÔºåÂêÑ‰∏™K-VÈîÆÂÄºÂØπËäÇÁÇπÊòØÂê¶‰ªçËÉΩÂú®ÂéüÁ¥¢Âºï‰Ωç‰∏äÔºåÂèñÂÜ≥‰∫éÊñ∞Â¢ûÁöÑ‰∏Ä‰ΩçÔºàoldCapÁöÑÂÄºÔºâÂú®ËøõË°å‰∏éËøêÁÆóÊó∂ÊòØÂê¶‰∏∫0„ÄÇ ÈìæË°®ÂÖÉÁ¥†ÁßªÂä®Ôºö Êª°Ë∂≥‚Äú(e.hash &amp; oldCap)==0‚ÄùÊù°‰ª∂ÁöÑËäÇÁÇπ‰ºöÊûÑÊàêÊñ∞ÁöÑÂçïÂêëÈìæË°®ÔºåËøô‰∏™ÈìæË°®‰∏≠ÁöÑËäÇÁÇπ‰ºöÊåâÁÖßÂéüÁ¥¢Âºï‰ΩçÈ°∫Â∫èÂ≠òÂÇ®‰∫éÊñ∞ÁöÑHashMapÈõÜÂêàÁöÑtableÊï∞ÁªÑ‰∏≠Ôºõ Êª°Ë∂≥‚Äú(e.hash &amp;oldCap) !=0‚ÄùÊù°‰ª∂ÁöÑËäÇÁÇπ‰ºöÊûÑÊàêÂè¶‰∏Ä‰∏™Êñ∞ÁöÑÂçïÂêëÈìæË°®ÔºåÂπ∂‰∏îÂ∞ÜÂéüÁ¥¢ÂºïÂÄº+ÂéüÊï∞ÁªÑÈïøÂ∫¶ÁöÑËÆ°ÁÆóÁªìÊûú‰Ωú‰∏∫Êñ∞ÁöÑÁ¥¢ÂºïÂÄºÂ≠òÂÇ®‰∫éÊñ∞ÁöÑHashMapÈõÜÂêàÁöÑtableÊï∞ÁªÑ‰∏≠„ÄÇ Á∫¢ÈªëÊ†ëÂÖÉÁ¥†ÁßªÂä®Ôºö Â∞ÜËøôÊ£µÁ∫¢ÈªëÊ†ëÊãÜÂàÜÊàê‰∏§Ê£µÊñ∞ÁöÑÁ∫¢ÈªëÊ†ëÔºöÔºàËã•Á∫¢ÈªëÊ†ë‰∏≠ËäÇÁÇπÊï∞‚â§6Ôºå‰ºöÂ∞ÜÊ†ëÁªìÊûÑËΩ¨‰∏∫ÈìæË°®ÁªìÊûÑÔºâ‚ë† ‰∏ÄÊ£µÁ∫¢ÈªëÊ†ëÔºàÊàñÈìæË°®ÔºâÁïôÂú®ÂéüÁ¥¢Âºï‰Ωç‰∏äÔºå‚ë° Âè¶‰∏ÄÊ£µÁ∫¢ÈªëÊ†ëÔºàÊàñÈìæË°®ÔºâÊîæÂà∞ÂéüÁ¥¢ÂºïÂÄº+ÂéüÊï∞ÁªÑÂÆπÈáèÂÄºËÆ°ÁÆóÁªìÊûúÂØπÂ∫îÁöÑÊñ∞Á¥¢Âºï‰Ωç‰∏ä„ÄÇ - resize() Êâ©ÂÆπ/** * Initializes or doubles table size. If null, allocates in accord with initial capacity target held in field threshold. * Otherwise, because we are using power-of-two expansion, the elements from each bin must either stay at same index, or move with a power of two offset in the new table. * ÂàùÂßãÂåñÊàñ‰∫åÂÄçÊâ©ÂÆπ„ÄÇËã•‰∏∫Á©∫ÔºåÊ†πÊçÆÈòàÂÄºÂíåÂàùÂßãÂÆπÈáèÂàÜÈÖç„ÄÇ * Áî±‰∫é‰ΩøÁî®2Ê¨°ÂπÇÊâ©ÂÆπÔºåÂõ†Ê≠§ÊØè‰∏™ÂÖÉÁ¥†‰øùÊåÅÁõ∏ÂêåÁ¥¢ÂºïÔºåÊàñÂú®Êñ∞Ë°®‰∏≠‰ª•‰∫åÊ¨°ÂπÇÂÅèÁßªÈáèÁßªÂä®„ÄÇ * * @return table*/final Node&lt;K,V&gt;[] resize() &#123; Node&lt;K,V&gt;[] oldTab = table; // Âéütable int oldCap = (oldTab == null) ? 0 : oldTab.length; // Êâ©ÂÆπÂâçÁöÑtableÈïøÂ∫¶ÔºåËã•Êó†ÂÖÉÁ¥†ËøîÂõû0 int oldThr = threshold; // ÂéüÈòàÂÄº int newCap, newThr = 0; // Êñ∞ÈïøÂ∫¶„ÄÅÊñ∞ÈòàÂÄº // üî¥ ‰∏Ä„ÄÅËÆæÁΩÆÊâ©ÂÆπÈòàÂÄº // üîπ ‚ë† Ëã•Â∑≤ÂàùÂßãÂåñ(ÂéüÊï∞ÁªÑÊúâÂÖÉÁ¥†)ÔºöÊ£ÄÊü•Êï∞ÁªÑÈïøÂ∫¶Âπ∂ËÆæÁΩÆ2ÂÄçÊâ©ÂÆπÈòàÂÄº„ÄÇ if (oldCap &gt; 0) &#123; // üî∏ Ëã•ÂéüÊï∞ÁªÑÈïøÂ∫¶Ë∂ÖËøáÊúÄÂ§ßÂÆπÈáèÂÄºÔºö‚Äî&gt; Â∑≤Âà∞ËææÂÆπÈáè‰∏äÂÄºÔºåÊó†Ê≥ïÂÜçÊâ©ÂÆπÔºåËøîÂõûÂéüË°®„ÄÇ if (oldCap &gt;= MAXIMUM_CAPACITY) &#123; threshold = Integer.MAX_VALUE; return oldTab; &#125; // üî∏ Ëã•ÂéüÊï∞ÁªÑÈïøÂ∫¶2ÂÄçÊâ©ÂÆπÂêé‰ªçÊú™Ë∂ÖËøáÂÆπÈáè‰∏äÈôêÔºå‰∏îÂéüÊï∞ÁªÑÈïøÂ∫¶Ë∂ÖËøá‰∫ÜÈªòËÆ§ÂàùÂßãÂÆπÈáèÔºö‚Äî&gt; ÂéüÊâ©ÂÆπÈòàÂÄºËÆæÁΩÆ‰∏∫2ÂÄç„ÄÇ else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp; oldCap &gt;= DEFAULT_INITIAL_CAPACITY) newThr = oldThr &lt;&lt; 1; // double threshold &#125; // üîπ ‚ë° Ëã•Êú™ÂàùÂßãÂåñ(ÂéüÊï∞ÁªÑÊó†ÂÖÉÁ¥†)Ôºå‰ΩÜÂ∑≤ËÆæÁΩÆËøáÊâ©ÂÆπÈòàÂÄº(&gt;0) ÔºöÂ∞ÜÊñ∞Êï∞ÁªÑÈïøÂ∫¶ËÆæÁΩÆ‰∏∫ËØ•Êâ©ÂÆπÈòàÂÄº„ÄÇ else if (oldThr &gt; 0) // initial capacity was placed in threshold newCap = oldThr; // üîπ ‚ë¢ Ëã•Êú™ÂàùÂßãÂåñ(ÂéüÊï∞ÁªÑÊó†ÂÖÉÁ¥†)Ôºå‰∏îÊú™ËÆæÁΩÆËøáÊâ©ÂÆπÈòàÂÄºÔºö‰ΩøÁî®Á≥ªÁªüËÆæÁΩÆÁöÑÈªòËÆ§Êï∞ÁªÑÈïøÂ∫¶ÂíåÈªòËÆ§ÈòàÂÄºËµãÂÄº„ÄÇ else &#123; // zero initial threshold signifies using defaults newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); &#125; // üî¥ ‰∫å„ÄÅÊ£ÄÊü•Êâ©ÂÆπÈòàÂÄº // Ëã•Êñ∞Êâ©ÂÆπÈòàÂÄº‰ªç‰∏∫0Ôºö‰ΩøÁî®Êñ∞Êï∞ÁªÑÈïøÂ∫¶ËÆ°ÁÆóÊñ∞ÁöÑÊâ©ÂÆπÈòàÂÄºÔºàÂπ∂Â∞ÜÊï∞ÁªÑÈïøÂ∫¶ÈôêÂà∂Âú®ÊúÄÂ§ßÂÆπÈáè‰∏äÈôêÂÜÖÔºâ if (newThr == 0) &#123; float ft = (float)newCap * loadFactor; newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); &#125; // ËÆæÁΩÆÊâ©ÂÆπÈòàÂÄº threshold = newThr; // üî¥ ‰∏â„ÄÅÊâ©ÂÆπ @SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;) // üîπ Êñ∞Âª∫Êï∞ÁªÑ Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap]; // ‰ΩøÁî®Êñ∞ÁöÑÊï∞ÁªÑÈïøÂ∫¶ÂàõÂª∫Êñ∞Êï∞ÁªÑ table = newTab; // üîπ ÁßªÂä®ÂÖÉÁ¥†Âà∞Êñ∞Êï∞ÁªÑ // - Ëã•ÂéüÊï∞ÁªÑ‰∏∫Á©∫ÔºåÊó†ÈúÄÁßªÂä®ÔºåÁõ¥Êé•ËøîÂõûËØ•Êï∞ÁªÑ„ÄÇ // - Ëã•ÂéüÊï∞ÁªÑÈùûÁ©∫ÔºöÁßªÂä®Êï∞ÊçÆÂà∞Êñ∞Êï∞ÁªÑ„ÄÇ if (oldTab != null) &#123; // üî∏ Â§ñÂ±ÇÂæ™ÁéØÔºöÈÅçÂéÜÂéüÊï∞ÁªÑÂÖÉÁ¥† for (int j = 0; j &lt; oldCap; ++j) &#123; Node&lt;K,V&gt; e; if ((e = oldTab[j]) != null) &#123; // Ê∏ÖÁ©∫ÂéüÂÄºÔºå‰æø‰∫éGCÂõûÊî∂„ÄÇ oldTab[j] = null; // ‚ë† Âçï‰∏™ÂÄº if (e.next == null) newTab[e.hash &amp; (newCap - 1)] = e; // Âéü‰Ωç Êàñ +ÊóßÂÆπÈáèoldCap // ‚ë° Á∫¢ÈªëÊ†ëÔºöÂàÜÂâ≤ else if (e instanceof TreeNode) ((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap); // ‚ë¢ ÈìæË°®Ôºö else &#123; // preserve order // ‰Ωé‰ΩçÈìæË°®Ôºö‰ΩçÁΩÆ‰∏çÂèò Node&lt;K,V&gt; loHead = null, loTail = null; // È´ò‰ΩçÈìæË°®Ôºö‰ΩçÁΩÆ + ÂÆπÈáè Node&lt;K,V&gt; hiHead = null, hiTail = null; Node&lt;K,V&gt; next; // üî∏ ÂÜÖÂ±ÇÂæ™ÁéØÔºöËÆ°ÁÆóÊñ∞ËäÇÁÇπÁöÑÁ¥¢Âºï‰ΩçÁΩÆ„ÄÇ do &#123; next = e.next; // trueÔºö‰ΩçÁΩÆ‰∏çÂèòÔºà‰Ωé‰ΩçÈìæË°®Ôºâ if ((e.hash &amp; oldCap) == 0) &#123; if (loTail == null) loHead = e; else loTail.next = e; loTail = e; &#125; // falseÔºö‰ΩçÁΩÆ + ÂÆπÈáèÔºàÈ´ò‰ΩçÈìæË°®Ôºâ else &#123; if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; &#125; &#125; while ((e = next) != null); // ‰Ωé‰ΩçÈìæË°®ËµãÂÄº if (loTail != null) &#123; loTail.next = null; newTab[j] = loHead; &#125; // È´ò‰ΩçÈìæË°®ËµãÂÄº if (hiTail != null) &#123; hiTail.next = null; newTab[j + oldCap] = hiHead; &#125; &#125; &#125; &#125; &#125; // üîπ ËøîÂõûÊñ∞Êï∞ÁªÑ return newTab;&#125; ‰∫î„ÄÅÂÜÖÈÉ®Á±ªÔºà1ÔºâNode HashMap.NodeÁ±ªÔºö /** * Basic hash bin node, used for most entries. (See below for TreeNode subclass, and in LinkedHashMap for its Entry subclass.) * Âü∫Êú¨hashÁöÑbinËäÇÁÇπÔºåÁî®‰∫éÂ§ßÈÉ®ÂàÜËäÇÁÇπ„ÄÇÔºàTreeNodeÂ≠êÁ±ªËßÅ‰∏ãÊñáÔºåEntryÂ≠êÁ±ªËßÅLinkedHashMap„ÄÇÔºâ */static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123; final int hash; final K key; // finalÔºöÁî±‰∫ékeyÊòØËÆ°ÁÆóÂÖÉÁ¥†ÊéíÂàó‰ΩçÁΩÆÁöÑ‰æùÊçÆÔºåÂõ†Ê≠§‰∏ÄÊó¶ÂàùÂßãÂåñÂ∞±‰∏çÂÖÅËÆ∏ÊîπÂèò„ÄÇ V value; Node&lt;K,V&gt; next; // ‰∏ã‰∏Ä‰∏™ËäÇÁÇπÔºàÂõ†‰∏∫ÈúÄË¶ÅÁî®NodeËäÇÁÇπÊûÑÂª∫ÂçïÂêëÈìæË°®Ôºâ Node(int hash, K key, V value, Node&lt;K,V&gt; next) &#123; this.hash = hash; this.key = key; this.value = value; this.next = next; &#125; public final K getKey() &#123; return key; &#125; public final V getValue() &#123; return value; &#125; public final String toString() &#123; return key + &quot;=&quot; + value; &#125; // üîª ÈáçÂÜôhashCode()ÔºöÂ∞ÜkeyÁöÑHashÂÄº„ÄÅvalueÁöÑHashÂÄºËøõË°åÂºÇÊàñËøêÁÆó„ÄÇ public final int hashCode() &#123; return Objects.hashCode(key) ^ Objects.hashCode(value); &#125; public final V setValue(V newValue) &#123; V oldValue = value; value = newValue; return oldValue; &#125; // üîª ÈáçÂÜôequals() public final boolean equals(Object o) &#123; // üîπ ‚ë† Âà§Êñ≠‰∏§‰∏™ËäÇÁÇπÁöÑÂÜÖÂ≠òËµ∑ÂßãÂú∞ÂùÄÁõ∏Âêå if (o == this) return true; // üîπ ‚ë° Âà§Êñ≠‰∏§‰∏™MapÁ±ªÂûãËäÇÁÇπÁöÑkeyÂíåvalueÂÄºÈÉΩÁõ∏Á≠â if (o instanceof Map.Entry) &#123; Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o; if (Objects.equals(key, e.getKey()) &amp;&amp; Objects.equals(value, e.getValue())) return true; &#125; return false; &#125;&#125; ÈáçÂÜôHashCode() JavaÂÆòÊñπÂØπÈáçÂÜôÂØπË±°ÁöÑ hashCode() ÊñπÊ≥ïÊúâ‰∏•Ê†ºÁöÑË¶ÅÊ±Ç ‚Äî‚Äî Ëã•ÈáçÂÜô hashCode() ÊñπÊ≥ïÔºåÂàôÈúÄË¶ÅÈáçÂÜôÁõ∏Â∫îÁöÑ equals() ÊñπÊ≥ï„ÄÇ Ë°•ÂÖÖÔºöObjectsÂ∑•ÂÖ∑Á±ª graph LR T([\"ObjectsÂ∑•ÂÖ∑Á±ª\"]):::p T --> A(\"Êèê‰æõ‰∫ÜËøõË°åÂØπË±°ÊØîËæÉ„ÄÅÊ£ÄÈ™åÁöÑÂü∫Êú¨Êìç‰Ωú\"):::lb A --> 1([\"compare(T, S, Comparator)\"]):::lp A --> 2([\"hashCode(Object)\"]):::lp A --> 3([\"hashCode(Object[])\"]):::lp A --> 4(\"isNull(Object)„ÄÅnonNull(Object)„ÄÅrequireNonNull(Object)Á≠â\"):::lp A --> 5([\"toString(Object)\"]):::lp 1 -.- 1t[\"‰∏§‰∏™ÂØπË±°ÁöÑÊØîËæÉÊìç‰Ωú\"] 2 -.- 2t[\"ËÆ°ÁÆóÂØπË±°HashÂÄº\"] 3 -.- 3t[\"ËÆ°ÁÆóÂ§ö‰∏™ÂØπË±°ÁöÑHashÂÄºÁªÑÂêà\"] 4 -.- 4t[\"Ê†°È™åÊàñÁ°ÆËÆ§ÂΩìÂâçÂØπË±°ÊòØÂê¶‰∏∫Á©∫\"] 5 -.- 5t[\"ËøîÂõûÂØπË±°ÁöÑÂ≠óÁ¨¶‰∏≤‰ø°ÊÅØ\"] classDef p fill: #ddaebd classDef lp fill: #f4e4e9 classDef lb fill: #d9dfeb Ê†πÊçÆÂìàÂ∏åÂÄºÂ≠òÂèñÂØπË±°„ÄÅÊØîËæÉÂØπË±°ÊòØËÆ°ÁÆóÊú∫Á®ãÂ∫è‰∏≠‰∏ÄÁßçÈáçË¶ÅÁöÑÊÄùÁª¥ÊñπÂºè„ÄÇ ÂÆÉ‰ΩøÂæóÂ≠òÂèñÂØπË±°‰∏ªË¶Å‰æùËµñ‰∫éËá™Ë∫´HashÂÄºÔºåËÄå‰∏çÊòØ‰∏éÂÖ∂‰ªñÂØπË±°ËøõË°åÊØîËæÉÔºåÂ≠òÂèñÊïàÁéá‰πü‰∏éÈõÜÂêàÂ§ßÂ∞èÊó†ÂÖ≥ÔºåÈ´òËææO(1)ÔºåÂç≥‰ΩøËøõË°åÊØîËæÉÔºå‰πüÂà©Áî®HashÂÄºÊèêÈ´òÊØîËæÉÊÄßËÉΩ„ÄÇ Ôºà2ÔºâTreeNode TreeNode ÁªßÊâøËá™ LinkedHashMap.Entry Á±ª„ÄÇ HashMapÈõÜÂêà‰ΩøÁî® HashMap.TreeNode Á±ªÁöÑÂØπË±°Ë°®Á§∫Á∫¢ÈªëÊ†ë‰∏≠ÁöÑËäÇÁÇπÔºåÊù•ÊûÑÊàêÁ∫¢ÈªëÊ†ë„ÄÇ ‚ë† ÂΩìÊüê‰∏™Á¥¢Âºï‰Ωç‰∏äÁöÑÈìæË°®ÈïøÂ∫¶ËææÂà∞ÊåáÂÆöÁöÑÈòàÂÄºÔºàÈªòËÆ§‰∏∫ÂçïÂêëÈìæË°®ÈïøÂ∫¶Ë∂ÖËøá8ÔºâÊó∂ÔºåÂçïÂêëÈìæË°®‰ºöËΩ¨Âåñ‰∏∫Á∫¢ÈªëÊ†ëÔºõ‚ë° ÂΩìÁ∫¢ÈªëÊ†ë‰∏≠ÁöÑËäÇÁÇπË∂≥Â§üÂ∞ëÔºàÈªòËÆ§‰∏∫Á∫¢ÈªëÊ†ë‰∏≠ÁöÑËäÇÁÇπÊï∞ÈáèÂ∞ë‰∫é6‰∏™ÔºâÊó∂ÔºåÁ∫¢ÈªëÊ†ë‰ºöËΩ¨Êç¢‰∏∫ÂçïÂêëÈìæË°®„ÄÇ - Â±ûÊÄßstatic final class TreeNode&lt;K,V&gt; extends LinkedHashMap.Entry&lt;K,V&gt; &#123; // Áà∂ËäÇÁÇπ TreeNode&lt;K,V&gt; parent; // red-black tree links // Â∑¶ËäÇÁÇπ TreeNode&lt;K,V&gt; left; // Âè≥ËäÇÁÇπ TreeNode&lt;K,V&gt; right; // ÂâçËäÇÁÇπÔºöÂà†Èô§Êó∂ÈúÄË¶ÅÂèñÊ∂àÈìæÊé•&quot;next&quot; TreeNode&lt;K,V&gt; prev; // needed to unlink next upon deletion // ËäÇÁÇπÈ¢úËâ≤ÔºötrueÁ∫¢Ëâ≤ÔºõfalseÈªëËâ≤ boolean red; // ÊûÑÈÄ†ÊñπÊ≥ïÔºåÂèÇÊï∞ÔºöhashÂÄº„ÄÅkey„ÄÅvalue„ÄÅ‰∏ã‰∏Ä‰∏™NodeËäÇÁÇπ TreeNode(int hash, K key, V val, Node&lt;K,V&gt; next) &#123; super(hash, key, val, next); &#125; // ... // ËøòÊúâÊûÑÂª∫Á∫¢ÈªëÊ†ë„ÄÅËß£ÊûÑÁ∫¢ÈªëÊ†ë„ÄÅÊ∑ªÂä†ËäÇÁÇπ„ÄÅÁßªÈô§ËäÇÁÇπÁ≠âÊñπÊ≥ï&#125; - getTreeNode() Ëé∑ÂèñÁ∫¢ÈªëÊ†ëËäÇÁÇπ /** * Calls find for root node. * Ë∞ÉÁî®Êü•ÊâæÊ†πËäÇÁÇπ */final TreeNode&lt;K,V&gt; getTreeNode(int h, Object k) &#123; // üîª Ë∞ÉÁî®find()Êü•ÊâæËäÇÁÇπ return ((parent != null) ? root() : this).find(h, k, null); // Ëã•Ê†πËäÇÁÇπ‰∏ç‰∏∫Á©∫ÔºåË∞ÉÁî®rootËäÇÁÇπÊü•ÊâæÔºõËã•Ê†πËäÇÁÇπ‰∏∫Á©∫Ôºå‰ΩøÁî®thisÊü•Êâæ„ÄÇ&#125; - find() Êü•ÊâæÊ†ëËäÇÁÇπ /** * Finds the node starting at root p with the given hash and key. The kc argument caches comparableClassFor(key) upon first use comparing keys. * ‰ΩøÁî®ÁªôÂÆöÁöÑkeyÂíåhashÂÄºÊü•Êâæ‰ªéÊ†πpÂºÄÂßãÁöÑËäÇÁÇπ„ÄÇ */final TreeNode&lt;K,V&gt; find(int h, Object k, Class&lt;?&gt; kc) &#123; TreeNode&lt;K,V&gt; p = this; // ÂΩìÂâçÊ†ëÂΩ¢NodeÔºöp // ÈÅçÂéÜÊï¥Ê†ëÔºö do &#123; int ph, dir; K pk; TreeNode&lt;K,V&gt; pl = p.left, pr = p.right, q; // ÂΩìÂâçNodeÂ∑¶ËäÇÁÇπ„ÄÅÂè≥ËäÇÁÇπ„ÄÅ // Ëã•ÂΩìÂâçËäÇÁÇπhashÂÄºËæÉÂ§ßÔºöpÂèñÂÖ∂Â∑¶ËäÇÁÇπ if ((ph = p.hash) &gt; h) p = pl; // Ëã•ÂΩìÂâçËäÇÁÇπhashÂÄºËæÉÂ∞èÔºöpÂèñÂÖ∂Âè≥ËäÇÁÇπ else if (ph &lt; h) p = pr; // Ëã•ÂΩìÂâçËäÇÁÇπkeyÂÄºÁ≠â‰∫éÁªôÂÆökeyÂÄºÔºåËøîÂõûÂΩìÂâçËäÇÁÇπ else if ((pk = p.key) == k || (k != null &amp;&amp; k.equals(pk))) return p; // Ëã•Â∑¶ËäÇÁÇπ‰∏∫Á©∫ÔºåpÂèñÂÖ∂Âè≥ËäÇÁÇπ else if (pl == null) p = pr; // Ëã•Âè≥ËäÇÁÇπ‰∏∫Á©∫ÔºåpÂèñÂÖ∂Â∑¶ËäÇÁÇπ else if (pr == null) p = pl; // Ê†πÊçÆcompareToÊØîËæÉ else if ((kc != null || (kc = comparableClassFor(k)) != null) &amp;&amp; (dir = compareComparables(kc, k, pk)) != 0) p = (dir &lt; 0) ? pl : pr; // Ê†πÊçÆcompareToÁöÑÁªìÊûúÔºåËã•Âè≥ËäÇÁÇπËÉΩÊâæÂà∞ÔºöËøîÂõûÂè≥ËäÇÁÇπ else if ((q = pr.find(h, k, kc)) != null) return q; // Ëã•compareToÁöÑÁªìÊûúÂú®Â∑¶ËäÇÁÇπ‰∏äÔºöÁªßÁª≠Êü•Êâæ else p = pl; &#125; while (p != null); return null;&#125; - split() ÂàÜÂâ≤Ê†ëÁªìÊûÑÔºàHashMapÊâ©ÂÆπÊó∂‰ΩøÁî®Âà∞ÁöÑÊñπÊ≥ïÔºâ/** * Splits nodes in a tree bin into lower and upper tree bins, or untreeifies if now too small. Called only from resize; see above discussion about split bits and indices. * ÂàÜÂâ≤ËØ•Ê†ë‰∏∫‰∏§Ê£µÊ†ëÔºåËã•Ê†ëÂ§™Â∞èÂàôÈìæÂåñ„ÄÇ * * @param map * @param tab table * @param index Ë¢´ÂàÜÂâ≤Ê†ëÁöÑÁ¥¢Âºï‰ΩçÁΩÆ * @param bit Êâ©ÂÆπÂâçÁöÑÂéüÊï∞ÁªÑÂÆπÈáè */final void split(HashMap&lt;K,V&gt; map, Node&lt;K,V&gt;[] tab, int index, int bit) &#123; TreeNode&lt;K,V&gt; b = this; // ÂΩìÂâçÊ†ëËäÇÁÇπ // Relink into lo and hi lists, preserving order TreeNode&lt;K,V&gt; loHead = null, loTail = null; TreeNode&lt;K,V&gt; hiHead = null, hiTail = null; int lc = 0, hc = 0; // ÈÅçÂéÜÊó∂ËÆ°ÁÆóÈìæË°®ÁöÑÈïøÂ∫¶ // üî¥ ‰∏Ä„ÄÅÈáçÊñ∞ËÆ°ÁÆóÁ¥¢Âºï‰ΩçÁΩÆÔºàÈÅçÂéÜÂèåÂêëÈìæË°®ÁªìÊûÑÔºâ for (TreeNode&lt;K,V&gt; e = b, next; e != null; e = next) &#123; // üîª ÊãÜÂàÜÔºöÂâ≤Êñ≠ÂΩìÂâçËäÇÁÇπÁöÑnextÂºïÁî®„ÄÇ next = (TreeNode&lt;K,V&gt;)e.next; e.next = null; // üîπ Âéü‰ΩçÁΩÆÔºö if ((e.hash &amp; bit) == 0) &#123; // Êó†ÈúÄÁßªÂä®ÂÖÉÁ¥†Âç≥ÂèØÁªÑÊàêÊñ∞ÈìæË°®Ôºö if ((e.prev = loTail) == null) loHead = e; else loTail.next = e; loTail = e; ++lc; // ËÆ∞ÂΩïÈìæË°®ÈïøÂ∫¶ &#125; // üîπ Êñ∞‰ΩçÁΩÆÔºö else &#123; if ((e.prev = hiTail) == null) hiHead = e; else hiTail.next = e; hiTail = e; ++hc; // ËÆ∞ÂΩïÈïøÂ∫¶ &#125; &#125; // üî¥ ‰∫å„ÄÅÁßªÂä®ÂÖÉÁ¥†ÔºàÂ∞Ü‰∏§‰∏™Êñ∞ÈìæË°®Ê†ëÂåñÊàñÂèñÊ∂àÊ†ëÂåñÔºâ // üîπ 0ÔºöÂéü‰ΩçÁΩÆ if (loHead != null) &#123; // üî∏ Ëã•ËäÇÁÇπ‚â§Ê†ëÂåñÈòàÂÄºÔºöÂèñÊ∂àÊ†ëÂåñÔºåËΩ¨‰∏∫ÈìæË°® if (lc &lt;= UNTREEIFY_THRESHOLD) tab[index] = loHead.untreeify(map); // üî∏ Ëã•ËäÇÁÇπ‚â•Ê†ëÂåñÈòàÂÄºÔºöÊ†ëÂåñ else &#123; // Â∞ÜÈìæË°®Â≠òÂÖ•tableÁ¥¢Âºï‰ΩçÁΩÆ tab[index] = loHead; // Á°ÆËÆ§ÈìæË°®Â≠òÂú®ÂÖÉÁ¥†ÂêéÊ†ëÂåñ if (hiHead != null) // (else is already treeified) loHead.treeify(tab); &#125; &#125; // üîπ 1ÔºöÊñ∞‰ΩçÁΩÆÔºàÂéü‰ΩçÁΩÆ + ÂéüÂÆπÈáèÔºâÔºöÂêå‰∏ä if (hiHead != null) &#123; if (hc &lt;= UNTREEIFY_THRESHOLD) tab[index + bit] = hiHead.untreeify(map); else &#123; tab[index + bit] = hiHead; if (loHead != null) hiHead.treeify(tab); &#125; &#125;&#125; ü¶ã Á∫¢ÈªëÊ†ë‰∏≠ÈöêÂê´ÁöÑÂèåÂêëÈìæË°®ÁªìÊûÑÔºö ‚ë† Âú®Â∞ÜÁ∫¢ÈªëÊ†ëÁªìÊûÑËΩ¨Êç¢‰∏∫ÈìæË°®ÁªìÊûÑÁöÑËøáÁ®ã‰∏≠ÔºåÈúÄË¶Å‰ΩøÁî®Ëøô‰∏™ÈöêÂê´ÁöÑÂèåÂêëÈìæË°®ËøõË°åÈÅçÂéÜÔºõ ‚ë° Âú®Á∫¢ÈªëÊ†ëÁªìÊûÑÁöÑÊãÜÂàÜËøáÁ®ã‰∏≠Ôºå‰πüÈúÄË¶Å‰ΩøÁî®Ëøô‰∏™ÈöêÂê´ÁöÑÂèåÂêëÈìæË°®ËøõË°åÈÅçÂéÜ„ÄÇ Ôºà3ÔºâIterators- nextNode() HashMapÂÆûÁé∞‰∫ÜIterator(Ëø≠‰ª£Âô®)Êé•Âè£„ÄÇ abstract class HashIterator &#123; Node&lt;K,V&gt; next; // Â∞ÜËøîÂõûÁöÑ‰∏ã‰∏™entry Node&lt;K,V&gt; current; // ÂΩìÂâç entry int expectedModCount; // Áî®‰∫éÂø´ÈÄüÂ§±Ë¥•ÁöÑÂ±ûÊÄß int index; // ÂΩìÂâçÁ¥¢Âºï HashIterator() &#123; expectedModCount = modCount; Node&lt;K,V&gt;[] t = table; current = next = null; index = 0; if (t != null &amp;&amp; size &gt; 0) &#123; // advance to first entry do &#123;&#125; while (index &lt; t.length &amp;&amp; (next = t[index++]) == null); &#125; &#125; final Node&lt;K,V&gt; nextNode() &#123; Node&lt;K,V&gt;[] t; Node&lt;K,V&gt; e = next; // Ëã•modCount‰∏çÁ≠â‰∫éexpectedModCountÔºöÊäõÂá∫ÂºÇÂ∏∏ if (modCount != expectedModCount) throw new ConcurrentModificationException(); // Ëã•ÊåáÂÆöNode‰∏∫Á©∫ÔºöÊäõÂá∫ÂºÇÂ∏∏ if (e == null) throw new NoSuchElementException(); // Ëã•nextÊåáÂêëÁöÑNodeÔºàÂç≥ÂΩìÂâçNodeÁöÑnextÁöÑÂÄºÔºâ‰∏ç‰∏∫Á©∫Ôºå‰∏îÊï∞ÁªÑ‰∏ç‰∏∫Á©∫Ôºö if ((next = (current = e).next) == null &amp;&amp; (t = table) != null) &#123; // ÈôêÂÆöÁ¥¢Âºï‰∏çË∂ÖÂá∫ÈïøÂ∫¶„ÄÅ‰∏î‰∏ã‰∏™‰ΩçÁΩÆ‰ªçÊúâÂÖÉÁ¥†„ÄÇ do &#123;&#125; while (index &lt; t.length &amp;&amp; (next = t[index++]) == null); &#125; return e; &#125; // ... // EntryIteratorÔºåÁªßÊâøËá™HashIterator final class EntryIterator extends HashIterator implements Iterator&lt;Map.Entry&lt;K,V&gt;&gt; &#123; public final Map.Entry&lt;K,V&gt; next() &#123; return nextNode(); &#125; &#125;&#125; ÈÅçÂéÜÂÖÉÁ¥†Êó∂‰ΩøÁî®modCountÂ±ûÊÄßÂà§Êñ≠HashMapÊòØÂê¶ÂèëÁîüÁªìÊûÑÊÄßÂèòÂåñ üîπ Â±ûÊÄßÔºö- modCountÔºöHashMapÁ±ª‰∏≠ÁöÑ‰∏Ä‰∏™ÊàêÂëòÂèòÈáèÔºåË°®Á§∫ÂØπHashMapÁöÑ‰øÆÊîπÊ¨°Êï∞„ÄÇÔºà‰∏éArrayListÂíåLinkedListÁõ∏ÂêåÔºâ- expectedModCountÔºöË°®Á§∫ÂØπhashMap‰øÆÊîπÊ¨°Êï∞ÁöÑÊúüÊúõÂÄºÔºåÂÆÉÁöÑÂàùÂßãÂÄº‰∏∫modCount„ÄÇ- ConcurrentModificationException()ÂºÇÂ∏∏ÔºöÊ≠§ÂºÇÂ∏∏‰∏∫‰∫ÜÈò≤Ê≠¢Âú®‰ΩøÁî®IteratorÈÅçÂéÜÂÆπÂô®ÁöÑÂêåÊó∂ÂèàÂØπÂÆπÂô®‰ΩúÂ¢ûÂä†ÊàñÂà†Èô§Êìç‰ΩúÔºåÊàñËÄÖ‰ΩøÁî®Â§öÁ∫øÁ®ãÊìç‰Ωú„ÄÇ üîπ ËØ¥ÊòéÔºöHashMapÁöÑIteratorÊòØfail-fastËø≠‰ª£Âô®„ÄÇÊØèÊ¨°ÂèëÁîüÁªìÊûÑÊÄßÂèòÂåñÊó∂modCountÈÉΩ‰ºöÂ¢ûÂä†ÔºåËÄåÊØèÊ¨°Ëø≠‰ª£Âô®Êìç‰ΩúÊó∂ÈÉΩ‰ºöÊ£ÄÊü•expectedModCountÊòØÂê¶‰∏émodCountÁõ∏ÂêåÔºåËøôÊ†∑Â∞±ËÉΩÊ£ÄÊµãÂá∫ÁªìÊûÑÊÄßÂèòÂåñ„ÄÇÂΩìÊúâÂÖ∂‰ªñÁ∫øÁ®ãÊîπÂèò‰∫ÜHashMapÁöÑÁªìÊûÑÔºàÂ¢ûÂä†„ÄÅÂà†Èô§„ÄÅ‰øÆÊîπÂÖÉÁ¥†ÔºâÔºåÂ∞Ü‰ºöÊäõÂá∫ConcurrentModificationExceptidon„ÄÇ üîπ Ëß£ÂÜ≥ÊñπÊ≥ïÔºöÂú®ÈÅçÂéÜÁöÑËøáÁ®ã‰∏≠ÊääÈúÄË¶ÅÂà†Èô§ÁöÑÂØπË±°‰øùÂ≠òÂà∞‰∏Ä‰∏™ÈõÜÂêà‰∏≠ÔºåÁ≠âÈÅçÂéÜÁªìÊùüÂêéÂÜçË∞ÉÁî®removeAllÊñπÊ≥ïÊù•Âà†Èô§ÔºåÊàñËÄÖÈÄöËøáIteratorÁöÑremove()ÊñπÊ≥ïÁßªÈô§ÂÖÉÁ¥†„ÄÇ - end - ÂèÇËÄÉÔºö HashMapÊâ©ÂÆπÈÉ®ÂàÜÔºö„ÄäJavaÈ´òÂπ∂Âèë‰∏éÈõÜÂêàÊ°ÜÊû∂ÔºöJCFÂíåJUCÊ∫êÁ†ÅÂàÜÊûê‰∏éÂÆûÁé∞„Äã ÂÜÖÂ≠òÁªìÊûÑÁ§∫ÊÑèÂõæÈÉ®ÂàÜÔºö„ÄäJavaÁºñÁ®ãÁöÑÈÄªËæë„Äã","categories":[{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"https://equnee.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"HashMap","slug":"HashMap","permalink":"https://equnee.github.io/tags/HashMap/"}]},{"title":"ü¶ã HashMap - ÂéüÁêÜ","slug":"note/Data-Structure/HashMap_1","date":"2023-03-09T15:11:32.969Z","updated":"2023-05-19T17:26:11.929Z","comments":true,"path":"note/Data-Structure/HashMap_1/","link":"","permalink":"https://equnee.github.io/note/Data-Structure/HashMap_1/","excerpt":"","text":"- ÁõÆÂΩï HashMap HashMap ÂéüÁêÜ HashMap Ê∫êÁ†Å Ê≥®ÔºöÊú¨ÊñáÊ∫êÁ†ÅÁâàÊú¨Âùá‰∏∫ÔºöJDK 8 ‰∏Ä. ÂéüÁêÜÔºà1ÔºâHashMapÊÄé‰πàÂ≠òÂèñ%%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph TD T((\"HashMapÊÄé‰πàÂ≠òÂèñÂÄº\")):::p T --> |\"Êï∞ÊçÆ‰ª•ÈîÆÂÄºÂØπÂΩ¢ÂºèÂ≠òÂÇ®\"| A[\"key ‚Äî value\"] A --> |\"ÂåÖË£Ö‰∏∫NodeÊï∞ÁªÑÂØπË±°\"| B[\"Node { key, value }\"] B --> |\"ÈÄöËøánodeÊï∞ÁªÑ‰∏ãÊ†á‰øùÂ≠òÂØπÂ∫îÊï∞ÊçÆ\"| C[\"node[0] = new Node { key, value }node[1] = new Node { key, value }node[2] = new Node { key, value } ...\"] C -.-> |\"[ ‰øùÂ≠ò ] ÈÅçÂéÜÊï∞ÁªÑÔºåÂØπÂ∫îkeyÂíåvalue\"| D[\"for (Node node : nodes)\"] C --> |\"[ Ëé∑Âèñ ] ÈÄöËøá Êï∞ÁªÑÁ¥¢Âºï Ëé∑ÂèñÔºàkeyÁöÑhashÂÄºÔºâ\"|E[\"node[ hash(key) ] = value\"]:::lb classDef p fill:#ddaebd style E fill:#d9dfeb, stroke:#657eae,stroke-width:2px,stroke-dasharray: 3 3 ‰ΩøÁî®NodeÊï∞ÁªÑ‰øùÂ≠ò„ÄÅÈÄöËøáNodeÊï∞ÁªÑÁ¥¢ÂºïËé∑Âèñ„ÄÇ Ôºà2ÔºâHashÁÆóÊ≥ïÊÄé‰πàÂÜô%%{ init: { 'themeVariables': { 'fontSize': '13px', 'clusterBorder': 'none', 'clusterBkg': '#f0f2f7' } } }%% graph TD T((\"HashÁÆóÊ≥ïÊÄé‰πàÂÜôÔºü\")):::p T --> |\"Â¶Ç‰ΩïËÆ°ÁÆóÂá∫Êï∞ÁªÑÁ¥¢ÂºïÔºühash(key)\"| A[\"* Âõ†‰∏∫NodeÊï∞ÁªÑÊúâÂõ∫ÂÆöÁöÑÂàùÂßãÂåñÈªòËÆ§ÈïøÂ∫¶ÔºàlengthÔºâ* Á¥¢ÂºïÂÄºÈúÄÈôêÂÆöÂú®Êï∞ÁªÑÈïøÂ∫¶ËåÉÂõ¥ÂÜÖÔºà0ÔΩûlength-1Ôºâ* Á¥¢ÂºïÂÄºËøòË¶ÅÂ∞ΩÂèØËÉΩÂπ≥Ë°°„ÄÅÂàÜÂ∏ÉÂùáÂåÄ\"] A --> B([\"ÂèñÊ®°ËøêÁÆóÔºöhash % length\"]) B ==> |\"ÔºàÊõ¥Â•ΩÁöÑÊñπÊ°àÔºö‰ΩøÁî®‰ΩçËøêÁÆóÊïàÁéáÊõ¥È´òÔºâ\"| C([\"‰ΩçËøêÁÆóÔºöhash & (length - 1)\"]) C -.- c(\"lengthÂøÖÈ°ªÊòØ2ÁöÑnÊ¨°ÂπÇ\"):::b subgraph \"ÂâçÁΩÆÊù°‰ª∂\" c -.- c2[\"ÂÅáÂ¶Ç key = 20, length = 16, hash & (length-1):0001 0100 // 20 0000 1111 // 150000 0100 // =4\"]:::c2 end classDef p fill:#ddaebd classDef b fill:#d2d9e7, stroke-width: 0px style c2 color: #86868b, fill:#ebedf3, stroke-dasharray: 3 3 %% ÂèñÊ®°ËøêÁÆó style B fill: #f4e4e9 %% \"‰ΩçËøêÁÆó\" style C fill:#b8c3d9, stroke:#657eae,stroke-width:2px ‰∏∫‰∫ÜËß£ÂÜ≥ÂèñÊ®°ÁöÑÊïàÁéáÈóÆÈ¢òÔºåÈááÁî®‰∫Ü‰ΩçËøêÁÆóÁöÑÊñπÊ≥ïÔºöindex = hashÂÄº &amp; (length -1)Ê≠§Êó∂ÈúÄË¶Å‰∏Ä‰∏™ÂâçÁΩÆÊù°‰ª∂ÔºölengthÁöÑÈïøÂ∫¶ÂøÖÈ°ªÊòØ2ÁöÑnÊ¨°ÂπÇ„ÄÇÂΩìlengthÁöÑÈïøÂ∫¶ÊòØ2nÊó∂ÔºåÊúâ‰ª•‰∏ãÂÖ¨ÂºèÊàêÁ´ãÔºö num%2n = num&amp;(2n-1) „ÄÇ ü¶ã Âõ†‰∏∫Â∞±ÂÉèÂçÅËøõÂà∂Âèñ‰ΩôÊï∞‰∏ÄÊ†∑ÔºåËã•Èô§‰ª•10Êàñ10ÁöÑÊï¥Ê¨°ÂπÇÊï∞Ôºå‰ΩôÊï∞ÂàöÂ•ΩÊòØÂèñ‰Ωé‰Ωç‰∏äÁöÑÊï∞Â≠ó„ÄÇÂêåÁêÜÔºå‰∫åËøõÂà∂Âèñ‰ΩôÊï∞Âè™Ë¶ÅÈô§‰ª•2ÁöÑnÊ¨°ÂπÇÊï∞Ôºå‰Ωé‰Ωç‰∏äÁöÑÊï∞Â≠óÂ∞±ÊòØÊàë‰ª¨ÈúÄË¶ÅÁöÑ‰ΩôÊï∞„ÄÇËÄå(2n - 1)ÁöÑ‰∫åËøõÂà∂ÊúâÊïà‰ΩçÈÉΩÊòØ1ÔºåÂíån‰ΩçÁöÑ1‰Ωú‰∏éËøêÁÆóÁõ∏ÂΩì‰∫éÂèñ‰Ωén‰ΩçÁöÑÂÄº„ÄÇ lengthÁöÑÈïøÂ∫¶ÂàöÂ•ΩÊòØ2ÁöÑnÊ¨°ÂπÇÔºåÊâ©ÂÆπ‰πüÊòØÊåâÂéüÊù•ÁöÑ2ÂÄçÂÆπÈáèËøõË°åÊâ©ÂÆπÔºåÂèØ‰ª•Âä†Âø´hashËÆ°ÁÆó„ÄÅÂáèÂ∞ëhashÂÜ≤Á™Å„ÄÇ ü¶ã Âä†Âø´hashËÆ°ÁÆóÔºö ‰∏§ÂÄçÊâ©ÂÆπÊú∫Âà∂‰ΩøÂÆπÈáè‰∏ÄÁõ¥‰øùÊåÅÂú®2ÁöÑnÊ¨°ÂπÇÊï∞ÔºåÂ∞±ÂèØ‰ª•‰ΩøÁî®‰ΩçËøêÁÆó‰ª£ÊõøÂèñÊ®°ËøêÁÆóÔºåÊèêÂçáhashËÆ°ÁÆóÊïàÁéá„ÄÇ ÂΩìÂÆπÈáè‰øùÊåÅ‰∏∫2ÁöÑnÊ¨°ÂπÇÊó∂ÔºåÊØèÊ¨°Êâ©ÂÆπÊó∂‰ΩçËøêÁÆóËÆ°ÁÆóÂæóÂá∫ÁöÑ‰ΩôÊï∞‰∏çÂèòÔºåÊï∞ÊçÆÂ≠òÊîæÁöÑÁ¥¢Âºï‰ΩçÁΩÆ‰πü‰øùÊåÅ‰∏çÂèò„ÄÇËÄå‰ΩøÁî®%ËÆ°ÁÆóÊó∂ÔºåÁªìÊûú‰ºöÂõ†‰∏∫ÂÆπÈáèÁöÑÂèòÂåñËÄåÊîπÂèòÔºàÊ®°ËøêÁÆó‰ºö‰∫ßÁîüÂ∞èÊï∞ÁÇπÔºâÔºåÊØèÊ¨°Êâ©ÂÆπÊó∂Êï∞ÊçÆÂú®Êï∞ÁªÑ‰∏≠Â≠òÊîæÁöÑ‰ΩçÁΩÆ‰ºöÂèëÁîüÊîπÂèòÔºàÊï∞ÊçÆÊºÇÁßªÔºâÔºåÂΩ±ÂìçÊÄßËÉΩ„ÄÇ ü¶ã ÂáèÂ∞ëhashÂÜ≤Á™ÅÔºö Â∞ÜÂÆπÈáè‰øùÊåÅ‰∏∫ÂÅ∂Êï∞ËøõË°åhashËÆ°ÁÆóÊó∂ÔºåÁªèËøá(length-1)ÂêéÔºåËÆ°ÁÆóÂá∫ÁöÑÁ¥¢ÂºïÂÄº‰∏∫Â•áÊï∞ÂíåÂÅ∂Êï∞ÁöÑÊ¶ÇÁéáÁõ∏ÂêåÔºàÂèñÂÜ≥‰∫éÈöèÊú∫ÁîüÊàêÁöÑhashÂÄºÔºâÔºõ ËÄå‰ΩøÁî®Â•áÊï∞ÂÆπÈáèËøõË°åhashËÆ°ÁÆóÊó∂ÔºåÁªèËøá(length-1)ÂêéÔºåÊúÄÁªàÁªìÊûúÂùá‰∏∫ÂÅ∂Êï∞ÔºåËøôÊ†∑‰ªª‰Ωï hash ÂÄºÈÉΩÂè™‰ºöË¢´Êï£ÂàóÂà∞Êï∞ÁªÑÁöÑÂÅ∂Êï∞‰∏ãÊ†á‰ΩçÁΩÆ‰∏äÔºåËøôÊµ™Ë¥π‰∫ÜËøë‰∏ÄÂçäÁöÑÁ©∫Èó¥„ÄÇ Âõ†Ê≠§2ÁöÑnÊ¨°ÂπÇÂÆπÈáè„ÄÅÂèåÂÄçÊâ©ÂÆπÊú∫Âà∂ÂèØ‰ª•‰ΩøÂÆπÈáè‰øùÊåÅÂú®ÂÅ∂Êï∞ÂÄºÔºåÂèØ‰ª•‰ΩøÊ∑ªÂä†ÁöÑÂÖÉÁ¥†Âú®HashMapÁöÑÊï∞ÁªÑ‰∏≠ÂùáÂåÄÂàÜÂ∏ÉÔºåÂáèÂ∞ëhashÁ¢∞Êíû„ÄÇ Ôºà3ÔºâHashÂÜ≤Á™ÅÊÄé‰πàÂäû%%{ init: { 'themeVariables': { 'fontSize': '13px' %%'edgeLabelBackground': '#ddebe6' } } }%% graph TD T((\"1. HashÂÜ≤Á™ÅÊÄé‰πà‰ºòÂåñ\")):::p --> T1(\"hashË°®ÈáåÂèØ‰ª•Â≠òÂÇ®ÂÖÉÁ¥†ÁöÑ‰ΩçÁΩÆË¢´Áß∞‰∏∫‚ÄúÊ°∂ÔºàbucketÔºâ‚Äù\") T1 --> |\"ÈÄöÂ∏∏ÊÉÖÂÜµ\"| A(\"Âçï‰∏™‚ÄúÊ°∂‚ÄùÈáåÂ≠òÂÇ®‰∏Ä‰∏™ÂÖÉÁ¥†ÔºåÊ≠§Êó∂ÊÄßËÉΩÊúÄ‰Ω≥\"):::g A -.-> |\"O(1)\"| a[\"hashÁÆóÊ≥ïÂèØ‰ª•Ê†πÊçÆhashCodeÂÄºËÆ°ÁÆóÂá∫‚ÄúÊ°∂‚ÄùÁöÑÂ≠òÂÇ®‰ΩçÁΩÆÔºåÊé•ÁùÄ‰ªé‚ÄúÊ°∂‚Äù‰∏≠ÂèñÂá∫ÂÖÉÁ¥†„ÄÇ\"] T1 --> |\"ÂìàÂ∏åÂÜ≤Á™ÅÁöÑÊÉÖÂÜµ\"| B(\"Âçï‰∏™Ê°∂‰ºöÂ≠òÂÇ®Â§ö‰∏™ÂÖÉÁ¥†ÔºàhashÂÄºÁõ∏ÂêåÔºâ\"):::g B -.-> |\"O(n)\"|b([\"Â§ö‰∏™ÂÖÉÁ¥†‰ª• ÈìæË°® ÂΩ¢ÂºèÂ≠òÂÇ®\"]):::B b --> 2T((\"2. HashÂÜ≤Á™ÅÂæàÂ§ßÊÄé‰πà‰ºòÂåñ\")):::p subgraph \"ÔºàÈìæË°®ÂøÖÈ°ªÊåâÈ°∫Â∫èÊêúÁ¥¢ÔºåÂ≠òÂèñÊÄßËÉΩÂ∑ÆÔºâ\" 2T --> C([\"Â∞ÜÈìæË°®ÁªìÊûÑËΩ¨‰∏∫Á∫¢ÈªëÊ†ë\"]):::B C -.- |\"O(logn)\"|c[\"‰ª•Ê†ëÁöÑÈ´òÂ∫¶‰∏∫ÊúÄÂ∑ÆÊü•ËØ¢ÊÄßËÉΩÔºåÊ∞∏Ëøú‰∏ç‰ºöÂá∫Áé∞O(n)ÁöÑÊÉÖÂÜµ„ÄÇ\"]:::info end classDef p fill:#ddaebd classDef g fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 HashÂÜ≤Á™ÅÁ§∫ÊÑèÂõæ %%{ init: { 'themeVariables': { 'clusterBorder': 'none', 'clusterBkg': '#ececee' } } }%% %% ÈìæË°®Ë∂ÖËøá8Êó∂Ê†ëÂåñÊàêÁ∫¢ÈªëÊ†ë graph TD subgraph \"Node[]\" Entry0[\"Node0NodeÔºúK,V>\"] -.- Node1 -.- Node2 -.- Node3 -.- Node4 -.- Node5 -.- Node6 end subgraph ÈìæË°® Node1 --> A[Node] --> B[Node] --> C[Node] --> D[Node] --> E[Node] --> F[Node] end subgraph Á∫¢ÈªëÊ†ë Node4 --> a[Node] a[Node] --> b[Node] b --> b1[Node] b --> b2[Node] a --> c[Node] c --> c1[Node] c --> c2[Node] b1 --> d[Node] b1 --> d2[Node] end style ÈìæË°® fill:#ddebe6 style Á∫¢ÈªëÊ†ë fill:#f4e4e9 Ôºà4ÔºâÂÜÖÂ≠òÁªìÊûÑÁ§∫ÊÑèÂõæ ÂàõÂª∫ÂØπË±°ÔºåÂÜÖÂ≠òÁªìÊûÑÁ§∫ÊÑèÂõæÔºö Map&lt;String, Integer&gt; countMap = new HashMap&lt;&gt;();countMap.put(&quot;hello&quot;, 1);countMap.put(&quot;world&quot;, 3);countMap.put(&quot;position&quot;, 4); ‰øùÂ≠òÈîÆÂÄºÂØπ ‚Äúhello‚ÄùÁöÑhashÂÄº‰∏∫96207088ÔºåÊ®°16ÁöÑÁªìÊûú‰∏∫0ÔºåÊâÄ‰ª•ÊèíÂÖ•table[0]ÊåáÂêëÁöÑÈìæË°®Â§¥ÈÉ®ÔºåÂÜÖÂ≠òÁªìÊûÑÂèò‰∏∫Ôºö ‚Äúworld‚ÄùÁöÑhashÂÄº‰∏∫111207038ÔºåÊ®°16ÁªìÊûú‰∏∫14ÔºåÊâÄ‰ª•‰øùÂ≠òÂÆå‚Äúworld‚ÄùÂêéÔºåÂÜÖÂ≠òÁªìÊûÑÔºö ‚Äúposition‚ÄùÁöÑhashÂÄº‰∏∫771782464ÔºåÊ®°16ÁªìÊûú‰πü‰∏∫0, table[0]Â∑≤ÁªèÊúâËäÇÁÇπ‰∫ÜÔºåÊñ∞ËäÇÁÇπ‰ºöÊèíÂà∞ÈìæË°®Â§¥ÈÉ®ÔºåÂÜÖÂ≠òÁªìÊûÑÂèò‰∏∫Â¶ÇÂõæÔºö ‰∫å. ‰ΩøÁî®Ôºà1ÔºâÂ∏∏Áî®ÊñπÊ≥ï// ËøîÂõûÂÄº ÊñπÊ≥ï ËØ¥Êòé// --------------------------------------------------------------------------------------------V put(K key, V value) // Â∞ÜÈîÆÔºàkeyÔºâ/ ÂÄºÔºàvalueÔºâÊò†Â∞ÑÂ≠òÊîæÂà∞ Map ÈõÜÂêà‰∏≠ÔºåÂêë HashMap ‰∏≠Ê∑ªÂä†ÂÖÉÁ¥†V get(Object key) // ËøîÂõûÊåáÂÆöÈîÆÊâÄÊò†Â∞ÑÁöÑÂÄºÔºåÊ≤°ÊúâËØ• key ÂØπÂ∫îÁöÑÂÄºÂàôËøîÂõû nullint size() // ËøîÂõû Map ÈõÜÂêà‰∏≠Êï∞ÊçÆÊï∞Èáèvoid clear() // Ê∏ÖÁ©∫ Map ÈõÜÂêàboolean isEmpty() // Âà§Êñ≠ Map ÈõÜÂêà‰∏≠ÊòØÂê¶ÊúâÊï∞ÊçÆÔºåÂ¶ÇÊûúÊ≤°ÊúâÂàôËøîÂõû trueÔºåÂê¶ÂàôËøîÂõû falseV remove(Object key) // Âà†Èô§ Map ÈõÜÂêà‰∏≠ÈîÆ‰∏∫ key ÁöÑÊï∞ÊçÆÂπ∂ËøîÂõûÂÖ∂ÊâÄÂØπÂ∫î value ÂÄº„ÄÇCollection&lt;V&gt; values() // ËøîÂõû Map ÈõÜÂêà‰∏≠ÊâÄÊúâ value ÁªÑÊàêÁöÑ‰ª• Collection Êï∞ÊçÆÁ±ªÂûãÊ†ºÂºèÊï∞ÊçÆ„ÄÇboolean containsKey(Object key) // Âà§Êñ≠ÈõÜÂêà‰∏≠ÊòØÂê¶ÂåÖÂê´ÊåáÂÆöÈîÆÔºåÂåÖÂê´ËøîÂõû trueÔºåÂê¶ÂàôËøîÂõû falseboolean containsValue(Object value) // Âà§Êñ≠ÈõÜÂêà‰∏≠ÊòØÂê¶ÂåÖÂê´ÊåáÂÆöÂÄºÔºåÂåÖÂê´ËøîÂõû trueÔºåÂê¶ÂàôËøîÂõû falseSet&lt;K&gt; keySet() // ËøîÂõû Map ÈõÜÂêà‰∏≠ÊâÄÊúâ key ÁªÑÊàêÁöÑ Set ÈõÜÂêàSet&lt;Map.Entry&lt;K,V&gt;&gt; entrySet() /* Â∞Ü Map ÈõÜÂêàÊØè‰∏™ key-value ËΩ¨Êç¢‰∏∫‰∏Ä‰∏™ Entry ÂØπË±° Âπ∂ËøîÂõûÁî±ÊâÄÊúâÁöÑ Entry ÂØπË±°ÁªÑÊàêÁöÑ Set ÈõÜÂêà */// ------------------------------------------------------------------------------------------Printer.printHashMapStructures(map); // ÊâìÂç∞Ê†ëÁªìÊûÑgetMapFromStringParam(); Ôºà2ÔºâÂ¶Ç‰ΩïÈÅçÂéÜgraph LR T((\"ÈÅçÂéÜHashMapÁöÑ5ÁßçÊñπÊ≥ï\")):::p T --> A([\"entrySet\"]):::lp T --> B([\"keySet\"]):::lp T --> C([\"forEach\"]):::lp T --> |\"ÊµÅÊìç‰Ωú\"|D([\"StreamApi.forEach\"]):::lp T -.-> E([\"values\"]) A -.-> a(\"Ôºà1ÔºâentrySet\") A -.-> a2(\"Ôºà2ÔºâentrySet + Ëø≠‰ª£Âô®\") B -.-> |\"ÔºàÊïàÁéá‰ΩéÔºâ\"| b(\"Ôºà3ÔºâkeySet + get()\") C -.-> c(\"Ôºà4ÔºâforEach + Lambda\") D -.-> d(\"Ôºà5ÔºâStream().forEachÔºàÂçïÁ∫øÁ®ãÔºâ\") D -.-> d2(\"Ôºà6ÔºâStream().forEachÔºàÂ§öÁ∫øÁ®ãÔºâ\") E -.-> e(\"Ôºà7Ôºâ‰ªÖÈÅçÂéÜvalue\") classDef p fill:#ddaebd classDef lp fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px ÈÅçÂéÜHashMap‰ª£Á†ÅÔºö package com.equne;import java.util.HashMap;import java.util.Iterator;import java.util.Map;public class Main &#123; /** Ôºà1ÔºâentrySet */ public static void traverse1(Map&lt;String, String&gt; map) &#123; for (Map.Entry&lt;String, String&gt; entry : map.entrySet())&#123; System.out.println(entry.getKey() + &quot;, &quot; + entry.getValue()); &#125; &#125; /** Ôºà2ÔºâËø≠‰ª£Âô®ÔºàentrySetÔºâ */ public static void traverse2(Map&lt;String, String&gt; map) &#123; Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator(); while (iterator.hasNext())&#123; Map.Entry&lt;String, String&gt; entry = iterator.next(); System.out.println(entry.getKey() + &quot;, &quot; + entry.getValue()); &#125; &#125; /** Ôºà3ÔºâkeySet + get() */ public static void traverse3(Map&lt;String, String&gt; map) &#123; for (String key : map.keySet())&#123; System.out.println(key + &quot;, &quot; + map.get(key)); &#125; &#125; /** Ôºà4ÔºâforEach + Lambda */ public static void traverse4(Map&lt;String, String&gt; map) &#123; map.forEach((key, value) -&gt; &#123; System.out.println(key + &quot;, &quot; + value); &#125;); &#125; /** Ôºà5ÔºâStreamApiÔºàÂçïÁ∫øÁ®ãÔºâ */ public static void traverse5(Map&lt;String, String&gt; map) &#123; map.entrySet().stream().forEach((entry) -&gt; &#123; System.out.println(entry.getKey() + &quot;, &quot; +entry.getValue()); &#125;); &#125; /** Ôºà6ÔºâStreamApiÔºàÂ§öÁ∫øÁ®ãÔºâ */ public static void traverse6(Map&lt;String, String&gt; map) &#123; map.entrySet().stream().parallel().forEach((entry) -&gt; &#123; System.out.println(entry.getKey() + &quot;, &quot; +entry.getValue()); &#125;); &#125; /** Ôºà7Ôºâ‰ªÖÈÅçÂéÜvalue */ public static void traverse7(Map&lt;String, String&gt; map) &#123; for (String v : map.values())&#123; System.out.println(v); &#125; &#125; public static void main(String[] args) &#123; Map&lt;String, String&gt; map = new HashMap&lt;&gt;(); map.put(&quot;key1&quot;, &quot;value1&quot;); map.put(&quot;key2&quot;, &quot;value2&quot;); traverse1(map); traverse2(map); traverse3(map); traverse4(map); traverse5(map); traverse6(map); traverse7(map); &#125;&#125; entrySet Âíå keySet Map.entrySet Ëø≠‰ª£Âô®‰ºöÁîüÊàê EntryIteratorÔºåÂÖ∂ËøîÂõûÁöÑÂÆû‰æãÊòØ‰∏Ä‰∏™ÂåÖÂê´ key/value ÈîÆÂÄºÂØπÁöÑÂØπË±°„ÄÇ ËÄå keySet ‰∏≠Ëø≠‰ª£Âô®ËøîÂõûÁöÑÂè™ÊòØ key ÂØπË±°ÔºåËøòÈúÄË¶ÅÂà∞ map ‰∏≠‰∫åÊ¨°ÂèñÂÄºÔºàÂ§ö‰∏Ä‰∏™getÊñπÊ≥ïÁöÑË∞ÉÁî®Ôºâ„ÄÇÊïÖ entrySet Ë¶ÅÊØî keySet Âø´‰∏ÄÂÄçÂ∑¶Âè≥„ÄÇÔºàkeySetÈÄÇÂêà‰ªÖÈúÄË¶ÅÊìç‰ΩúkeyÊó∂‰ΩøÁî®Ôºâüîó ÊëòËá™Ôºö„ÄäJava‰øÆÁÇºÊåáÂçóÔºöÈ´òÈ¢ëÊ∫êÁ†ÅËß£Êûê„Äã foreach + Lambda Ë°®ËææÂºèÔºàJava8 ÁöÑÊñ∞ÁâπÊÄßÔºâ forEach()ÔºöÁî®‰∫éÈÅçÂéÜÂä®ÊÄÅÊï∞ÁªÑ‰∏≠ÊØè‰∏Ä‰∏™ÂÖÉÁ¥†Âπ∂ÊâßË°åÁâπÂÆöÊìç‰Ωú„ÄÇ Lambda Ë°®ËææÂºèÔºöÁÆ≠Â§¥Á¨¶Âè∑ -&gt;ÔºåÂÖ∂‰∏§ËæπËøûÊé•ÁùÄËæìÂÖ•ÂèÇÊï∞ÂíåÂáΩÊï∞‰Ωì„ÄÇ Stream() ÂÖ∂ÂÆûÁî®IterableÊú¨Ë∫´ÁöÑforEachÊñπÊ≥ïÂç≥ÂèØÔºåÊ≤°ÊúâÂøÖË¶ÅÁî®ÊµÅÂºèÊìç‰Ωú„ÄÇStreamApiÈÄÇÂêàÂú®ÂØπÈõÜÂêàËøõË°åÂÖ∂‰ªñÊµÅÂºèÊìç‰Ωú‰πãÂêé‰ΩøÁî®„ÄÇ Ë°•ÂÖÖÔºöÁî®ÊµÅËé∑ÂèñÊò†Â∞ÑÂÄºÁöÑÊûÅÁ´ØÊ°à‰æãÔºöOptional&lt;String&gt; value = map .entrySet() .stream() .filter(entry -&gt; entry.getKey().equals(key)) .map(Entry::getValue) // ÂèåÂÜíÂè∑ÔºöÂºïÁî®ÊñπÊ≥ï .findFirst(); üîó ÊëòËá™Ôºö„ÄäÂ•Ω‰ª£Á†ÅÔºåÂùè‰ª£Á†Å„Äã - end - ÂèÇËÄÉÔºö HashMapÊâ©ÂÆπÈÉ®ÂàÜÔºö„ÄäJavaÈ´òÂπ∂Âèë‰∏éÈõÜÂêàÊ°ÜÊû∂ÔºöJCFÂíåJUCÊ∫êÁ†ÅÂàÜÊûê‰∏éÂÆûÁé∞„Äã ÂÜÖÂ≠òÁªìÊûÑÁ§∫ÊÑèÂõæÈÉ®ÂàÜÔºö„ÄäJavaÁºñÁ®ãÁöÑÈÄªËæë„Äã","categories":[{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"https://equnee.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"HashMap","slug":"HashMap","permalink":"https://equnee.github.io/tags/HashMap/"}]},{"title":"üå∑„ÄäÁßíÊáÇËÆæËÆ°Ê®°Âºè„Äã‚Äî‚Äî Ë¥£‰ªªÈìæÊ®°Âºè","slug":"note/Design-pattern/design-pattern_Chain_of_Responsibility","date":"2023-03-08T15:14:10.467Z","updated":"2023-05-04T09:26:08.332Z","comments":true,"path":"note/Design-pattern/design-pattern_Chain_of_Responsibility/","link":"","permalink":"https://equnee.github.io/note/Design-pattern/design-pattern_Chain_of_Responsibility/","excerpt":"","text":"Á¨îËÆ∞Êù•Ëá™„ÄäÁßíÊáÇËÆæËÆ°Ê®°Âºè„Äã %%{ init: { 'themeVariables': { 'fontSize': '13px' } } }%% graph LR T([\"Ë¥£‰ªªÈìæ‰ªãÁªç\"]):::p T --> A([\"Ë¥£‰ªªÈìæ\"]):::g T --> B([\"Ë¥£‰ªªÈìæÊ®°Âºè\"]):::p T --> C([\"‰∏öÂä°Ë¥£‰ªªÈìæ\"]):::b A -.-> a(\"Ë¥£‰ªªÈìæÊòØÁî±ÂæàÂ§öË¥£‰ªªËäÇÁÇπ‰∏≤ËÅîËµ∑Êù•ÁöÑ‰∏ÄÊù°‰ªªÂä°ÈìæÊù°ÔºåÂÖ∂‰∏≠ÊØè‰∏Ä‰∏™Ë¥£‰ªªËäÇÁÇπÈÉΩÊòØ‰∏Ä‰∏™‰∏öÂä°Â§ÑÁêÜÁéØËäÇ„ÄÇ\"):::lg B -.-> b(\"Ë¥£‰ªªÈìæÊ®°Âºè(Chain of Responsibility) ÂÖÅËÆ∏‰∏öÂä°ËØ∑Ê±ÇËÄÖÂ∞ÜË¥£‰ªªÈìæËßÜ‰∏∫‰∏Ä‰∏™Êï¥‰ΩìÂπ∂ÂØπÂÖ∂ÂèëËµ∑ËØ∑Ê±ÇÔºåËÄå‰∏çÂøÖÂÖ≥ÂøÉÈìæÊù°ÂÜÖÈÉ®ÂÖ∑‰ΩìÁöÑ‰∏öÂä°ÈÄªËæë‰∏éÊµÅÁ®ãËµ∞Âêë„ÄÇ\"):::lp B -.-> b2(\"ËØ∑Ê±ÇËÄÖ‰∏çÂøÖÂÖ≥ÂøÉÂÖ∑‰ΩìÊòØÂì™‰∏™ËäÇÁÇπËµ∑‰∫Ü‰ΩúÁî®ÔºåÊÄª‰πã‰∏öÂä°ÊúÄÁªàËÉΩÂæóÂà∞Áõ∏Â∫îÁöÑÂ§ÑÁêÜ„ÄÇ\"):::info C -.->c(\"Âú®ËΩØ‰ª∂Á≥ªÁªü‰∏≠ÔºåÂΩì‰∏Ä‰∏™‰∏öÂä°ÈúÄË¶ÅÁªèÂéÜ‰∏ÄÁ≥ªÂàó‰∏öÂä°ÂØπË±°ÂéªÂ§ÑÁêÜÊó∂ÔºåÊàë‰ª¨ÂèØ‰ª•ÊääËøô‰∫õ‰∏öÂä°ÂØπË±°‰∏≤ËÅîËµ∑Êù•Êàê‰∏∫‰∏ÄÊù°‰∏öÂä°Ë¥£‰ªªÈìæÔºåËØ∑Ê±ÇËÄÖÂèØ‰ª•Áõ¥Êé•ÈÄöËøáËÆøÈóÆ‰∏öÂä°Ë¥£‰ªªÈìæÊù•ÂÆåÊàê‰∏öÂä°ÁöÑÂ§ÑÁêÜÔºåÊúÄÁªàÂÆûÁé∞ËØ∑Ê±ÇËÄÖ‰∏éÂìçÂ∫îËÄÖÁöÑËß£ËÄ¶„ÄÇ\"):::lb classDef p fill:#ddaebd classDef g fill:#9ac5bb classDef b fill:#aab7d2 classDef lp fill:#f4e4e9 classDef lg fill:#ddebe6 classDef lb fill:#d9dfeb classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ‰∏Ä„ÄÅÁÆÄÂçïÁöÑÁîü‰∫ßÁ∫ø ÊúÄÁÆÄÂçïÁöÑË¥£‰ªªÈìæÊ®°Âºè‰æãÂ≠êÔºöÊ±ΩËΩ¶Áîü‰∫ßÁ∫øÁöÑÂà∂ÈÄ†ÊµÅÁ®ã„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph LR T([\"Ê±ΩËΩ¶Áîü‰∫ßÁ∫øÁöÑÂà∂ÈÄ†ÊµÅÁ®ã\"]):::p T --- A(\"Âä≥Âä®ÂàÜÂ∑•\"):::lp T --- B(\"Êû∂ÊûÑÁîü‰∫ßÁ∫ø\"):::lp a --> C(\"ÊúÄÁªà ÈÄöËøáÁîü‰∫ßÁ∫øÁöÑ‰º†ÈÄíÔºåÊ±ΩËΩ¶‰æø‰ªéÈõ∂‰ª∂Âà∞ÊàêÂìÅÂæó‰ª•Èáè‰∫ßÔºåÁîü‰∫ßÊïàÁéáÂ§ßÂ§ßÊèêÂçá\"):::B b --> C A -.- a(\"Â∞ÜÊ±ΩËΩ¶Èõ∂‰ª∂ÁöÑÂÆâË£ÖÂ∑•‰ΩúÊãÜÂàÜÂπ∂ÂàÜÈÖçÁªôÂêÑÂÆâË£ÖËäÇÁÇπ\") B -.-b(\"Â∞ÜÂÆâË£ÖËäÇÁÇπÁªÑÁªáËµ∑Êù•ÔºåÈ¶ñÂ∞æÁõ∏Êé•ÔºåËßÑÂàíÊìç‰ΩúÊµÅÁ®ã\") classDef p fill:#ddaebd classDef lp fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 Êàë‰ª¨Â∞ÜÊ±ΩËΩ¶Áîü‰∫ßÁ∫ø‰ªéÂ∑¶Ëá≥Âè≥ÂàÜ‰∏∫3‰∏™ÂäüËÉΩËäÇÁÇπÔºöËøôÊ†∑Â∞Ü‰∫ßÂìÅÈÄêÁ∫ß‰º†ÈÄíÔºåÊØèÁªèËøá‰∏Ä‰∏™ËäÇÁÇπÂ∞±ÂÆåÊàê‰∏ÄÈÉ®ÂàÜÂ∑•‰ΩúÔºåÊúÄÁªàÂÆåÊàê‰∫ßÂìÅ‰∫§‰ªò„ÄÇ %%{ init: { 'themeVariables': { 'fontSize': '12px' } } }%% graph LR T([\"Ê±ΩËΩ¶Áîü‰∫ßÁ∫øËäÇÁÇπ\"]):::p T --> A(\"AËäÇÁÇπ\"):::lp T --> B(\"BËäÇÁÇπ\"):::lp T --> C(\"CËäÇÁÇπ\"):::lp A -.- a[\"Ë¥üË¥£ÁªÑË£ÖËΩ¶Êû∂„ÄÅÂÆâË£ÖËΩ¶ËΩÆ\"] B -.- b[\"Ë¥üË¥£ÂÆâË£ÖÂèëÂä®Êú∫„ÄÅÊ≤πÁÆ±„ÄÅ‰º†Âä®ËΩ¥Á≠âÂÜÖÈÉ®Êú∫‰ª∂\"] C -.- c[\"Ë¥üË¥£ÁªÑË£ÖÂ§ñÂ£≥„ÄÅÂñ∑ÊºÜÁ≠âÊìç‰Ωú\"] classDef p fill:#ddaebd classDef lp fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 ‰∫å„ÄÅÂ∑•‰ΩúÊµÅÁ®ãÊãÜÂàÜ Â∏¶Êúâ‰∏Ä‰∫õÈÄªËæëÁöÑË¥£‰ªªÈìæÔºöÊä•ÈîÄÂÆ°ÊâπÊµÅÁ®ã„ÄÇ ÂÆ°ÊâπÊµÅÁ®ãÊåâË¥üË¥£‰∫∫ÊàñËÄÖÂ∑•‰ΩúËÅåË¥£ËøõË°åÊãÜÂàÜÔºöÈúÄË¶Å‰æùÊ¨°ÈÄöËøáË¥¢Âä°‰∏ìÂëò„ÄÅË¥¢Âä°ÁªèÁêÜ„ÄÅË¥¢Âä°ÊÄªÁõëÁöÑÂÆ°Êâπ„ÄÇÂ¶ÇÊûúÁî≥ËØ∑ÈáëÈ¢ùÂú®ÂÆ°Êâπ‰∫∫ÁöÑÂÆ°ÊâπËÅåÊùÉËåÉÂõ¥ÂÜÖÂàôÂÆ°ÊâπÈÄöËøáÂπ∂ÁªàÊ≠¢ÊµÅÁ®ãÔºåÂèç‰πãÂàô‰ºöÂçáÁ∫ßËá≥Êõ¥È´òÂ±ÇÁ∫ßÁöÑ‰∏äÁ∫ßÂéªÁªßÁª≠ÂÆ°ÊâπÔºåÁõ¥Ëá≥ÊúÄÁªàÁöÑË¥¢Âä°ÊÄªÁõëÔºåÂ¶ÇÊûú‰ªçÊóßË∂ÖÂá∫Ë¥¢Âä°ÊÄªÁõëÁöÑÂÆ°ÊâπÈáëÈ¢ùÂàôÈ©≥ÂõûÁî≥ËØ∑ÔºåÊµÅÁ®ãÁªàÊ≠¢„ÄÇ Â¶Ç‰ΩïËÆæËÆ°Ëøô‰∏™ÂÆ°ÊâπÊµÅÁ®ãÔºöÈ¶ñÂÖàÊåâËßíËâ≤ÂØπ‰∏öÂä°ËøõË°åÊãÜÂàÜÔºåÂ∞Ü‰∏çÂêåÁöÑ‰∏öÂä°‰ª£Á†ÅÊîæÂú®‰∏çÂêåÁöÑËßíËâ≤Á±ª‰∏≠ÔºåÂ¶ÇÊ≠§ËææÂà∞ËÅåÊùÉÂàÜÊãÜÁöÑÁõÆÁöÑÔºåÂèØÊâ©Â±ïÊÄß„ÄÅÂèØÁª¥Êä§ÊÄß‰πüËÉΩÂæóÂà∞ÊèêÈ´ò„ÄÇ . ‰∏â„ÄÅË∏¢ÁöÆÁêÉ1. ÂÆû‰æã Âü∫‰∫é‰∏äËø∞ÂÆ°ÊâπÊµÅÁ®ãÔºåÊù•ÂÅö‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂÆû‰æãÔºöÂÅáËÆæÊüêÂÖ¨Âè∏ÁöÑÊä•ÈîÄÂÆ°ÊâπÊµÅÁ®ãÊúâ3‰∏™ÂÆ°ÊâπËßíËâ≤%%{ init: { 'themeVariables': { 'fontSize': '12px' } } }%% %% ÂÅáËÆæÊüêÂÖ¨Âè∏ÁöÑÊä•ÈîÄÂÆ°ÊâπÊµÅÁ®ãÊúâ3‰∏™ÂÆ°ÊâπËßíËâ≤ graph LR T([\"Êä•ÈîÄÂÆ°ÊâπÊµÅÁ®ãÔºà3‰∏™ËßíËâ≤Ôºâ\"]):::p T --> A(\"Ë¥¢Âä°‰∏ìÂëò\"):::lp T --> B(\"Ë¥¢Âä°ÁªèÁêÜ\"):::lp T --> C(\"Ë¥¢Âä°ÊÄªÁõë\"):::lp A -.- a[\"1000ÂÖÉÂÆ°ÊâπÊùÉÈôê\"] B -.- b[\"5000ÂÖÉÂÆ°ÊâπÊùÉÈôê\"] C -.- c[\"10000ÂÖÉÂÆ°ÊâπÊùÉÈôê\"] classDef p fill:#ddaebd classDef lp fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 2. ‰ª£Á†Å Staff /** * Ë¥¢Âä°‰∏ìÂëòÁ±ª */public class Staff &#123; private String name; public Staff(String name)&#123; this.name = name; &#125; public boolean approve(int amount) &#123; if (amount &lt;= 1000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„Äê‰∏ìÂëòÔºö&quot; + name + &quot;„Äë&quot;); return true; &#125; else &#123; System.out.println(&quot;Êó†ÊùÉÂÆ°ÊâπÔºåËØ∑Êâæ‰∏äÁ∫ß„ÄÇ„Äê‰∏ìÂëòÔºö&quot; + name + &quot;„Äë&quot;); return false; &#125; &#125;&#125; Manager /** * Ë¥¢Âä°ÁªèÁêÜÁ±ª */public class Manager &#123; private String name; public Manager(String name)&#123; this.name = name; &#125; public boolean approve(int amount) &#123; if (amount &lt;= 5000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêÁªèÁêÜÔºö&quot; + name + &quot;„Äë&quot;); return true; &#125; else &#123; System.out.println(&quot;Êó†ÊùÉÂÆ°ÊâπÔºåËØ∑Êâæ‰∏äÁ∫ß„ÄÇ„ÄêÁªèÁêÜÔºö&quot; + name + &quot;„Äë&quot;); return false; &#125; &#125;&#125; CFO /** * Ë¥¢Âä°ÊÄªÁõëÁ±ª */public class CFO &#123; private String name; public Manager(String name)&#123; this.name = name; &#125; /* ÂÆö‰πâ‰∫ÜË¥¢Âä°ÊÄªÁõëÁ±ªCFOÁöÑÂÆ°ÊâπÊñπÊ≥ïapprove()Âπ∂Êé•ÂèóË¶ÅÂÆ°ÊâπÁöÑÈáëÈ¢ùÔºå Â¶ÇÊûúÈáëÈ¢ùÂú®10000ÂÖÉ‰ª•ÂÜÖÂàôÂÆ°ÊâπÈÄöËøáÔºåÂê¶ÂàôÈ©≥ÂõûÊ≠§Áî≥ËØ∑„ÄÇ */ public boolean approve(int amount) &#123; if (amount &lt;= 10000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); return true; &#125; else &#123; System.out.println(&quot;È©≥ÂõûÁî≥ËØ∑„ÄÇ„ÄêÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); return false; &#125; &#125;&#125; 3‰∏™ÂÆ°ÊâπËßíËâ≤ÁöÑ‰ª£Á†ÅÈÉΩÊØîËæÉÁ±ª‰ººÔºåÂè™Ë¶ÅË∂ÖËøáÂÖ∂ÂÆ°ÊâπÈáëÈ¢ùÁöÑÊùÉÈôêÂ∞±È©≥ÂõûÁî≥ËØ∑ÔºåÂèç‰πãÂàôÂÆ°ÊâπÈÄöËøá„ÄÇ Êé•‰∏ãÊù•ÔºåÂÆ¢Êà∑Á´ØÂºÄÂßãÊèê‰∫§Áî≥ËØ∑‰∫ÜÔºöClient /** * ÂÆ¢Êà∑Á´ØÁ±ª */public class Client &#123; public static void main(String[] args)&#123; int amount = 10000; // Âá∫Â∑ÆËä±Ë¥π10000ÂÖÉ // ÂÖàÊâæ‰∏ìÂëòÂº†È£ûÂÆ°Êâπ Staff staff = new Staff(&quot;Âº†È£û&quot;); if (!staff.approve(amount)) &#123; // Ë¢´È©≥ÂõûÔºåÊâæÂÖ≥‰∫åÁà∑ÈóÆÈóÆ Manager manager = new Manager(&quot;ÂÖ≥ÁæΩ&quot;); if (!manager.approve(amount))&#123; // ËøòÊòØË¢´È©≥ÂõûÔºåÂè™ËÉΩÊâæËÄÅÂ§ß‰∫Ü CFO cfo = new CFO(&quot;ÂàòÂ§á&quot;); cfo.approve(amount); &#125; &#125; &#125;&#125;/******************************* Êó†ÊùÉÂÆ°ÊâπÔºåËØ∑Êâæ‰∏äÁ∫ß„ÄÇ„Äê‰∏ìÂëòÔºöÂº†È£û„Äë Êó†ÊùÉÂÆ°ÊâπÔºåËØ∑Êâæ‰∏äÁ∫ß„ÄÇ„ÄêÁªèÁêÜÔºöÂÖ≥ÁæΩ„Äë ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêÊÄªÁõëÔºöÂàòÂ§á„Äë *******************************/ 3. ÈóÆÈ¢ògraph LR T([\"ÈóÆÈ¢òÂá∫Âú®Âì™ÈáåÔºü\"]):::p T --> A(\"ÊµÅÁ®ãÁπÅÁêê\"):::lp T --> B(\"Áª¥Êä§Âõ∞Èöæ\"):::lp T --> C(\"ËÅåÊùÉÈôêÂà∂\"):::lp A -.- a(\"Âäû‰∫ãÊïàÁéá‰ΩéÔºåÂÆ°ÊâπÊµÅÁ®ãÂ§™ËøáÁÉ¶ÁêêÔºåÊúâÁßçË¢´Ë∏¢ÁöÆÁêÉÁöÑÊÑüËßâ„ÄÇ\"):::info B -.- b(\"Ëã•ÂêéÊúü‰ºòÂåñ‰∏öÂä°ÊµÅÁ®ãËÄåÊ∑ªÂä†Êñ∞ÁöÑÂÆ°ÊâπËßíËâ≤ÔºåÊàñÂ¢ûÂä†Êõ¥Â§çÊùÇÁöÑÈÄªËæëÔºåÁî≥ËØ∑‰∫∫Â∞±‰∏çÂæó‰∏çÂ≠¶‰π†Êñ∞ÊµÅÁ®ãÔºå‰∏çÂÅú‰øÆÊîπËá™Â∑±ÁöÑÁî≥ËØ∑ÈÄªËæëÔºåÂ¢ûÂä†‰∫ÜÁª¥Êä§ÊàêÊú¨„ÄÇ\"):::info C -.- c(\"ÂÆ°Êâπ‰∫∫ÁöÑ‰∏öÂä°‰πãÈó¥ÊúâÁéØÁéØÁõ∏Êâ£ÁöÑÂÖ≥ËÅîÔºåÂØπ‰∫éË∂ÖÂá∫ÂÆ°Êâπ‰∫∫ËÅåÊùÉËåÉÂõ¥ÁöÑÁî≥ËØ∑‰ºö‰º†ÈÄíÁªô‰∏äÁ∫ßÔºåÁõ¥Âà∞Ëß£ÂÜ≥ÈóÆÈ¢ò‰∏∫Ê≠¢„ÄÇ\"):::info a --> D([\"Â∑•‰ΩúÊµÅÊû∂ÊûÑËÆæËÆ°‰∏çÂêàÁêÜÁî≥ËØ∑‰∫∫ÁªàÂ∞ÜË¢´Ê∑πÊ≤°Âú®‰∏ÄÂ†ÜÂ§çÊùÇÁöÑÂÆ°ÊâπÊµÅÁ®ã‰∏≠„ÄÇ\"]):::B b --> D c --> D classDef p fill:#ddaebd classDef lp fill:#f4e4e9 classDef B fill:#d9dfeb, stroke:#657eae,stroke-width:2px classDef lb fill: #d9dfeb classDef info fill:#f6f6f7,color:#737379, stroke-width: 2px, stroke-dasharray: 3 3 Á±ª‰ººÂ¶Ç‰∏äÁéØÁéØÁõ∏Êâ£ÁöÑ‰º†ÈÄíÊú∫Âà∂ÔºåÂ∞±ÈúÄË¶ÅÊàë‰ª¨Êê≠Âª∫‰∏Ä‰∏™ÈìæÂºèÁªìÊûÑÁöÑÂ∑•‰ΩúÊµÅÔºåËøô‰πüÊòØË¥£‰ªªÈìæÊ®°ÂºèÁöÑÁ≤æÈ´ì‰πãÊâÄÂú®„ÄÇ . Âõõ„ÄÅÊû∂ÊûÑÂ∑•‰ΩúÊµÅÊàë‰ª¨Áî®ÊäΩË±°Á±ªÊù•ÂÆö‰πâÂÆ°Êâπ‰∫∫Ôºö ÂÆ°Êâπ‰∫∫ Approverpublic abstract class Approver &#123; protected String name; // ÊäΩË±°Âá∫ÂÆ°Êâπ‰∫∫ÁöÑÂßìÂêç protected Approver nextApprover; // ‰∏ã‰∏Ä‰ΩçÂÆ°Êâπ‰∫∫ÔºåÊõ¥È´òÁ∫ßÂà´ÁöÑÈ¢ÜÂØº public Approver(String name)&#123; this.name = name; &#125; protected Approver setNextApprover(Approver nextApprover) &#123; this.nextApprover = nextApprover; return this.nextApprover; // ËøîÂõû‰∏ã‰∏Ä‰ΩçÂÆ°Êâπ‰∫∫Ôºå‰ΩøÂÖ∂ÊîØÊåÅÈìæÂºèÁºñÁ®ã &#125; public abstract void approve(int amount); // ÊäΩË±°ÂÆ°ÊâπÊñπÊ≥ïÁî±ÂÖ∑‰ΩìÂÆ°Êâπ‰∫∫Â≠êÁ±ªÂÆûÁé∞ /* * Áî±‰∫éÂÆ°Êâπ‰∫∫Âú®Êó†ÊùÉÂÆ°ÊâπÊó∂ÈúÄË¶Å‰º†ÈÄí‰∏öÂä°ÁªôÂÖ∂‰∏äÁ∫ßÈ¢ÜÂØºÔºåÂõ†Ê≠§Êàë‰ª¨Âú®Á¨¨4Ë°åÂÆö‰πâ‰∏äÁ∫ßÈ¢ÜÂØºÁöÑÂºïÁî®nextApproverÔºå‰∏é‰∏ã‰∏Ä‰ΩçÂÆ°Êâπ‰∫∫‰∏≤ËÅîËµ∑Êù•ÔºåÂêåÊó∂Â∞ÜÂÖ∂Ê≥®ÂÖ•Á¨¨10Ë°å„ÄÇ * ÂΩìÁÑ∂ÔºåÊØè‰ΩçÂÆ°Êâπ‰∫∫ÁöÑËßíËâ≤‰∏çÂêåÔºåÂÖ∂ÂÆ°ÊâπÈÄªËæë‰πüÊúâÊâÄÂå∫Âà´ÔºåÊâÄ‰ª•Êàë‰ª¨Âú®Á¨¨15Ë°åÂØπÂÆ°ÊâπÊñπÊ≥ïËøõË°åÊäΩË±°Ôºå‰∫§Áî±ÂÖ∑‰ΩìÁöÑÂ≠êÁ±ªÂÆ°ÊâπËßíËâ≤ÂéªÁªßÊâøÂíåÂÆûÁé∞„ÄÇ */&#125; Êé•ÁùÄÂØπ3‰∏™ÂÆ°ÊâπËßíËâ≤ÁöÑ‰ª£Á†ÅËøõË°åÈáçÊûÑÔºö Staff /** * Ë¥¢Âä°‰∏ìÂëòÁ±ª */ public class Staff extends Approver &#123; public Staff(String name) &#123; super(name); &#125; @Override public void approve(int amount) &#123; if(amount &lt;= 1000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„Äê‰∏ìÂëòÔºö&quot; + name + &quot;„Äë&quot;); &#125; else &#123; System.out.println(&quot;Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºö&quot; + name + &quot;„Äë&quot;); this.nextApprover.approve(amount); &#125; &#125;&#125;/* Ë¥¢Âä°‰∏ìÂëòÁ±ªÁªßÊâø‰∫ÜÂÆ°Êâπ‰∫∫ÊäΩË±°Á±ªÂπ∂ÂÆûÁé∞‰∫ÜÂÆ°ÊâπÊñπÊ≥ïapprove()Ôºå Êé•Êî∂Âà∞Êä•ÈîÄÁî≥ËØ∑ÈáëÈ¢ùÂêéËá™Á¨¨9Ë°åÂºÄÂßãÁî≥ÊòéËá™Â∑±ÁöÑÂÆ°ÊâπÊùÉÈôê‰∏∫1000ÂÖÉÔºå Ëã•Ë∂ÖÂá∫ÂàôË∞ÉÁî®Ëá™Â∑±‰∏äÁ∫ßÈ¢ÜÂØºÁöÑÂÆ°ÊâπÊñπÊ≥ïnextApprover() ÔºåÂ∞ÜÂÆ°Êâπ‰∏öÂä°‰º†ÈÄí‰∏ãÂéª„ÄÇ*/ Manager /** * Ë¥¢Âä°ÁªèÁêÜÁ±ª */ public class Manager extends Approver &#123; public Manager(String name) &#123; super(name); &#125; @Override public void approve(int amount) &#123; if(amount &lt;= 5000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêÁªèÁêÜÔºö&quot; + name + &quot;„Äë&quot;); &#125; else &#123; System.out.println(&quot;Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„ÄêÁªèÁêÜ&quot; + name + &quot;„Äë&quot;); this.nextApprover.approve(amount); &#125; &#125;&#125; CFO /** * Ë¥¢Âä°‰∏ìÂëòÁ±ª */ public class CFO extends Approver &#123; public CFO(String name) &#123; super(name); &#125; @Override public void approve(int amount) &#123; if(amount &lt;= 1000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêË¥¢Âä°ÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); &#125; else &#123; System.out.println(&quot;È©≥ÂõûÁî≥ËØ∑„ÄÇ„ÄêË¥¢Âä°ÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); &#125; &#125;&#125;/* ÊØîËæÉÁâπÊÆäÁöÑÂÆ°Êâπ‰∫∫ÊòØË¥£‰ªªÈìæÊú´ËäÇÁÇπÁöÑË¥¢Âä°ÊÄªÁõëÁ±ªÔºåÊúÄÈ´òËÅåÁ∫ßÁöÑË¥¢Âä°ÊÄªÁõëCFOÁöÑÂÆ°ÊâπÈÄªËæëÁï•Êúâ‰∏çÂêåÔºå ÂΩìÁî≥ËØ∑ÈáëÈ¢ùË∂ÖÂá∫10000ÂÖÉÂêéÂ∞±ÂÜçÊúâ‰∏ã‰∏Ä‰∏™ÂÆ°Êâπ‰∫∫‰∫ÜÔºåÊâÄ‰ª•Ê≠§Êó∂Â∞±‰ºöÈ©≥ÂõûÊä•ÈîÄÁî≥ËØ∑„ÄÇ*//** * Ë¥¢Âä°‰∏ìÂëòÁ±ª */ public class CFO extends Approver &#123; public CFO(String name) &#123; super(name); &#125; @Override public void approve(int amount) &#123; if(amount &lt;= 1000) &#123; System.out.println(&quot;ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêË¥¢Âä°ÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); &#125; else &#123; System.out.println(&quot;È©≥ÂõûÁî≥ËØ∑„ÄÇ„ÄêË¥¢Âä°ÊÄªÁõëÔºö&quot; + name + &quot;„Äë&quot;); &#125; &#125;&#125;/* ÊØîËæÉÁâπÊÆäÁöÑÂÆ°Êâπ‰∫∫ÊòØË¥£‰ªªÈìæÊú´ËäÇÁÇπÁöÑË¥¢Âä°ÊÄªÁõëÁ±ªÔºåÊúÄÈ´òËÅåÁ∫ßÁöÑË¥¢Âä°ÊÄªÁõëCFOÁöÑÂÆ°ÊâπÈÄªËæëÁï•Êúâ‰∏çÂêåÔºå ÂΩìÁî≥ËØ∑ÈáëÈ¢ùË∂ÖÂá∫10000ÂÖÉÂêéÂ∞±ÂÜçÊúâ‰∏ã‰∏Ä‰∏™ÂÆ°Êâπ‰∫∫‰∫ÜÔºåÊâÄ‰ª•Ê≠§Êó∂Â∞±‰ºöÈ©≥ÂõûÊä•ÈîÄÁî≥ËØ∑„ÄÇ*/ Client /** * ÂÆ¢Êà∑Á´ØÁ±ª */ public class Client &#123; public static void main(String[] args)&#123; Aprrovrt flightJohn = new Staff(&quot;Âº†È£û&quot;); // Ê≠§Â§Ñ‰ΩøÁî®ÈìæÂºèÁºñÁ®ãÈÖçÁΩÆË¥£‰ªªÈìæ flightJogn.setNextApprover(new Manager(&quot;ÂÖ≥ÁæΩ&quot;)).setNextApprover(new CFO(&quot;ÂàòÂ§á&quot;)); // Áõ¥Êé•Êâæ‰∏ìÂëòÂº†È£ûÂÆ°Êâπ flightJohn.approve(1000); /************************ ÂÆ°ÊâπÈÄöËøá„ÄÇ„Äê‰∏ìÂëòÔºöÂº†È£û„Äë ************************/ flightJohn.approve(4000); /************************ Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºöÂº†È£û„Äë ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêÁªèÁêÜÔºöÂÖ≥ÁæΩ„Äë ************************/ flightJohn.approve(9000); /************************ Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºöÂº†È£û„Äë Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºöÂÖ≥ÁæΩ„Äë ÂÆ°ÊâπÈÄöËøá„ÄÇ„ÄêCEOÔºöÂàòÂ§á„Äë ************************/ flightJohn.approve(9000); /************************ Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºöÂº†È£û„Äë Êó†ÊùÉÂÆ°ÊâπÔºåÂçáÁ∫ßÂ§ÑÁêÜ„ÄÇ„Äê‰∏ìÂëòÔºöÂÖ≥ÁæΩ„Äë È©≥ÂõûÁî≥ËØ∑„ÄÇ„ÄêCEOÔºöÂàòÂ§á„Äë ************************/ &#125; &#125; Ëá≥Ê≠§Ôºå‰ª•Ë¥£‰ªªÈìæÊ®°Âºè‰∏∫Âü∫Á°ÄÊû∂ÊûÑÁöÑÂ∑•‰ΩúÊµÅÊê≠Âª∫ÂÆåÊàêÔºö ÂêÑÂÆ°ÊâπËßíËâ≤ÔºöÂè™ÈúÄË¶ÅÂÆö‰πâÂÖ∂ËÅåÊùÉËåÉÂõ¥ÂÜÖÁöÑÂ∑•‰ΩúÔºåÂÜç‰æùÈù†È´òÂ±ÇÊäΩË±°ÂÆûÁé∞ËßíËâ≤Ë¥£‰ªªÁöÑÈìæÂºèÁªìÊûÑÔºåÂÆ°ÊâπÈÄªËæëÂæó‰ª•ÊãÜÂàÜ„ÄÅ‰∏≤ËÅîÔºåËÆ©‰∏öÂä°Áî≥ËØ∑Âú®Ë¥£‰ªªÈìæ‰∏äÈÄêÁ∫ß‰º†ÈÄí„ÄÇ Áî≥ËØ∑‰∫∫ÔºöÂÜç‰πü‰∏çÂøÖÂÖ≥ÂøÉ‰∏öÂä°Â§ÑÁêÜÁªÜËäÇ‰∏éÁªìÊûú‰∫ÜÔºåÂΩªÂ∫ïÂ∞ÜÂ∑•‰ΩúÊµÅÊàñ‰∏öÂä°ÈÄªËæëÊäõÂºÄÔºåËΩªÊùæÂú∞Â∞ÜÁî≥ËØ∑ÈÄí‰∫§ÁªôË¥£‰ªªÈìæÂÖ•Âè£Âç≥ÂèØÂæóÂà∞ÊúÄÁªàÁªìÊûú„ÄÇ ‰∫î„ÄÅËÆ©‰∏öÂä°È£û‰∏Ä‰ºöÂÑø1. Á±ªÁªìÊûÑ Ë¥£‰ªªÈìæÊ®°ÂºèÁöÑÁ±ªÁªìÊûÑÔºö %%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% classDiagram Handler --o Handler Handler C(\"ClientÂÆ¢Êà∑Á´Ø\"):::lp A -.- |\"ÂÆ°Êâπ‰∫∫Approver\"| a[\"ÊâÄÊúâ‰∏öÂä°Â§ÑÁêÜËäÇÁÇπÁöÑÈ°∂Â±ÇÊäΩË±°* ÂÆö‰πâ‰∫ÜÊäΩË±°‰∏öÂä°Â§ÑÁêÜÊñπÊ≥ï handle() Âπ∂ÁïôÁªôÂ≠êÁ±ªÂÆûÁé∞* ÂÆû‰ΩìÊñπÊ≥ï setSuccessor()-Ê≥®ÂÖ•Áªß‰ªªËÄÖ ÔºöÊûÑÂª∫Ë¥£‰ªªÈìæ\"] B -.- |\"StaffManagerCFO\"| b[\"ÂÆûÈôÖ‰∏öÂä°Â§ÑÁêÜÁöÑÂÆûÁé∞Á±ªÔºåÂèØ‰ª•Êúâ‰ªªÊÑèÂ§ö‰∏™ÔºåÊØè‰∏™ÈÉΩÂÆûÁé∞‰∫Ü handle() ÊñπÊ≥ï‰ª•Â§ÑÁêÜËá™Â∑±ËÅåÊùÉËåÉÂõ¥ÂÜÖÁöÑ‰∏öÂä°ÔºåËÅåÊùÉËåÉÂõ¥‰πãÂ§ñÁöÑ‰∫ãÂàô‰º†ÈÄíÁªô‰∏ã‰∏Ä‰ΩçÁªß‰ªªËÄÖ\"] C -.- c[\"‰∏öÂä°Áî≥ËØ∑‰∫∫ÔºåÂè™ÈúÄÂØπ‰∏öÂä°ÈìæÊù°ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖ•Âè£ËäÇÁÇπÂèëËµ∑ËØ∑Ê±ÇÂç≥ÂèØÂæóÂà∞ÊúÄÁªàÂìçÂ∫î„ÄÇ\"] classDef p fill:#ddaebd classDef lp fill:#f4e4e9 3. ÊÄªÁªì%%{ init: { 'themeVariables': { 'fontSize': '14px' } } }%% graph LR T([\"Ë¥£‰ªªÈìæÊ®°ÂºèÊÄªÁªì\"]):::p T --> A([\"Êú¨Ë¥®\"]):::g T --> C([\"‰ºòÁÇπ\"]):::p A ---> a[\"Â§ÑÁêÜÊüêÁßçËøûÁª≠ÁöÑÂ∑•‰ΩúÊµÅÔºåÂπ∂Á°Æ‰øù‰∏öÂä°ËÉΩÂ§üË¢´‰º†ÈÄíËá≥Áõ∏Â∫îÁöÑË¥£‰ªªËäÇÁÇπ‰∏äÂæóÂà∞Â§ÑÁêÜ„ÄÇ\"]:::lg C --> c1([\"ÂèØÊâ©Â±ï\"]):::lp C --> c2([\"‰ΩéËÄ¶Âêà\"]):::lp c1 -.- c1t[\"ÂØπË¥£‰ªªÈìæÊ®°ÂºèÁöÑÂ∫îÁî®ËÆ©Êàë‰ª¨ÂèØ‰ª•Ê≥∞ÁÑ∂Ëá™Ëã•Âú∞Â∫îÂØπ‰∏öÂä°ÈúÄÊ±ÇÁöÑÂèòÊõ¥ÔºåÊñπ‰æøÂú∞ÂØπ‰∏öÂä°ÈìæÊù°ËøõË°åÊãÜÂàÜ„ÄÅÈáçÁªÑÔºå‰ª•ÂèäÂØπÂçïÁã¨ËäÇÁÇπÁöÑÂ¢û„ÄÅÂà†„ÄÅÊîπ„ÄÇ\"]:::lp c1 -.- c1t2[\"ÁªìÊûÑÊùæÊï£ÁöÑ‰∏öÂä°Â§ÑÁêÜËäÇÁÇπËÆ©Á≥ªÁªüÂÖ∑Â§áÊõ¥Âä†ÁÅµÊ¥ªÁöÑÂèØ‰º∏Áº©ÊÄß„ÄÅÂèØÊâ©Â±ïÊÄß„ÄÇ\"]:::info c2 -.- c2t[\"Ë¥£‰ªªÈìæÊ®°ÂºèËÆ©Áî≥ËØ∑Êñπ‰∏éÂ§ÑÁêÜÊñπËß£ËÄ¶ÔºåÁî≥ËØ∑‰∫∫ËÉΩÂΩªÂ∫ï‰ªé‰∏öÂä°ÁªÜËäÇ‰∏≠Ëß£ËÑ±Âá∫Êù•ÔºåÊó†ËÆ∫ÂÆ°ÊâπÊµÅÁ®ãÂ§ö‰πàÂ§çÊùÇÔºåÈÉΩÂè™ÈúÄË¶ÅÁÆÄÂçïÁöÑÁ≠âÂæÖÔºåËÆ©‰∏öÂä°Âú®Ë¥£‰ªªÈìæ‰∏äÈ£û‰∏Ä‰ºöÂÑø„ÄÇ\"]:::lp classDef p fill:#ddaebd classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px","categories":[{"name":"ËÆæËÆ°Ê®°Âºè","slug":"ËÆæËÆ°Ê®°Âºè","permalink":"https://equnee.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],"tags":[{"name":"Chain","slug":"Chain","permalink":"https://equnee.github.io/tags/Chain/"}]},{"title":"üå∑„ÄäÁßíÊáÇËÆæËÆ°Ê®°Âºè„Äã‚Äî‚Äî Âçï‰æãÊ®°Âºè","slug":"note/Design-pattern/design-pattern_Singleton","date":"2023-03-07T17:32:40.177Z","updated":"2023-05-04T09:26:02.193Z","comments":true,"path":"note/Design-pattern/design-pattern_Singleton/","link":"","permalink":"https://equnee.github.io/note/Design-pattern/design-pattern_Singleton/","excerpt":"","text":"Êù•Ëá™„ÄäÁßíÊáÇËÆæËÆ°Ê®°Âºè„Äã ‰∏Ä. Â≠§Áã¨ÁöÑÂ§™Èò≥Êàë‰ª¨ÂèØ‰ª•ÊääÂ§™Èò≥Á≥ªÁúã‰Ωú‰∏Ä‰∏™Â∫ûÂ§ßÁöÑÁ≥ªÁªüÔºåÂÖ∂‰∏≠ÊúâÂêÑÁßçÂêÑÊ†∑ÁöÑÂØπË±°Â≠òÂú®Ôºå‰∏∞ÂØåÂ§öÂΩ©ÁöÑÂÆû‰æãÈÄ†Â∞±‰∫ÜÁ≥ªÁªüÁöÑÁæéÂ•Ω„ÄÇËøô‰∏™Á≥ªÁªüÈáåÁöÑÊüê‰∫õÂÆû‰æãÊòØÂîØ‰∏ÄÁöÑÔºåÂ¶ÇÊàë‰ª¨Ëµñ‰ª•ÁîüÂ≠òÁöÑÊÅíÊòüÂ§™Èò≥„ÄÇ ‰∏éÂÖ∂‰ªñË°åÊòüÊàñÂç´Êòü‰∏çÂêåÁöÑÊòØÔºåÂ§™Èò≥ÊòØÂ§™Èò≥Á≥ªÂÜÖÂîØ‰∏ÄÁöÑÊÅíÊòüÂÆû‰æã„ÄÇ‰ΩÜÂÄòËã•Â§©‰∏äÊúâ9‰∏™Â§™Èò≥ÔºåÈÇ£‰πàÂ∞Ü‰ºöÂ∏¶Êù•‰∏ÄÂú∫ÁÅæÈöæ„ÄÇÂ§™Èò≥‰∏çÂ§ö‰∏çÂ∞ë‰ªÖÊ≠§‰∏Ä‰æã„ÄÇ ‰∫å. È•øÊ±âÈÄ†Êó•%%{ init: { 'themeVariables': { 'fontSize': '22px', 'fontFamily': 'Noto Serif SC' } } }%% graph LR T((\"È•øÊ±âÈÄ†Êó•\")):::b T --> A([\"1. ÂºÄÂßã\"]):::p T --> B([\"2. ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ\"]):::p T --> C([\"3. Ëá™ÊúâÊ∞∏Êúâ\"]):::p T --> D([\"4. ÂÖ¨ÂºÄËÆøÈóÆ\"]):::p T --> E([\"5. ÊÄªÁªì\"]):::b A --> a(\"Êó¢ÁÑ∂Â§™Èò≥Á≥ªÈáåÂè™Êúâ‰∏Ä‰∏™Â§™Èò≥ÔºåÂ∞±ÈúÄË¶Å‰∏•Ê†ºÊääÊéßÂ§™Èò≥ÂÆû‰æãÂåñÁöÑËøáÁ®ã„ÄÇ\"):::lp a -.-> at([\"Public class Sun {} // ‰∏Ä‰∏™ÊúÄÁÆÄÂçïÁöÑSunÁ±ª\"]):::lg B --> b(\"Â§™Èò≥Âè™Êúâ‰∏Ä‰∏™Ôºå‰∏çËÉΩÈöèÊÑèÂàõÂª∫ÂÆû‰æã„ÄÇ‰ΩÜÁî±‰∫éJava‰ºöËá™Âä®ÁîüÊàê‰∏Ä‰∏™Êó†ÂèÇÊûÑÈÄ†Âô®ÔºåÂõ†Ê≠§ÂøÖÈ°ªÁ¶ÅÊ≠¢Â§ñÈÉ®Ë∞ÉÁî®ÊûÑÈÄ†Âô®*„ÄÇ\"):::lp b -.-> bt([\"private Sun(){}\"]):::lg C --> c(\"ËÆ©ÂÆÉÂú®Á±ªÂä†ËΩΩÊó∂Â∞±Ëá™Â∑±ÂàõÂª∫Ëá™Â∑±ÔºåÂπ∂‰ΩøÂÖ∂Ëá™ÊúâÊ∞∏Êúâ\"):::lp c -.-> ct([\"private static final Sun sun = new Sun();\"]):::lg D --> d(\"‰ΩøÁî®ÈùôÊÄÅÊñπÊ≥ï*getInstance()Êù•Ëé∑ÂèñÂ§™Èò≥ÁöÑÂçï‰æãÂØπË±°Âπ∂Â∞ÜÂÖ∂ËÆæÁΩÆ‰∏∫‚Äúpublic‚Äù‰ª•Êö¥Èú≤ÁªôÂ§ñÈÉ®‰ΩøÁî®\"):::lp d -.- dt([\"public static Sun getInstance(){ return sun; }\"]):::lg d -.- d2t[\"*Â¶ÇÂêåÁ®ãÂ∫èÂÖ•Âè£ÁöÑÈùôÊÄÅÊñπÊ≥ïmain(), ‰∏çÈúÄË¶Å‰ªª‰ΩïÂØπË±°ÂºïÁî®Â∞±ËÉΩË¢´ËÆøÈóÆ\"]:::info T -..-> e(\"ÔºàËøòÂèØ‰ª•Ê∑ªÂä†ÂÖ∂‰ªñÂäüËÉΩÊñπÊ≥ïÔºåÂ¶ÇÂèëÂÖâÂíåÂèëÁÉ≠Á≠âÔºâ\"):::info d --> et(\"ÊúÄÂêéÔºå‰∏çÁÆ°Ë∞ÅÂæóÂà∞ÊàñÂæóÂà∞Âá†Ê¨°ÔºåÂæóÂà∞ÁöÑÈÉΩÊòØÂêå‰∏Ä‰∏™Â§™Èò≥ÂÆû‰æãÔºåËøôÊ†∑Â∞±Á°Æ‰øù‰∫ÜÊï¥‰∏™Â§™Èò≥Á≥ª‰∏≠ÊÅíÊòüÂ§™Èò≥ÁöÑÂîØ‰∏ÄÂêàÊ≥ïÊÄßÔºå‰ªñ‰∫∫Êó†Ê≥ï‰º™ÈÄ†„ÄÇ\"):::lb E --> e2t(\"ËøôÂ∞±ÊòØ‚ÄúÈ•øÊ±âÊ®°Âºè‚Äù(eager initialization)ÔºöÂç≥Âú®ÂàùÂßãÈò∂ÊÆµ(static)Â∞±‰∏ªÂä®ËøõË°åÂÆû‰æãÂåñÔºåÂπ∂Êó∂Âàª‰øùÊåÅ‰∏ÄÁßçÊ∏¥Ê±ÇÁöÑÁä∂ÊÄÅ(public)ÔºåÊó†ËÆ∫Ê≠§Âçï‰æãÊòØÂê¶Êúâ‰∫∫‰ΩøÁî®„ÄÇ\"):::lb classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#cde2da classDef info fill:#f6f6f7,color:#5a5a5f,stroke-dasharray: 3 3, stroke-width: 2px 1. ÂºÄÂßã public class Sun &#123;&#125; 2. ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ Êé•‰∏ãÊù•Êàë‰ª¨ÂæóÁ°Æ‰øù‰ªª‰Ωï‰∫∫ÈÉΩ‰∏çËÉΩÂàõÂª∫Â§™Èò≥ÁöÑÂÆû‰æãÔºåÂê¶Âàô‰∏ÄÊó¶Á®ãÂ∫èÂëòË∞ÉÁî®‰ª£Á†Å‚Äúnew Sun()‚ÄùÔºåÂ§©Á©∫Â∞±‰ºöÂá∫Áé∞Â§ö‰∏™Â§™Èò≥Ôºå‰æøÂèàÈúÄË¶Å‚ÄúÂêéÁæø‚ÄùÂéªËß£ÂÜ≥‰∫Ü„ÄÇ ÂÆû‰æãÂåñÂ∑•‰ΩúÂÆåÂÖ®ÂΩíÂ±û‰∫éÂÜÖÈÉ®‰∫ãÂä°Ôºå‰ªª‰ΩïÂ§ñÈÉ®Á±ªÈÉΩÊó†ÊùÉÂπ≤È¢Ñ public class Sun &#123; private Sun()&#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; &#125; 3. Ëá™ÊúâÊ∞∏Êúâ public class Sun &#123; private static final Sun sun = new Sun(); // Ëá™ÊúâÊ∞∏ÊúâÁöÑÂ§™Èò≥Âçï‰æã private Sun()&#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; &#125; ÂÖ≥ÈîÆÂ≠ó ËØ¥Êòé private Á°Æ‰øùÂ§™Èò≥ÂÆû‰æãÁöÑÁßÅÊúâÊÄß„ÄÅ‰∏çÂèØËßÅÊÄßÂíå‰∏çÂèØËÆøÈóÆÊÄßÔºõ static Á°Æ‰øùÂ§™Èò≥ÁöÑÈùôÊÄÅÊÄßÔºåÂ∞ÜÂ§™Èò≥ÊîæÂÖ•ÂÜÖÂ≠òÈáåÁöÑÈùôÊÄÅÂå∫ÔºåÂú®Á±ªÂä†ËΩΩÁöÑÊó∂ÂÄôÂ∞±ÂàùÂßãÂåñ‰∫ÜÔºåÂÆÉ‰∏éÁ±ªÂêåÂú®Ôºå‰πüÂ∞±ÊòØËØ¥ÂÆÉÊòØ‰∏éÁ±ªÂêåÊó∂Êúü‰∏îÊó©‰∫éÂÜÖÂ≠òÂ†Ü‰∏≠ÁöÑÂØπË±°ÂÆû‰æãÂåñÁöÑÔºåËØ•ÂÆû‰æãÂú®ÂÜÖÂ≠ò‰∏≠Ê∞∏ÁîüÔºåÂÜÖÂ≠òÂûÉÂúæÊî∂ÈõÜÂô®(Garbage Collector, GC)‰πü‰∏ç‰ºöÂØπÂÖ∂ËøõË°åÂõûÊî∂Ôºõ final Á°Æ‰øùËøô‰∏™Â§™Èò≥ÊòØÂ∏∏Èáè„ÄÅÊÅíÈáèÔºåÂÆÉÊòØ‰∏ÄÈ¢óÁªàÊûÅÁöÑÊÅíÊòüÔºåÂºïÁî®‰∏ÄÊó¶Ë¢´ËµãÂÄºÂ∞±‰∏çËÉΩÂÜç‰øÆÊîπÔºõ new ÂàùÂßãÂåñÂ§™Èò≥Á±ªÁöÑÈùôÊÄÅÂÆû‰æãÔºåÂπ∂Ëµã‰∫àÈùôÊÄÅÂ∏∏Èáèsun„ÄÇ 4. ÂÖ¨ÂºÄËÆøÈóÆ Âçï‰æãÁöÑÂ§™Èò≥ÂØπË±°ÂÜôÂ•Ω‰∫ÜÔºåÂèØ‰∏ÄÂàáÁöÜÊòØÁßÅÊúâÁöÑÔºåÂ§ñÈÉ®Â¶Ç‰ΩïËÆøÈóÆÔºü‚Äî‚Äî ‰ΩøÁî®ÈùôÊÄÅÊñπÊ≥ïgetInstance()Êù•Ëé∑ÂèñÂ§™Èò≥ÁöÑÂçï‰æãÂØπË±°„ÄÇ public class Sun &#123; private static final Sun sun = new Sun(); // Ëá™ÊúâÊ∞∏ÊúâÁöÑÂ§™Èò≥Âçï‰æã private Sun()&#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; public static Sun getInstance()&#123; // Èò≥ÂÖâÊôÆÁÖßÔºåÊñπÊ≥ïÂÖ¨ÂºÄÂåñ return sun; &#125; &#125; ‰∏â. ÊáíÊ±âÁöÑÈòü‰ºçgraph LR T((ÊáíÊ±âÁöÑÈòü‰ºç)):::b T --> A([\"1. Áî®Êó∂ÊâçÂàõÂª∫\"]):::p T --> B([\"2. ÊéíÈòüÔºàÂêåÊ≠•ÈîÅÔºâ\"]):::p T --> C([\"3. ÈúÄË¶ÅÊó∂ÂÜçÊéíÈòüÔºàÂèåÊ£ÄÈîÅÔºâ\"]):::p A --> a(\"Ëã•Êó†ËØ∑Ê±ÇÂ∞±‰∏çÂÆû‰æãÂåñÔºåËäÇÁúÅÂÜÖÂ≠òÁ©∫Èó¥\"):::lp a -.-> at([\"ÂéªÊéâ finalif(sun == null)\"]):::lg B --> b(\"Áî±‰∫éÂ§öÁ∫øÁ®ãÊó∂ÁöÑÁº∫Èô∑ÔºöËØ∑Ê±ÇÊñπÊ≥ïÂä†‰∏äÂêåÊ≠•ÈîÅsynchronized\"):::lp b -.- bt2([\"public static synchronized Sun getInstance() \"]):::lg b -.-> bt3(\"Âä†ÈîÅÂêéÊüêÁ∫øÁ®ãË∞ÉÁî®ÂâçÂøÖÈ°ªËé∑ÂèñÂêåÊ≠•ÈîÅÔºåË∞ÉÁî®ÂÆå‰ºöÈáäÊîæÈîÅÁªôÂÖ∂‰ªñÁ∫øÁ®ãÁî®Ôºå‰πüÂ∞±ÊòØÁªôËØ∑Ê±ÇÊéíÈòü„ÄÇ\"):::info C --> c(\"‰∏∫‰∫ÜËß£ÂÜ≥Á∫øÁ®ãÈòªÂ°ûÔºö‰ΩøÁî®2‰∏™ÂµåÂ•óÁöÑÂà§Á©∫ÈÄªËæë\"):::lp c -.- ct([\"private volatile static Sun sun;if(sun = null){ synchronized(){if(sun == null){sun = new Sun();}\"]):::lg c -.- ct2[\"1. Â§ñÂ±ÇÊîæÂÆΩÂÖ•Âè£Ôºå‰øùËØÅÁ∫øÁ®ãÂπ∂ÂèëÁöÑÈ´òÊïàÊÄß2. ÂÜÖÂ±ÇÂä†ÈîÅÂêåÊ≠•Ôºå‰øùËØÅÂÆû‰æãÂåñÁöÑÂçïÊ¨°ËøêË°å\"]:::info classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#cde2da classDef info fill:#f6f6f7,color:#433f40,stroke-dasharray: 3 3, stroke-width: 2px 1. Áî®Êó∂ÊâçÂàõÂª∫ Âçï‰æãÁöÑ‚ÄúÈ•øÊ±âÊ®°Âºè‚ÄùÔºåËÆ©Â§™Èò≥‰∏ÄÂºÄÂßãÂ∞±ÂáÜÂ§áÂ∞±Áª™ÔºåÈöèÊó∂‰æõÂ∫îÂÖçË¥πÊó•ÂÖâ„ÄÇ ÁÑ∂ËÄåÔºåÂ¶ÇÊûúÂßãÁªàÊ≤°‰∫∫Ëé∑ÂèñÊó•ÂÖâÔºåÈÇ£Â∞±ÁôΩÈÄ†‰∫ÜÂ§™Èò≥ÔºåÁôΩÁôΩÊµ™Ë¥π‰∏ÄÂùóÂÜÖÂ≠òÂå∫Âüü„ÄÇÁ±ª‰ºº‰∫éÂïÜÂÆ∂Ë¥ßÂìÅÊªûÈîÄÁöÑÊÉÖÂÜµÔºåË¥ßÊû∂‰∏äÂ†ÜÊîæÁùÄÂïÜÂìÅÂç¥Ê≤°‰∫∫‰π∞ÔºåÁôΩÁôΩÊµ™Ë¥πÁ©∫Èó¥„ÄÇÂõ†Ê≠§ÔºåÂïÜÂÆ∂‰∏∫‰∫ÜÈôç‰ΩéÈ£éÈô©ÔºåËßÑÂÆöÊúâ‰∫õÂïÜÂìÅÂøÖÈ°ªÊèêÂâçÈ¢ÑËÆ¢ÔºåËøôÂ∞±ÊòØ‚ÄúÊáíÊ±âÊ®°Âºè‚Äù(lazy initialization)„ÄÇ public class Sun &#123; private static Sun sun; // ËøôÈáå‰∏çËøõË°åÂÆû‰æãÂåñ private Sun()&#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; public static Sun getInstance() &#123; if(sun == null) &#123; // Â¶ÇÊûúÊó†Êó•ÊâçÈÄ†Êó• sun = new Sun(); &#125; return sun; &#125;&#125; ÂÖ≥ÈîÆÂ≠ó ËØ¥Êòé ÂéªÊéâ final ‰∏ÄÂºÄÂßãÂπ∂Ê≤°ÊúâÈÄ†Â§™Èò≥ÔºåÊâÄ‰ª•ÂéªÊéâ‰∫ÜÂÖ≥ÈîÆÂ≠ófinal„ÄÇ Áî®Êó∂ÊâçÂÆû‰æãÂåñ ‰ªÖÂú®ÊüêÁ∫øÁ®ãÁ¨¨‰∏ÄÊ¨°Ë∞ÉÁî®Á¨¨9Ë°åÁöÑgetInstance()ÊñπÊ≥ïÊó∂Êâç‰ºöËøêË°åÂØπÂ§™Èò≥ËøõË°åÂÆû‰æãÂåñÁöÑÈÄªËæë‰ª£Á†ÅÔºå‰πãÂêéÂÜçËØ∑Ê±ÇÂ∞±Áõ¥Êé•ËøîÂõûÊ≠§ÂÆû‰æã‰∫Ü„ÄÇ‚ùóÔ∏èÁº∫ÁÇπÔºöÂàùÊ¨°ËØ∑Ê±ÇÊó∂ÈÄüÂ∫¶ËæÉ‰πãÂâçÁöÑÈ•øÊ±âÂàùÂßãÂåñÊ®°ÂºèÊÖ¢ÔºåÂõ†‰∏∫Ë¶ÅÊ∂àËÄóCPUËµÑÊ∫êÂéª‰∏¥Êó∂ÈÄ†Ëøô‰∏™Â§™Èò≥„ÄÇ 2. ÊéíÈòü Âõ†‰∏∫‰∏äËø∞Á®ãÂ∫èÂú®Â§öÁ∫øÁ®ãÊ®°Âºè‰∏ãÊúâÁº∫Èô∑ÔºöÂπ∂ÂèëËØ∑Ê±ÇÊó∂Âà§Á©∫ÈÄªËæë‰ºöÂêåÊó∂ÊàêÁ´ãÔºåÂØºËá¥Â§öÊ¨°ÂÆû‰æãÂåñÂ§™Èò≥„ÄÅÂ§öÊ¨°ËµãÂÄºÔºåËøùËÉåÂçï‰æãÁêÜÂøµ„ÄÇ public class Sun &#123; private static Sun sun; // ËøôÈáå‰∏çËøõË°åÂÆû‰æãÂåñ private Sun()&#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; public static synchronized Sun getInstance() &#123; // Ê≠§Â§ÑÂä†ÂÖ•ÂêåÊ≠•ÈîÅ if(sun == null) &#123; // Â¶ÇÊûúÊó†Êó•ÊâçÈÄ†Êó• sun = new Sun(); &#125; return sun; &#125;&#125; ÂÖ≥ÈîÆÂ≠ó ËØ¥Êòé synchronized Â∞ÜÂ§™Èò≥Á±ªSun‰∏≠Á¨¨9Ë°åÁöÑgetInstance()ÊîπÊàê‰∫ÜÂêåÊ≠•ÊñπÊ≥ïÔºåÂ¶ÇÊ≠§ÂèØÈÅøÂÖçÂ§öÁ∫øÁ®ãÈô∑Èò±„ÄÇ 3. ÈúÄË¶ÅÊó∂ÂÜçÊéíÈòü Â¶ÇÊûú‰ªÖ‰∏∫‰∫ÜÂÆû‰æãÂåñ‰∏Ä‰∏™Âçï‰æãÂØπË±°ÔºåÁõ¥Êé•Âä†ÈîÅÊéíÈòü,‰ΩøÁî®synchronizedËÆ©ÊâÄÊúâËØ∑Ê±ÇÊéíÈòüÁ≠âÂÄôÔºö‰ºöÈÄ†ÊàêÁ∫øÁ®ãÈòªÂ°ûÔºåËµÑÊ∫ê‰∏éÊó∂Èó¥Ë¢´ÁôΩÁôΩÊµ™Ë¥π„ÄÇ public class Sun &#123; private volatile static Sun sun; private Sun() &#123; // ÊûÑÈÄ†ÊñπÊ≥ïÁßÅÊúâÂåñ &#125; public static Sun getInstance() &#123; // ÂçéÂ±±ÂÖ•Âè£ if(sun = null)&#123; synchronized(Sun.class)&#123; // ËßÇÊó•ËÄÖËøõË°åÊéíÈòü if(sun == null)&#123; sun = new Sun(); // Âè™ÊúâÊéíÂ§¥ÂÖµÈÄ†‰∫ÜÂ§™Èò≥ÔºåÊó≠Êó•‰∏úÂçá &#125; &#125; &#125; return sun; // ‚Ä¶‚Ä¶Èò≥ÂÖâÊôÆÁÖßÔºåÂÖ∂‰Ωô‰∫∫‰∏çÂøÖÂÜçÈÄ†Êó• &#125;&#125; ÂÖ≥ÈîÆÂ≠ó ËØ¥Êòé ÂéªÊéâ final Á¨¨3Ë°åÂØπsunÂèòÈáèÁöÑÂÆö‰πâ‰∏çÂÜç‰ΩøÁî®finalÂÖ≥ÈîÆÂ≠óÔºåËØ¥ÊòéÂÆÉ‰∏çÂÜçÊòØÂ∏∏ÈáèÔºåËÄåÊòØÈúÄË¶ÅÂêéÁª≠ËµãÂÄºÁöÑÂèòÈáèÔºõ volatile ÂÖ≥ÈîÆÂ≠óvolatileÂØπÈùôÊÄÅÂèòÈáèÁöÑ‰øÆÈ•∞ÂàôËÉΩ‰øùËØÅsunÂèòÈáèÂÄºÂú®ÂêÑÁ∫øÁ®ãËÆøÈóÆÊó∂ÁöÑÂêåÊ≠•ÊÄß„ÄÅÂîØ‰∏ÄÊÄß„ÄÇ ÂéªÊéâÂÖ•Âè£ÁöÑÂêåÊ≠•ÈîÅ ÂØπ‰∫éÁ¨¨9Ë°åÁöÑgetInstance()ÊñπÊ≥ïÔºåÂéªÊéâÊñπÊ≥ï‰∏äÁöÑÂÖ≥ÈîÆÂ≠ósynchronizedÔºå‰ΩøÂ§ßÂÆ∂ÈÉΩËÉΩÂêåÊó∂ËøõÂÖ•ÊñπÊ≥ïÂπ∂ÂØπÂÖ∂ËøõË°åÂºÄÂèë„ÄÇ Âà§Á©∫ÈÄªËæë1 Êúâ‰∫õ‰∫∫ÔºàÁ∫øÁ®ãÔºâËµ∑Êó©Â∞±ÊòØ‰∏∫‰∫ÜËßÇÁúãÊó•Âá∫ÔºåÈÇ£‰πàËøô‰∫õ‰∫∫‰ºöÈÄöËøáÁ¨¨10Ë°åÁöÑÂà§Á©∫ÈÄªËæëËøõÂÖ•ËßÇÊó•Âè∞„ÄÇ Âà§Á©∫ÈÄªËæë2 Âú®Á¨¨12Ë°åÊàë‰ª¨ÂèàËøõË°å‰∏ÄÊ¨°Âà§Á©∫ÈÄªËæëÔºåËøôÂ∞±ÊÑèÂë≥ÁùÄÂè™ÊúâÈòü‰ºç‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™‰∫∫ÈÄ†‰∫ÜÂ§™Èò≥ÔºåÊúâÂπ∏ÁúãÂà∞‰∫ÜÊó•Âá∫ÁöÑÁ¨¨‰∏ÄÁºïÈò≥ÂÖâÔºåËÄåÂêéÈù¢ÁöÑ‰∫∫ÂàôÁªüÁªüÁ¶ªÂºÄÔºåÁõ¥Âà∞Á¨¨17Ë°åÂæóÂà∞Â∑≤ÁªèÈÄ†Â•ΩÁöÑÂ§™Èò≥„ÄÇ ÊúÄÂêéÔºöÂ§™Èò≥È´òÈ´òÂçáËµ∑ÔºåÂÆû‰æãÂåñÊìç‰ΩúÂÆåÊØïÔºåËµ∑ÊôöÁöÑ‰∫∫‰ª¨ÈÉΩÊó†È°ªÂÜçËøõÂÖ•ËßÇÊó•Âè∞ÔºåÁõ¥Êé•Ëé∑ÂèñÂ§™Èò≥ÂÆû‰æãÂç≥ÂèØÔºåÊ∏©ÊöñÈò≥ÂÖâÊôÆÁÖßÂ§ßÂú∞„ÄÇ Âõõ. Â§ßÈÅìËá≥ÁÆÄÁõ∏ÊØî‚ÄúÊáíÊ±âÊ®°Âºè‚ÄùÔºåÂÖ∂ÂÆûÊõ¥Â∏∏Áî®‚ÄúÈ•øÊ±âÊ®°Âºè‚ÄùÔºåÂõ†‰∏∫Ëøô‰∏™Âçï‰æãËøüÊó©ÊòØË¶ÅË¢´ÂÆû‰æãÂåñÂç†Áî®ÂÜÖÂ≠òÁöÑÔºåÂª∂ËøüÊáíÂä†ËΩΩÁöÑÊÑè‰πâÂπ∂‰∏çÂ§ßÔºåÂä†ÈîÅËß£ÈîÅÂèçËÄåÊòØ‰∏ÄÁßçËµÑÊ∫êÊµ™Ë¥πÔºåÂêåÊ≠•Êõ¥ÊòØ‰ºöÈôç‰ΩéCPUÁöÑÂà©Áî®ÁéáÔºå‰ΩøÁî®‰∏çÂΩìÁöÑËØùÂèçËÄå‰ºöÂ∏¶Êù•‰∏çÂøÖË¶ÅÁöÑÈ£éÈô©„ÄÇË∂äÁÆÄÂçïÁöÑÂåÖÂÆπÊÄßË∂äÂº∫ÔºåËÄåË∂äÂ§çÊùÇÁöÑÂèçËÄåË∂äÂÆπÊòìÂá∫Èîô„ÄÇ Âçï‰æãÊ®°ÂºèÁöÑÁ±ªÁªìÊûÑÔºö classDiagram class Singleton{ - instance : singleton - Sigleton() + getInstance() Singleton } Singleton --> Singleton SingletonÔºàÂçï‰æãÔºâÔºöÂåÖÂê´‰∏Ä‰∏™Ëá™Â∑±ÁöÑÁ±ªÂÆû‰æãÁöÑÂ±ûÊÄßÔºåÂπ∂ÊääÊûÑÈÄ†ÊñπÊ≥ïÁî®privatÂÖ≥ÈîÆÂ≠óÈöêËóèËµ∑Êù•ÔºåÂØπÂ§ñÂè™ÊèêgetInstance()ÊñπÊ≥ï‰ª•Ëé∑ÂæóËøô‰∏™Âçï‰æãÂØπË±°„ÄÇ","categories":[{"name":"ËÆæËÆ°Ê®°Âºè","slug":"ËÆæËÆ°Ê®°Âºè","permalink":"https://equnee.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],"tags":[{"name":"singleton","slug":"singleton","permalink":"https://equnee.github.io/tags/singleton/"}]},{"title":"MacËøúÁ®ãËøûÊé•WindowsÔºàMicrosoft Remote DesktopÔºâ","slug":"guide/mac_mrd_windows","date":"2021-03-25T07:49:07.000Z","updated":"2023-03-23T12:00:15.278Z","comments":true,"path":"guide/mac_mrd_windows/","link":"","permalink":"https://equnee.github.io/guide/mac_mrd_windows/","excerpt":"","text":"ÊëòË¶Å: ÂêåÊó∂Â∏¶‰∏§Âè∞ÁîµËÑëÂá∫Èó®ÂæàÈ∫ªÁÉ¶Ôºå‰∫éÊòØÈÄâÊã©Âú®Mac‰∏ä‰ΩøÁî® Microsoft Remote Desktop ËøúÁ®ãËøûÊé•‰ΩøÁî®‰∏çÂ∏¶Âá∫Èó®ÁöÑ WindowsÔºå‰ªéÊ≠§Âè™ÈúÄË¶ÅÊääWindowsÊîæÂú®ÂÆ∂ÈáåËøûÊé•ÁîµÊ∫êÂíåwifi‰∏ÄÁõ¥ÊîæÁùÄÂ∞±Ë°åÔºÅÈ°∫‰æøÊï¥ÁêÜ‰∫Ü‰∏Ä‰∫õÂà´‰∫∫ÈÅáÂà∞ÁöÑÈîôËØØÂíåËß£ÂÜ≥ÊñπÊ≥ï„ÄÇ Êó•Êúü: 2021/3/25 ÁéØÂ¢É : MacOS 11.2.2 + Windows10 ‰∏Ä. ËΩØ‰ª∂‰∏ãËΩΩ‰∏ãËΩΩ Microsoft Remote DesktopÔºåÊ†πÊçÆÊÉÖÂÜµ‰∏ãËΩΩÂØπÂ∫îÁâàÊú¨ÁöÑappÔºö ‰ΩøÁî® Windows ÊéßÂà∂ windowsÔºö&gt;&gt; ÂÆòÁΩë‰∏ãËΩΩ ‰ΩøÁî® Mac ÊéßÂà∂ windowsÔºö App Store ‰∏ãËΩΩÔºå‰ªÖÂõΩÂ§ñÁöÑÂ∫îÁî®ÂïÜÂ∫óÊèê‰æõ‰∏ãËΩΩÔºåÂõ†Ê≠§Âè™ËÉΩ‰ΩøÁî®ÂõΩÂ§ñÁöÑ AppleIDÔºåÂèØÂèÇËÄÉ&gt; &gt; ÂõΩÂ§ñAppleIDÁî≥ËØ∑ÊñπÊ≥ï„ÄÇ ÂÖ∂‰ªñÊ∏†ÈÅì‰∏ãËΩΩÔºà‰ø∫‰πüÊ≤°ËØïËøá ‰∫å. ÂàõÂª∫ËøûÊé•2.1 Windows ÈÖçÁΩÆ È¶ñÂÖàÁ°Æ‰øùÂ∞ÜË¢´ÊéßÂà∂ÁöÑ Windows ÂºÄÂêØ‰∫ÜËøúÁ®ãÊ°åÈù¢ËøûÊé•ÈÖçÁΩÆÔºö Ôºà1ÔºâÁ≥ªÁªüÂ±ûÊÄß ËÆæÁΩÆ‰∫ÜÁ≥ªÁªüÂ±ûÊÄß‰∏∫ÂÖÅËÆ∏ËøúÁ®ãÊ°åÈù¢ËøûÊé• Ëã•ÈÄâÈ°πÈÉΩÊòØÁÅ∞Ëâ≤Êó†Ê≥ïÂÖÅËÆ∏ËøúÁ®ãËøûÊé•Ôºå&gt; ÂèÇËÄÉËøôÈáå„ÄÇ ËøêË°å gpedit.msc ÂõûËΩ¶ÊâìÂºÄÊú¨Âú∞ÁªÑÁ≠ñÁï•ÁºñËæëÂô®,Âú®Â∑¶‰æßÁöÑÂàóË°®‰∏≠‰æùÊ¨°Â±ïÂºÄÔºöËÆ°ÁÆóÊú∫ÈÖçÁΩÆ&gt;ÁÆ°ÁêÜÊ®°Êùø&gt;WindowsÁªÑ‰ª∂&gt;ËøúÁ®ãÊ°åÈù¢‰ºöËØù‰∏ªÊú∫&gt;ËøûÊé• ÂèåÂáªÊâìÂºÄÂè≥‰æßÁöÑ‚ÄùÂÖÅËÆ∏Áî®Êà∑ÈÄöËøá‰ΩøÁî®ËøúÁ®ãÊ°åÈù¢ÊúçÂä°ËøõË°åËøúÁ®ãËøûÊé•‚Äú,Áúã‰∏Ä‰∏ã‰πãÂâçÊòØÂê¶ÊúâÈÖçÁΩÆ,Â¶ÇÊûúÊúâÁöÑËØùÊîπÊàê‚ÄùÊú™ÈÖçÁΩÆ‚Äù,Â¶ÇÊûú‰πãÂâçÂ∞±ÊòØÊú™ÈÖçÁΩÆ,ÈÇ£ÂèØ‰ª•ÊîπÊàêÂ∑≤ÂêØÁî®,ÁÑ∂ÂêéÊÇ®ÂÜçÁúã‰∏Ä‰∏ãÁ≥ªÁªüÂ±ûÊÄß&gt;ËøúÁ®ãÊ°åÈù¢‰∏≠ÁöÑÁõ∏ÂÖ≥ËÆæÁΩÆÂå∫ÂüüÊòØÂê¶ÊÅ¢Â§çÊ≠£Â∏∏. Ôºà2ÔºâÈò≤ÁÅ´Â¢ô ËÆæÁΩÆ‰∫ÜÈò≤ÁÅ´Â¢ôÂÖÅËÆ∏ËøúÁ®ãÊ°åÈù¢ÈÄöËøáÈò≤ÁÅ´Â¢ôÈÄö‰ø° Ôºà3ÔºâÁ´ØÂè£ ÂºÄÂêØ‰∫ÜÁî®‰∫éËøúÁ®ãÊ°åÈù¢ËøûÊé•ÁöÑÊúçÂä°Á´ØÂè£Ôºö Âú®cmd‰∏≠ËæìÂÖ•netstat -aon|findstr 3389ÔºåÊü•ÁúãÈªòËÆ§Á´ØÂè£Âè∑3389ÊòØÂê¶ÂºÄÂêØ„ÄÇ Ëã•Á´ØÂè£Âè∑Êú™ÂºÄÂêØÔºöÊâìÂºÄ‰ªªÂä°ÁÆ°ÁêÜÂô®ÔºåÂºÄÂêØ‰∏ãÈù¢‰∏§È°πÊúçÂä°„ÄÇÔºàUmRdpServiseÂèØÊí≠ÊîæÂ£∞Èü≥) Ëã•‰øÆÊîπËøáÊàñÊó†Ê≥ïÊü•ËØ¢Âà∞3389Á´ØÂè£Ôºå&gt; ÂèÇËÄÉËøôÈáå„ÄÇ Ôºà4ÔºâÊú¨Âú∞Á≠ñÁï• ËÆæÁΩÆÊú¨Âú∞Á≠ñÁï•ÈùûÊù•ÂÆæ„ÄÇÂú®ËøêË°å‰∏≠ËæìÂÖ•Ôºögpedit.msc Ôºà5ÔºâÂÖ≥Èó≠ Windows hello Á°Æ‰øùÂÖ≥Èó≠‰∫ÜËÆæÁΩÆÂÜÖ ‰ªÖÂÖÅËÆ∏ Windows hello ÁôªÂΩï (Êú™ËÆæÁΩÆÂèØÂøΩÁï•„ÄÇ) Windows HelloÔºö‰ΩøÊÇ®ÂèØ‰ª•‰ΩøÁî®ËÑ∏ÈÉ®ÔºåËôπËÜúÔºåÊåáÁ∫πÊàñPINÁôªÂΩïËÆæÂ§áÔºåÂ∫îÁî®Á®ãÂ∫èÔºåÂú®Á∫øÊúçÂä°ÂíåÁΩëÁªú„ÄÇ Ôºà6ÔºâAAD Á°Æ‰øù‰∏çÊòØÈÄöËøá Microsoft Authenticator ÔºåËÄåÊòØÈÄöËøáÊâãÂä®ËæìÂÖ•ÂØÜÁ†ÅËøõË°åÈ™åËØÅÁôªÂΩïÁöÑÔºö Âõ†‰∏∫ Microsoft Authenticator ÁôªÂΩï‰ΩøÁî®ÁöÑËÆ§ËØÅÊñπÂºè‰∏éÂÖ∂‰ªñÂüü‰∏ç‰∫íÈÄöÔºåÂ∞±‰∏çËÉΩÁõ¥Êé•ÂºÄÂêØËøûÊé•Âï¶„ÄÇ 2.2 Ê∑ªÂä†ËÆ°ÁÆóÊú∫ ÈÖçÁΩÆWindowsÂÖÅËÆ∏ËøúÁ®ãÊ°åÈù¢ËøûÊé•ÂêéÔºå‰ΩøÁî®MacÂáÜÂ§áÂºÄÂßãËøûÊé•ÔºåÂú®Microsoft Remote Desktop‰∏≠Ê∑ªÂä†PCÔºåËæìÂÖ•‰∏ªÊú∫Âêç + Áî®Êà∑Ë¥¶Âè∑‰ø°ÊÅØ„ÄÇ PC nameÔºöIPÂú∞ÂùÄ„ÄÇ Êü•ÁúãÊñπÊ≥ïÔºöÂú® Windows ÁöÑÂëΩ‰ª§ÊèêÁ§∫Á¨¶(win+R ÈîÆÊâìÂºÄÁöÑËøêË°åÁ™óÂè£ËæìÂÖ•cmd) ËæìÂÖ•ÂëΩ‰ª§ ipconfigÔºåÂèØÊü•Áúãipv4Âú∞ÂùÄ„ÄÇ User accountÔºöÁôªÂΩïËØ•PCÁöÑË¥¶Âè∑ÂØÜÁ†Å„ÄÇÂª∫ËÆÆÈÄâÊã© Ask when requiredÔºåÂÖà‰∏çËæìÂÖ•Ë¥¶Âè∑ÂØÜÁ†ÅÔºåÂú®ËøûÊé•Êó∂ËæìÂÖ•ÔºåÁ°Æ‰øùËÉΩËøûÊé•ÊàêÂäüÂêéÂÜçÊ∑ªÂä†ËÆ∞ÂΩïÔºåÈò≤Ê≠¢ËøôÈáå‰øùÂ≠òÁöÑË¥¶Âè∑ÂØÜÁ†ÅÊúâËØØÔºåÂêéÈù¢ÊÄé‰πàÈÉΩËøû‰∏ç‰∏ä„ÄÇ 2.3 Â°´ÂÜôË¥¶Êà∑‰ø°ÊÅØÔºà1Ôºâ Êú¨Âú∞Áî®Êà∑ ‰ΩøÁî®Êú¨Âú∞Áî®Êà∑ÂêçÁôªÂΩïÔºö Êú¨Âú∞Áî®Êà∑Âêç(cmdËæìÂÖ• whoami Êü•Áúã) + Êú¨Âú∞Ëß£ÈîÅÂØÜÁ†Å„ÄÇ Ôºà2Ôºâ ÂæÆËΩØË¥¶Êà∑ ‰ΩøÁî®ÂæÆËΩØË¥¶Êà∑ÁôªÂΩïÔºö Êú¨Âú∞ÂàõÂª∫ÁöÑËã±ÊñáË¥¶Êà∑Ëã•ÂÖ≥ËÅî‰∫ÜÂæÆËΩØË¥¶Âè∑ÔºåÂèØ‰ΩøÁî®ËØ•ÂæÆËΩØË¥¶Âè∑ÈÇÆÁÆ±ËøõË°åËøúÁ®ãÁôªÂΩïÔºåÁî®Êà∑Âêç‰∏∫ÈÇÆÁÆ±Ê†ºÂºèÁöÑÂæÆËΩØË¥¶Âè∑(username@outlook.com) + ÂØπÂ∫îÁöÑÂæÆËΩØË¥¶Âè∑ÂØÜÁ†Å„ÄÇ Ôºà3Ôºâ Á©∫ÂØÜÁ†Å Êàñ‰ΩøÁî®Á©∫ÂØÜÁ†ÅËøõË°åËøúÁ®ãÊ°åÈù¢ËøûÊé•ÔºöÂú® windows ‰∏≠ËÆæÁΩÆ ÊâìÂºÄËøêË°åÔºåËæìÂÖ•gpedit.mscÔºåÊâìÂºÄÊú¨Âú∞ÁªÑÁ≠ñÁï•ÁºñËæëÂô® 2.4 Êä•ÈîôËß£ÂÜ≥Ôºà1Ôºâ The User Account Did Not work üîí ÊèêÁ§∫ÔºöThe User Account Did Not Work.The user account used to connect to xx.xx.xx.xx (remote PC) did not work. Try again.Ôºà‚Äì&gt; ‰Ω†ËæìÁöÑËøô‰∏™Ë¥¶Êà∑‰ø°ÊÅØËøû‰∏ç‰∏ä„ÄÇÔºâ üîë Ëß£ÂÜ≥ÊñπÊ≥ïÔºöÈúÄË¶ÅËæìÂÖ•Ê≠£Á°ÆÁöÑË¥¶Âè∑ÂØÜÁ†Å„ÄÇ ÂæÆËΩØË¥¶Âè∑ÁôªÂΩïÔºöÈÇÆÁÆ±Ê†ºÂºèÁöÑÂæÆËΩØË¥¶Âè∑(username@outlook.com) + ÂØπÂ∫îÁöÑÂæÆËΩØË¥¶Âè∑ÂØÜÁ†Å Êú¨Âú∞Áî®Êà∑ÁôªÂΩïÔºöÊú¨Âú∞‰∏ªÊú∫ÂêçÊàñÊú¨Âú∞Ë¥¶Êà∑Âêç + Êú¨Âú∞Ë¥¶Êà∑Ëß£ÈîÅÂØÜÁ†Å ‰ª•ÂâçÂèØ‰ª•ÔºåÁé∞Âú®Á™ÅÁÑ∂Ëøû‰∏ç‰∏ä‰∫ÜÔºöÊ£ÄÊü•‰∏äÈù¢‰∏§‰∏™ÂØÜÁ†ÅÊòØ‰∏çÊòØÊîπËøá‰∫ÜÔºåÂ¶ÇÊûúÊîπËøáËÆ∞ÂæóÂêåÊ≠•‰øÆÊîπ„ÄÇ Ôºà2Ôºâ 0x204 üîí ËøûÊé•Êó∂ÊèêÁ§∫ÔºöWe couldn‚Äôt connect to the remote PC.Make sure the PC is turned on and connected to the network, and thar remote access is enabled. Error code:0x204Ôºà‚Äì&gt; Êàë‰ª¨Êó†Ê≥ïËøûÊé•Âà∞ËøúÁ®ãÁîµËÑëÔºåÁ°Æ‰øùÁîµËÑëÂ∑≤ÊâìÂºÄÂπ∂ËøûÊé•Âà∞ÁΩëÁªúÔºåÂπ∂‰∏îÂ∑≤ÂêØÁî®ËøúÁ®ãËÆøÈóÆ„ÄÇÔºâ üîë Ëß£ÂÜ≥ÊñπÊ≥ïÔºö ÂºÄÁîµËÑë„ÄÇÊ£ÄÊü•ÊòØÂê¶ÊâìÂºÄwindowsÁîµÊ∫êÔºåÁ°Æ‰øùÈùûÂÖ≥Êú∫ÊàñÁù°Áú†Áä∂ÊÄÅÔºåÂºÄÂêØÁîµÊ∫êËß£ÈîÅÂ±èÂπïÂ∞±ÂèØ‰ª•Âï¶„ÄÇ ËøûWi-Fi„ÄÇ ÂºÄÊúçÂä°„ÄÇÁ°Æ‰øùÂ∑≤ÂºÄÂêØ Windows ÁöÑËøúÁ®ãÊ°åÈù¢ËøûÊé•ÈÖçÁΩÆ„ÄÇ Ôºà3Ôºâ 0x207 üîí ÊèêÁ§∫Ôºö üîëÔºöÁ°Æ‰øùwindowsÁöÑÊú¨Âú∞ÁªÑÁ≠ñÁï•‰∏çÊòØ ‰ªÖÊù•ÂÆæ Áä∂ÊÄÅ„ÄÇ ‰∏â. MacÈÖçÁΩÆ3.1 ÂàõÂª∫ÁõÆÂΩï Âú®macÁîµËÑë‰∏äÔºåÊ†πÊçÆÈúÄË¶ÅÂàõÂª∫Áî®‰∫éÊñá‰ª∂‰º†ËæìÁöÑÁõÆÂΩï„ÄÇ 3.2 ÁºñËæëÈÖçÁΩÆ ÂºÄÂêØMicrosoft Remote Desktop ËΩØ‰ª∂ÔºåÁÇπÂáªÁºñËæë„ÄÇ Â¶ÇÂõæÊâÄÁ§∫ÔºåÊ∑ªÂä†ÈáçÂÆöÂêëÂàöÂàõÂª∫ÁöÑÊñá‰ª∂Â§πÂØπÂ∫îÁöÑË∑ØÂæÑ 3.3 ÂÆåÊàê ÂèØÊü•Áúãwindows‰∏äÁöÑÊñá‰ª∂Â§πÊò†Â∞ÑÔºåÊ≤°Âá∫Áé∞ÁöÑËØùÈáçÊñ∞ËøûÊé•ËØïËØï„ÄÇ Âõõ. ÁªìÂ∞æÁ¨¨‰∏ÄÊ¨°ÂÆåÊàêmacÂíåwindows‰πãÈó¥ËøúÁ®ãÊ°åÈù¢ÁöÑÈÖçÁΩÆÔºåÂõûÂ§¥ÁúãÊÑüËßâÂÜôÂæóÊúâ‰∫õÂ§çÊùÇÔºåÂõ†‰∏∫Â§öËÆ∞ÂΩï‰∫Ü‰∏Ä‰∫õËá™Â∑±‰πüÊ≤°ÈÅáÂà∞ËøáÁöÑÈóÆÈ¢òÂíåÊÉÖÂÜµ„ÄÇÂ¶ÇÊûúÂêÑ‰ΩçËøòÈÅáÂà∞‰∫ÜÊñá‰∏≠Ê≤°ÊèêÂà∞ÁöÑÊÉÖÂÜµÔºåÊ¨¢ËøéËØÑËÆ∫ÁïôË®ÄÔºåÊàë‰ºöÁªßÁª≠Ë°•ÂÖÖÔΩû","categories":[{"name":"Â∑•ÂÖ∑","slug":"Â∑•ÂÖ∑","permalink":"https://equnee.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://equnee.github.io/tags/windows/"},{"name":"Mac","slug":"Mac","permalink":"https://equnee.github.io/tags/Mac/"}]},{"title":"üç° Mermaid ‚Äî Ë∂ÖÂ•ΩÁî®ÁöÑÊñáÊ°£ÂõæÂΩ¢Â∑•ÂÖ∑ÔºÅ","slug":"tool/markdown+mermaid","date":"2020-04-01T16:37:51.048Z","updated":"2023-05-04T09:26:31.173Z","comments":true,"path":"tool/markdown+mermaid/","link":"","permalink":"https://equnee.github.io/tool/markdown+mermaid/","excerpt":"","text":"‰∏Ä. MarkdownÔºàÁï• ‰∫å. Mermaid Âú®Á∫ø‰ΩìÈ™åÔºöhttps://mermaid.live/ 1. ‰∏∫‰ªÄ‰πàÁî® Mermaid Âú®ÈÖçÂêà Markdown ÂÜôÁ¨îËÆ∞Êó∂ÔºåÊúÄËÆ©ÊàëÂ§¥ÁñºÁöÑÂ∞±ÊòØÂ¶Ç‰Ωï‰ª•ÊúÄÁúÅÊó∂ÁúÅÂäõÁöÑÊñπÂºèÊèíÂÖ•ÊµÅÁ®ãÂõæ„ÄÇÊàëÂÅöËøáÂæàÂ§öÂ∞ùËØïÔºöÂ¶ÇÔºåÊâãÁªò„ÄÅ‰ΩøÁî®XmindÂØºÂõæËΩØ‰ª∂„ÄÅProcessOn‰πãÁ±ªÁöÑÂú®Á∫øÁªòÂõæÂ∑•ÂÖ∑Á≠â„ÄÇ‰ΩÜÂÆÉ‰ª¨ÈÉΩÊúâÊúÄÊòæËëóÁöÑÁº∫ÁÇπÔºöÊúÄÁªà‰ª•ÂõæÂÉèÂΩ¢ÂºèÂØºÂÖ•ÊñáÊ°£ÔºåÂõ†Ê≠§‰øÆÊîπÂíåÂØºÂá∫ÈùûÂ∏∏ÁπÅÁêê„ÄÇ ËÄå Mermaid ÂØπÊàëÊù•ËØ¥ÊòØ‰∏Ä‰∏™ËØ¥Ëøë‰πéÂÆåÁæéÁöÑÊñπÊ°àÔºÅ È´òÊïàÊòìÁî® ÂÆÉÁõ¥Êé•Âú® Markdown ‰∏≠‰ª•‰ª£Á†ÅÊÆµÁöÑÂΩ¢ÂºèÂàõÂª∫Âíå‰øÆÊîπÂõæË°®ÔºåÂπ∂ÂÆûÊó∂Ê∏≤Êüì‰∏∫ Svg ËßÜÂõæÔºåÂèØ‰ª•È´òÊïàÂà∂‰ΩúÁÆÄÊòìÁöÑÊµÅÁ®ãÂõæ„ÄÇÂπ∂‰∏îÈöèÊó∂‰øÆÊîπ„ÄÅÁ´ãÂç≥ÂèØËßÅ„ÄÇ ÂÆÉÂíå Markdown ‰∏ÄÊ†∑ÈÉΩÊòØÁ∫ØÊñáÊú¨Ê†ºÂºèÂ≠òÂÇ®ÁöÑËØ≠Ë®ÄÔºåÊòì‰∫é‰øùÂ≠òÂíåÂàÜ‰∫´„ÄÇ WebÂèãÂ•Ω ÂÆÉ‰∏çÂèóÂà∂‰∫éÁâπÂÆöÁºñËæëÂô®ÔºåÂ§ßÈÉ®ÂàÜÊîØÊåÅ Markdown ÁöÑÁºñËæëÂô®ÈÉΩÊîØÊåÅ Mermaid„ÄÇ ÂÆÉÂü∫‰∫é JavascriptÔºåÂèØÈõÜÊàêÂµåÂÖ•ÂâçÁ´ØÊ°ÜÊû∂ÔºåÂ¶Ç Vue„ÄÅHexoÁ≠â„ÄÇ 2. Mermaid Áî®Ê≥ïMermaid ÂèØÁªòÂà∂ÊµÅÁ®ãÂõæ„ÄÅÊó∂Â∫èÂõæ„ÄÅGitÂõæ„ÄÅÁ±ªÂõæ„ÄÅÈ•ºÂõæ„ÄÅÁîòÁâπÂõæÁ≠âÂõæË°®ÔºåËØ¶ÁªÜÂèØÊü•ÈòÖ ÂÆòÊñπÊñáÊ°£„ÄÇ‰∏ãÈù¢‰ª•ÊàëÂ∏∏Áî®ÁöÑ‰∏§‰∏™ÊµÅÁ®ãÂõæÊ®°Áâà‰Ωú‰∏∫Á§∫‰æãÔºà‰∏ªË¶ÅÂ±ïÁ§∫Ê†∑ÂºèÁöÑ‰∏§Áßç‰ΩøÁî®ÊñπÊ≥ïÔºâÔºö Âü∫Á°ÄÔºà‰ΩøÁî®Âü∫Êú¨Ê†∑ÂºèÔºâ graph LR T((\"Title\")):::p T ==> A([\"Pink\"]):::p T --> B([\"Green\"]):::g T --> C([\"Blue\"]):::b A -.-> a(\"light Pink\"):::lp B -.-> b(\"light Green\"):::lg C -.-> c(\"light Blue\"):::lb a -.- info[\"Info\"]:::info classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px graph LR T((&quot;Title&quot;)):::p T ==&gt; A([&quot;Pink&quot;]):::p T --&gt; B([&quot;Green&quot;]):::g T --&gt; C([&quot;Blue&quot;]):::b A -.-&gt; a(&quot;light Pink&quot;):::lp B -.-&gt; b(&quot;light Green&quot;):::lg C -.-&gt; c(&quot;light Blue&quot;):::lb a -.- info[&quot;Info&quot;]:::info%% Ê†∑ÂºèÔºö style T color:#fff classDef p fill:#ddaebd classDef b fill:#aab7d2 classDef g fill:#9ac5bb classDef lp fill:#f4e4e9 classDef lb fill:#d9dfeb classDef lg fill:#ddebe6 classDef info fill:#f6f6f7,color:#737379,stroke-dasharray: 3 3, stroke-width: 2px ËøõÈò∂Ôºà‰ΩøÁî®È¢ÑÂä†ËΩΩÊ†∑ÂºèÔºâ %%{ init: { 'themeVariables': { 'fontFamily': 'Noto Serif SC', 'mainBkg': '#f4e4e9', 'edgeLabelBackground': '#ddebe6' } } }%% graph TD T((\"Title\")):::pink T --> A A -.-> |\"text2\"| B subgraph \"subgraph\" A --> |\"text3\"|C:::lb end classDef pink fill:#ddaebd style B fill:#d9dfeb, stroke:#657eae,stroke-width:3px,stroke-dasharray: 5 3 %%&#123; init: &#123; &#x27;themeVariables&#x27;: &#123; &#x27;fontFamily&#x27;: &#x27;Noto Serif SC&#x27;, &#x27;mainBkg&#x27;: &#x27;#f4e4e9&#x27;, &#x27;edgeLabelBackground&#x27;: &#x27;#ddebe6&#x27; &#125; &#125;&#125;%%graph TDT((&quot;Title&quot;)):::pinkT --&gt; AA -.-&gt; |&quot;text2&quot;| Bsubgraph &quot;subgraph&quot;A --&gt; |&quot;text3&quot;|C:::lbendclassDef pink fill:#ddaebdstyle B fill:#d9dfeb, stroke:#657eae,stroke-width:3px,stroke-dasharray: 5 3 3. Hexo + Mermaid Êèí‰ª∂ ‰ª£Á†Å‰ªìÂ∫ì: https://github.com/webappdevelp/hexo-filter-mermaid-diagrams Ôºà1ÔºâÂÆâË£ÖÊèí‰ª∂$ yarn add hexo-filter-mermaid-diagrams Êàñ $ npm install hexo-filter-mermaid-diagrams Ôºà2ÔºâÁºñËæëÈÖçÁΩÆÂÆâË£ÖÂÆåÊàêÂêéÔºåÁºñËæëhexoÈÖçÁΩÆÊñá‰ª∂Ôºöconfig.yml # mermaid chartmermaid: enable: true version: &quot;7.1.2&quot; options: Ôºà3ÔºâÊ∑ªÂä†ËÑöÊú¨‰øÆÊîπÂÆåÈÖçÁΩÆÊñá‰ª∂ÂêéÔºåÁºñËæëÂçöÂÆ¢È°µÈù¢ÁªÑ‰ª∂ÁöÑfooterÈÉ®ÂàÜ„ÄÇËøôÊòØ‰∏∫‰∫ÜÂ∞Ü mermaid.js ‰ª• script ÂΩ¢ÂºèÊèíÂÖ•Âà∞ html Â∞æÈÉ®Ôºå‰ΩøÂÖ∂ËÉΩÊ≠£Â∏∏Ê∏≤Êüì„ÄÇ footerÊñá‰ª∂Â¶ÇÔºåfooter.pugÔºå after_footer.pug , after-footer.ejs Êàñ swigÔºåËØ•Êñá‰ª∂ÈÄöÂ∏∏Â≠òÊîæÂú®‰∏ªÈ¢òÁõÆÂΩï‰∏ãÁöÑlayoutÁõÆÂΩï‰∏≠„ÄÇ Ëã•ÂçöÂÆ¢‰ΩøÁî®pugÊ®°ÁâàÂºïÊìéÊ∏≤ÊüìÔºåÂú® after_footer.pugÊñá‰ª∂‰∏≠Ê∑ªÂä†Â¶Ç‰∏ã‰ª£Á†Å: if theme.mermaid.enable == true script(type=&#x27;text/javascript&#x27;, id=&#x27;maid-script&#x27; mermaidoptioins=theme.mermaid.options src=&#x27;https://unpkg.com/mermaid@&#x27;+ theme.mermaid.version + &#x27;/dist/mermaid.min.js&#x27; + &#x27;?v=&#x27; + theme.version) script. if (window.mermaid) &#123; var options = JSON.parse(document.getElementById(&#x27;maid-script&#x27;).getAttribute(&#x27;mermaidoptioins&#x27;)); mermaid.initialize(options); &#125; Ëã•‰ΩøÁî®ejsÂºïÊìéÊ∏≤ÊüìÔºåÂàôÂú®after-footer.ejsÊñá‰ª∂‰∏≠Ê∑ªÂä†Â¶Ç‰∏ã‰ª£Á†ÅÔºö &lt;% if (theme.mermaid.enable) &#123; %&gt; &lt;script src=&#x27;https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js&#x27;&gt;&lt;/script&gt; &lt;script&gt; if (window.mermaid) &#123; mermaid.initialize(&#123;theme: &#x27;neutral&#x27;&#125;); &#125; &lt;/script&gt;&lt;% &#125; %&gt; swigÊ®°ÁâàÂºïÊìéÔºö &#123;% if theme.mermaid.enable %&#125; &lt;script src=&#x27;https://unpkg.com/mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;/dist/mermaid.min.js&#x27;&gt;&lt;/script&gt; &lt;script&gt; if (window.mermaid) &#123; mermaid.initialize(&#123;&#123; JSON.stringify(theme.mermaid.options) &#125;&#125;); &#125; &lt;/script&gt;&#123;% endif %&#125; Ôºà4ÔºâË∏©Âùë‰ª•‰∏ä‰∏∫ÂÆòÊñπÊñáÊ°£‰∏≠ÁöÑÈÖçÁΩÆÊñπÊ≥ïÔºåËÄåÊàëÂú®ÂàùÊ¨°ÈÖçÁΩÆÁöÑËøáÁ®ã‰∏≠ÔºåËøòÈÅáÂà∞‰ª•‰∏ãÈóÆÈ¢òÂèØ‰æõÂèÇËÄÉÔºö htmlÈ°µÈù¢‰∏≠ÔºåmermaidÊÆµËêΩ‰ªÖÊòæÁ§∫‰∏∫‰ª£Á†ÅÂùóÔºåÂºÄÂèëËÄÖÂ∑•ÂÖ∑‰∏≠ËØ•ÊÆµËêΩ‰∏∫ÊôÆÈÄöÊ∫ê‰ª£Á†Å„ÄÇ ËøôÊòØÂõ†‰∏∫Êèí‰ª∂Ê≤°ÊúâÁîüÊïàÔºåÂ∫îÁ°Æ‰øùÊ≠£Á°ÆÂÆåÊàê‰∏äÈù¢‰∏§‰∏™Ê≠•È™§ÔºàÂÆâË£ÖÊèí‰ª∂„ÄÅÊâìÂºÄÈÖçÁΩÆÔºâ„ÄÇ htmlÈ°µÈù¢‰∏≠ÔºåmermaidÊÆµËêΩÊòæÁ§∫‰∏∫Á©∫ÁôΩÂõæÁâáÔºåÂºÄÂèëËÄÖÂ∑•ÂÖ∑‰∏≠Êü•ÁúãËØ•ÊÆµËêΩ‰∏∫svgÊñá‰ª∂ÔºåÊéßÂà∂Âè∞Êä•ÈîôÔºö Uncaught TypeError: Cannot read properties of null (reading‚Äômermaid‚Äô)„ÄÇ Ê≠§Êó∂Êèí‰ª∂Â∑≤ÁªèÁîüÊïàÔºåËÄåjs‰ª£Á†ÅÊñá‰ª∂ÂºïÂÖ•ÊúâËØØÔºåÊó†Ê≥ïÊàêÂäüÊ∏≤Êüì„ÄÇ ÁªßÁª≠Êü•Áúãhtml‰ª£Á†ÅÂèëÁé∞ÔºåÊñá‰ª∂Â∫ïÈÉ®ÁöÑ&lt;sctipt&gt;Ê†áÁ≠æ‰∏≠ÔºåÊòæÁ§∫ÊàëÂºïÂÖ•mermaidÁöÑurl‰∏∫Ôºö &lt;script type=&quot;text/javascript&quot; id=&quot;maid-script&quot; src=&quot;https://unpkg.com/mermaid@10.0.2/dist/mermaid.min.js?v=undefined&quot;&gt;&lt;/script&gt; ËøôÊÆµ‰ª£Á†ÅÊòØÁî±ÂÆòÊñπÊèê‰æõÁöÑËÑöÊú¨„ÄÅÂú®footerÊñá‰ª∂‰∏≠Ê†πÊçÆÁî®Êà∑ÁöÑÈÖçÁΩÆÁªÑÂêàÊàêÁöÑÔºö script(type=&#x27;text/javascript&#x27;, id=&#x27;maid-script&#x27; mermaidoptioins=theme.mermaid.options src=&#x27;https://unpkg.com/mermaid@&#x27;+ theme.mermaid.version + &#x27;/dist/mermaid.min.js&#x27; + &#x27;?v=&#x27; + theme.version) Â¶ÇÊûúÈÖçÁΩÆÊúâËØØÂàô‰ºöÁîüÊàêÈîôËØØÁöÑurlÔºåÁúãËµ∑Êù•ÊòØversionÁöÑÈóÆÈ¢òÔºå‰∫éÊòØÊàëÂ∞ÜurlÊîπ‰∏∫Áõ¥Êé•ÂºïÂÖ•jsdelivr‰∏äÁöÑËµÑÊ∫êÔºåÈÅÇËÉΩÊ≠£Â∏∏Ê∏≤ÊüìÔºö src=&#x27;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&#x27;)","categories":[{"name":"Â∑•ÂÖ∑","slug":"Â∑•ÂÖ∑","permalink":"https://equnee.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Mermaid","slug":"Mermaid","permalink":"https://equnee.github.io/tags/Mermaid/"},{"name":"Markdown","slug":"Markdown","permalink":"https://equnee.github.io/tags/Markdown/"}]}],"categories":[{"name":"JavaÂü∫Á°Ä","slug":"JavaÂü∫Á°Ä","permalink":"https://equnee.github.io/categories/Java%E5%9F%BA%E7%A1%80/"},{"name":"Êï∞ÊçÆÁªìÊûÑ","slug":"Êï∞ÊçÆÁªìÊûÑ","permalink":"https://equnee.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"ËÆæËÆ°Ê®°Âºè","slug":"ËÆæËÆ°Ê®°Âºè","permalink":"https://equnee.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"},{"name":"Â∑•ÂÖ∑","slug":"Â∑•ÂÖ∑","permalink":"https://equnee.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://equnee.github.io/tags/Java/"},{"name":"I/O","slug":"I-O","permalink":"https://equnee.github.io/tags/I-O/"},{"name":"HashMap","slug":"HashMap","permalink":"https://equnee.github.io/tags/HashMap/"},{"name":"Chain","slug":"Chain","permalink":"https://equnee.github.io/tags/Chain/"},{"name":"singleton","slug":"singleton","permalink":"https://equnee.github.io/tags/singleton/"},{"name":"windows","slug":"windows","permalink":"https://equnee.github.io/tags/windows/"},{"name":"Mac","slug":"Mac","permalink":"https://equnee.github.io/tags/Mac/"},{"name":"Mermaid","slug":"Mermaid","permalink":"https://equnee.github.io/tags/Mermaid/"},{"name":"Markdown","slug":"Markdown","permalink":"https://equnee.github.io/tags/Markdown/"}]}